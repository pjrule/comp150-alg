!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=251)}([function(e,t,n){"use strict";e.exports=n(113)},function(e,t,n){var i;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var i=arguments[t];if(i){var o=typeof i;if("string"===o||"number"===o)e.push(i);else if(Array.isArray(i)&&i.length){var s=r.apply(null,i);s&&e.push(s)}else if("object"===o)for(var a in i)n.call(i,a)&&i[a]&&e.push(a)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(i=function(){return r}.apply(t,[]))||(e.exports=i)}()},function(e,t,n){var i=n(63),r="object"==typeof self&&self&&self.Object===Object&&self,o=i||r||Function("return this")();e.exports=o},function(e,t){var n=Array.isArray;e.exports=n},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){var i=n(123),r=n(128);e.exports=function(e,t){var n=r(e,t);return i(n)?n:void 0}},function(e,t,n){var i=n(8),r=n(124),o=n(125),s=i?i.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":s&&s in Object(e)?r(e):o(e)}},function(e,t,n){var i=n(2).Symbol;e.exports=i},function(e,t){e.exports=function(e,t){var n=-1,i=e.length;for(t||(t=Array(i));++n<i;)t[n]=e[n];return t}},function(e,t,n){var i=n(7),r=n(5);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==i(e)}},function(e,t,n){var i=n(79),r=n(40);e.exports=function(e,t,n,o){var s=!n;n||(n={});for(var a=-1,l=t.length;++a<l;){var u=t[a],d=o?o(n[u],e[u],u,n,e):void 0;void 0===d&&(d=e[u]),s?r(n,u,d):i(n,u,d)}return n}},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var i=n(187),r=n(46),o=n(188),s=n(189),a=n(62),l=n(7),u=n(64),d=u(i),c=u(r),h=u(o),f=u(s),p=u(a),v=l;(i&&"[object DataView]"!=v(new i(new ArrayBuffer(1)))||r&&"[object Map]"!=v(new r)||o&&"[object Promise]"!=v(o.resolve())||s&&"[object Set]"!=v(new s)||a&&"[object WeakMap]"!=v(new a))&&(v=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,i=n?u(n):"";if(i)switch(i){case d:return"[object DataView]";case c:return"[object Map]";case h:return"[object Promise]";case f:return"[object Set]";case p:return"[object WeakMap]"}return t}),e.exports=v},function(e,t,n){var i=n(10);e.exports=function(e){if("string"==typeof e||i(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){e.exports=n(248)()},function(e,t){e.exports=function(e){return e}},function(e,t,n){var i=n(7),r=n(4);e.exports=function(e){if(!r(e))return!1;var t=i(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t,n){var i=n(19),r=n(4);e.exports=function(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=i(e.prototype),o=e.apply(n,t);return r(o)?o:n}}},function(e,t,n){var i=n(4),r=Object.create,o=function(){function e(){}return function(t){if(!i(t))return{};if(r)return r(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();e.exports=o},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var i=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==i||"symbol"!=i&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var i=n(80),r=n(81),o=n(26);e.exports=function(e){return o(e)?i(e):r(e)}},function(e,t,n){var i=n(153),r=n(5),o=Object.prototype,s=o.hasOwnProperty,a=o.propertyIsEnumerable,l=i(function(){return arguments}())?i:function(e){return r(e)&&s.call(e,"callee")&&!a.call(e,"callee")};e.exports=l},function(e,t,n){(function(e){var i=n(2),r=n(154),o=t&&!t.nodeType&&t,s=o&&"object"==typeof e&&e&&!e.nodeType&&e,a=s&&s.exports===o?i.Buffer:void 0,l=(a?a.isBuffer:void 0)||r;e.exports=l}).call(this,n(41)(e))},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){var i=n(17),r=n(43);e.exports=function(e){return null!=e&&r(e.length)&&!i(e)}},function(e,t,n){var i=n(28),r=n(163),o=n(164),s=n(165),a=n(166),l=n(167);function u(e){var t=this.__data__=new i(e);this.size=t.size}u.prototype.clear=r,u.prototype.delete=o,u.prototype.get=s,u.prototype.has=a,u.prototype.set=l,e.exports=u},function(e,t,n){var i=n(158),r=n(159),o=n(160),s=n(161),a=n(162);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=s,l.prototype.set=a,e.exports=l},function(e,t,n){var i=n(12);e.exports=function(e,t){for(var n=e.length;n--;)if(i(e[n][0],t))return n;return-1}},function(e,t,n){var i=n(6)(Object,"create");e.exports=i},function(e,t,n){var i=n(176);e.exports=function(e,t){var n=e.__data__;return i(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var i=n(80),r=n(181),o=n(26);e.exports=function(e){return o(e)?i(e,!0):r(e)}},function(e,t,n){var i=n(60),r=n(129),o=n(130),s=n(65),a=n(148),l=n(69),u=n(149),d=n(71),c=n(73),h=n(77),f=Math.max;e.exports=function(e,t,n,p,v,m,y,g){var b=2&t;if(!b&&"function"!=typeof e)throw new TypeError("Expected a function");var _=p?p.length:0;if(_||(t&=-97,p=v=void 0),y=void 0===y?y:f(h(y),0),g=void 0===g?g:h(g),_-=v?v.length:0,64&t){var w=p,k=v;p=v=void 0}var x=b?void 0:l(e),S=[e,t,n,p,v,w,k,m,y,g];if(x&&u(S,x),e=S[0],t=S[1],n=S[2],p=S[3],v=S[4],!(g=S[9]=void 0===S[9]?b?0:e.length:f(S[9]-_,0))&&24&t&&(t&=-25),t&&1!=t)O=8==t||16==t?o(e,t,g):32!=t&&33!=t||v.length?s.apply(void 0,S):a(e,t,n,p);else var O=r(e,t,n);return c((x?i:d)(O,S),e,t)}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var i=n(19),r=n(36);function o(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}o.prototype=i(r.prototype),o.prototype.constructor=o,e.exports=o},function(e,t){e.exports=function(){}},function(e,t,n){var i=n(140),r=n(72)(i);e.exports=r},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length;++n<i&&!1!==t(e[n],n,e););return e}},function(e,t){e.exports=function(e,t){for(var n=-1,i=e.length,r=0,o=[];++n<i;){var s=e[n];s!==t&&"__lodash_placeholder__"!==s||(e[n]="__lodash_placeholder__",o[r++]=n)}return o}},function(e,t,n){var i=n(74);e.exports=function(e,t,n){"__proto__"==t&&i?i(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var i=n(155),r=n(25),o=n(44),s=o&&o.isTypedArray,a=s?r(s):i;e.exports=a},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){(function(e){var i=n(63),r=t&&!t.nodeType&&t,o=r&&"object"==typeof e&&e&&!e.nodeType&&e,s=o&&o.exports===r&&i.process,a=function(){try{var e=o&&o.require&&o.require("util").types;return e||s&&s.binding&&s.binding("util")}catch(e){}}();e.exports=a}).call(this,n(41)(e))},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var i=n(6)(n(2),"Map");e.exports=i},function(e,t,n){var i=n(168),r=n(175),o=n(177),s=n(178),a=n(179);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=s,l.prototype.set=a,e.exports=l},function(e,t,n){var i=n(184),r=n(85),o=Object.prototype.propertyIsEnumerable,s=Object.getOwnPropertySymbols,a=s?function(e){return null==e?[]:(e=Object(e),i(s(e),(function(t){return o.call(e,t)})))}:r;e.exports=a},function(e,t){e.exports=function(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}},function(e,t,n){var i=n(82)(Object.getPrototypeOf,Object);e.exports=i},function(e,t,n){var i=n(89);e.exports=function(e){var t=new e.constructor(e.byteLength);return new i(t).set(new i(e)),t}},function(e,t,n){var i=n(206),r=n(5);e.exports=function e(t,n,o,s,a){return t===n||(null==t||null==n||!r(t)&&!r(n)?t!=t&&n!=n:i(t,n,o,s,e,a))}},function(e,t,n){var i=n(3),r=n(10),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,s=/^\w*$/;e.exports=function(e,t){if(i(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!r(e))||(s.test(e)||!o.test(e)||null!=t&&e in Object(t))}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}},function(e,t,n){var i=n(16),r=n(103),o=n(37);e.exports=function(e,t){return o(r(e,t,i),e+"")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];function i(){for(var e=arguments.length,n=Array(e),i=0;i<e;i++)n[i]=arguments[i];var r=null;return t.forEach((function(e){if(null==r){var t=e.apply(void 0,n);null!=t&&(r=t)}})),r}return(0,o.default)(i)};var i,r=n(250),o=(i=r)&&i.__esModule?i:{default:i};e.exports=t.default},function(e,t,n){e.exports=n(111)},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function s(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=s(e),u=1;u<arguments.length;u++){for(var d in n=Object(arguments[u]))r.call(n,d)&&(l[d]=n[d]);if(i){a=i(n);for(var c=0;c<a.length;c++)o.call(n,a[c])&&(l[a[c]]=n[a[c]])}}return l}},function(e,t){e.exports={}},function(e,t,n){var i=n(16),r=n(61),o=r?function(e,t){return r.set(e,t),e}:i;e.exports=o},function(e,t,n){var i=n(62),r=i&&new i;e.exports=r},function(e,t,n){var i=n(6)(n(2),"WeakMap");e.exports=i},function(e,t,n){(function(t){var n="object"==typeof t&&t&&t.Object===Object&&t;e.exports=n}).call(this,n(34))},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var i=n(66),r=n(67),o=n(131),s=n(18),a=n(68),l=n(76),u=n(147),d=n(39),c=n(2);e.exports=function e(t,n,h,f,p,v,m,y,g,b){var _=128&n,w=1&n,k=2&n,x=24&n,S=512&n,O=k?void 0:s(t);return function E(){for(var T=arguments.length,D=Array(T),C=T;C--;)D[C]=arguments[C];if(x)var M=l(E),P=o(D,M);if(f&&(D=i(D,f,p,x)),v&&(D=r(D,v,m,x)),T-=P,x&&T<b){var N=d(D,M);return a(t,n,e,E.placeholder,h,D,N,y,g,b-T)}var F=w?h:this,I=k?F[t]:t;return T=D.length,y?D=u(D,y):S&&T>1&&D.reverse(),_&&g<T&&(D.length=g),this&&this!==c&&this instanceof E&&(I=O||s(I)),I.apply(F,D)}}},function(e,t){var n=Math.max;e.exports=function(e,t,i,r){for(var o=-1,s=e.length,a=i.length,l=-1,u=t.length,d=n(s-a,0),c=Array(u+d),h=!r;++l<u;)c[l]=t[l];for(;++o<a;)(h||o<s)&&(c[i[o]]=e[o]);for(;d--;)c[l++]=e[o++];return c}},function(e,t){var n=Math.max;e.exports=function(e,t,i,r){for(var o=-1,s=e.length,a=-1,l=i.length,u=-1,d=t.length,c=n(s-l,0),h=Array(c+d),f=!r;++o<c;)h[o]=e[o];for(var p=o;++u<d;)h[p+u]=t[u];for(;++a<l;)(f||o<s)&&(h[p+i[a]]=e[o++]);return h}},function(e,t,n){var i=n(132),r=n(71),o=n(73);e.exports=function(e,t,n,s,a,l,u,d,c,h){var f=8&t;t|=f?32:64,4&(t&=~(f?64:32))||(t&=-4);var p=[e,t,a,f?l:void 0,f?u:void 0,f?void 0:l,f?void 0:u,d,c,h],v=n.apply(void 0,p);return i(e)&&r(v,p),v.placeholder=s,o(v,e,t)}},function(e,t,n){var i=n(61),r=n(133),o=i?function(e){return i.get(e)}:r;e.exports=o},function(e,t,n){var i=n(19),r=n(36);function o(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=void 0}o.prototype=i(r.prototype),o.prototype.constructor=o,e.exports=o},function(e,t,n){var i=n(60),r=n(72)(i);e.exports=r},function(e,t){var n=Date.now;e.exports=function(e){var t=0,i=0;return function(){var r=n(),o=16-(r-i);if(i=r,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var i=n(138),r=n(139),o=n(37),s=n(142);e.exports=function(e,t,n){var a=t+"";return o(e,r(a,s(i(a),n)))}},function(e,t,n){var i=n(6),r=function(){try{var e=i(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=r},function(e,t,n){var i=n(143);e.exports=function(e,t){return!!(null==e?0:e.length)&&i(e,t,0)>-1}},function(e,t){e.exports=function(e){return e.placeholder}},function(e,t,n){var i=n(150);e.exports=function(e){var t=i(e),n=t%1;return t==t?n?t-n:t:0}},function(e,t,n){var i=n(11),r=n(22);e.exports=function(e,t){return e&&i(t,r(t),e)}},function(e,t,n){var i=n(40),r=n(12),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n){var s=e[t];o.call(e,t)&&r(s,n)&&(void 0!==n||t in e)||i(e,t,n)}},function(e,t,n){var i=n(152),r=n(23),o=n(3),s=n(24),a=n(21),l=n(42),u=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=o(e),d=!n&&r(e),c=!n&&!d&&s(e),h=!n&&!d&&!c&&l(e),f=n||d||c||h,p=f?i(e.length,String):[],v=p.length;for(var m in e)!t&&!u.call(e,m)||f&&("length"==m||c&&("offset"==m||"parent"==m)||h&&("buffer"==m||"byteLength"==m||"byteOffset"==m)||a(m,v))||p.push(m);return p}},function(e,t,n){var i=n(45),r=n(156),o=Object.prototype.hasOwnProperty;e.exports=function(e){if(!i(e))return r(e);var t=[];for(var n in Object(e))o.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var i=n(27),r=n(38),o=n(79),s=n(78),a=n(180),l=n(84),u=n(9),d=n(183),c=n(185),h=n(87),f=n(186),p=n(13),v=n(190),m=n(191),y=n(91),g=n(3),b=n(24),_=n(195),w=n(4),k=n(197),x=n(22),S={};S["[object Arguments]"]=S["[object Array]"]=S["[object ArrayBuffer]"]=S["[object DataView]"]=S["[object Boolean]"]=S["[object Date]"]=S["[object Float32Array]"]=S["[object Float64Array]"]=S["[object Int8Array]"]=S["[object Int16Array]"]=S["[object Int32Array]"]=S["[object Map]"]=S["[object Number]"]=S["[object Object]"]=S["[object RegExp]"]=S["[object Set]"]=S["[object String]"]=S["[object Symbol]"]=S["[object Uint8Array]"]=S["[object Uint8ClampedArray]"]=S["[object Uint16Array]"]=S["[object Uint32Array]"]=!0,S["[object Error]"]=S["[object Function]"]=S["[object WeakMap]"]=!1,e.exports=function e(t,n,O,E,T,D){var C,M=1&n,P=2&n,N=4&n;if(O&&(C=T?O(t,E,T,D):O(t)),void 0!==C)return C;if(!w(t))return t;var F=g(t);if(F){if(C=v(t),!M)return u(t,C)}else{var I=p(t),j="[object Function]"==I||"[object GeneratorFunction]"==I;if(b(t))return l(t,M);if("[object Object]"==I||"[object Arguments]"==I||j&&!T){if(C=P||j?{}:y(t),!M)return P?c(t,a(C,t)):d(t,s(C,t))}else{if(!S[I])return T?t:{};C=m(t,I,M)}}D||(D=new i);var R=D.get(t);if(R)return R;D.set(t,C),k(t)?t.forEach((function(i){C.add(e(i,n,O,i,t,D))})):_(t)&&t.forEach((function(i,r){C.set(r,e(i,n,O,r,t,D))}));var A=N?P?f:h:P?keysIn:x,z=F?void 0:A(t);return r(z||t,(function(i,r){z&&(i=t[r=i]),o(C,r,e(i,n,O,r,t,D))})),C}},function(e,t,n){(function(e){var i=n(2),r=t&&!t.nodeType&&t,o=r&&"object"==typeof e&&e&&!e.nodeType&&e,s=o&&o.exports===r?i.Buffer:void 0,a=s?s.allocUnsafe:void 0;e.exports=function(e,t){if(t)return e.slice();var n=e.length,i=a?a(n):new e.constructor(n);return e.copy(i),i}}).call(this,n(41)(e))},function(e,t){e.exports=function(){return[]}},function(e,t,n){var i=n(49),r=n(50),o=n(48),s=n(85),a=Object.getOwnPropertySymbols?function(e){for(var t=[];e;)i(t,o(e)),e=r(e);return t}:s;e.exports=a},function(e,t,n){var i=n(88),r=n(48),o=n(22);e.exports=function(e){return i(e,o,r)}},function(e,t,n){var i=n(49),r=n(3);e.exports=function(e,t,n){var o=t(e);return r(e)?o:i(o,n(e))}},function(e,t,n){var i=n(2).Uint8Array;e.exports=i},function(e,t,n){var i=n(51);e.exports=function(e,t){var n=t?i(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}},function(e,t,n){var i=n(19),r=n(50),o=n(45);e.exports=function(e){return"function"!=typeof e.constructor||o(e)?{}:i(r(e))}},function(e,t,n){var i=n(7),r=n(50),o=n(5),s=Function.prototype,a=Object.prototype,l=s.toString,u=a.hasOwnProperty,d=l.call(Object);e.exports=function(e){if(!o(e)||"[object Object]"!=i(e))return!1;var t=r(e);if(null===t)return!0;var n=u.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&l.call(n)==d}},function(e,t,n){var i=n(94),r=n(209),o=n(95);e.exports=function(e,t,n,s,a,l){var u=1&n,d=e.length,c=t.length;if(d!=c&&!(u&&c>d))return!1;var h=l.get(e);if(h&&l.get(t))return h==t;var f=-1,p=!0,v=2&n?new i:void 0;for(l.set(e,t),l.set(t,e);++f<d;){var m=e[f],y=t[f];if(s)var g=u?s(y,m,f,t,e,l):s(m,y,f,e,t,l);if(void 0!==g){if(g)continue;p=!1;break}if(v){if(!r(t,(function(e,t){if(!o(v,t)&&(m===e||a(m,e,n,s,l)))return v.push(t)}))){p=!1;break}}else if(m!==y&&!a(m,y,n,s,l)){p=!1;break}}return l.delete(e),l.delete(t),p}},function(e,t,n){var i=n(47),r=n(207),o=n(208);function s(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new i;++t<n;)this.add(e[t])}s.prototype.add=s.prototype.push=r,s.prototype.has=o,e.exports=s},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var i=n(4);e.exports=function(e){return e==e&&!i(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var i=n(99),r=n(14);e.exports=function(e,t){for(var n=0,o=(t=i(t,e)).length;null!=e&&n<o;)e=e[r(t[n++])];return n&&n==o?e:void 0}},function(e,t,n){var i=n(3),r=n(53),o=n(100),s=n(101);e.exports=function(e,t){return i(e)?e:r(e,t)?[e]:o(s(e))}},function(e,t,n){var i=n(217),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,s=i((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(r,(function(e,n,i,r){t.push(i?r.replace(o,"$1"):n||e)})),t}));e.exports=s},function(e,t,n){var i=n(219);e.exports=function(e){return null==e?"":i(e)}},function(e,t,n){var i=n(49),r=n(229);e.exports=function e(t,n,o,s,a){var l=-1,u=t.length;for(o||(o=r),a||(a=[]);++l<u;){var d=t[l];n>0&&o(d)?n>1?e(d,n-1,o,s,a):i(a,d):s||(a[a.length]=d)}return a}},function(e,t,n){var i=n(20),r=Math.max;e.exports=function(e,t,n){return t=r(void 0===t?e.length-1:t,0),function(){for(var o=arguments,s=-1,a=r(o.length-t,0),l=Array(a);++s<a;)l[s]=o[t+s];s=-1;for(var u=Array(t+1);++s<t;)u[s]=o[s];return u[t]=n(l),i(e,this,u)}}},function(e,t,n){var i=n(27),r=n(105),o=n(233),s=n(235),a=n(4),l=n(32),u=n(107);e.exports=function e(t,n,d,c,h){t!==n&&o(n,(function(o,l){if(h||(h=new i),a(o))s(t,n,l,d,e,c,h);else{var f=c?c(u(t,l),o,l+"",t,n,h):void 0;void 0===f&&(f=o),r(t,l,f)}}),l)}},function(e,t,n){var i=n(40),r=n(12);e.exports=function(e,t,n){(void 0===n||r(e[t],n))&&(void 0!==n||t in e)||i(e,t,n)}},function(e,t,n){var i=n(26),r=n(5);e.exports=function(e){return r(e)&&i(e)}},function(e,t){e.exports=function(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}},function(e,t,n){"use strict";var i=function(){};e.exports=i},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(114)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=n(0),o=h(r),s=h(n(117)),a=h(n(240)),l=h(n(241)),u=h(n(245)),d=h(n(246)),c=h(n(15));function h(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),i=e.identifier;return n.updateGraph=n.updateGraph.bind(n),n.state={identifier:void 0!==i?i:d.default.v4()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentDidMount",value:function(){this.edges=new u.default.DataSet,this.edges.add(this.props.graph.edges),this.nodes=new u.default.DataSet,this.nodes.add(this.props.graph.nodes),this.updateGraph()}},{key:"shouldComponentUpdate",value:function(e,t){var n=!(0,a.default)(this.props.graph.nodes,e.graph.nodes),i=!(0,a.default)(this.props.graph.edges,e.graph.edges),r=!(0,a.default)(this.props.options,e.options),o=!(0,a.default)(this.props.events,e.events);if(n){var s=function(e,t){return e.id===t.id},u=(0,l.default)(this.props.graph.nodes,e.graph.nodes,s),d=(0,l.default)(e.graph.nodes,this.props.graph.nodes,s),c=(0,l.default)((0,l.default)(e.graph.nodes,this.props.graph.nodes,a.default),d);this.patchNodes({nodesRemoved:u,nodesAdded:d,nodesChanged:c})}if(i){var h=(0,l.default)(this.props.graph.edges,e.graph.edges,a.default),f=(0,l.default)(e.graph.edges,this.props.graph.edges,a.default),p=(0,l.default)((0,l.default)(e.graph.edges,this.props.graph.edges,a.default),f);this.patchEdges({edgesRemoved:h,edgesAdded:f,edgesChanged:p})}if(r&&this.Network.setOptions(e.options),o){var v=this.props.events||{},m=!0,y=!1,g=void 0;try{for(var b,_=Object.keys(v)[Symbol.iterator]();!(m=(b=_.next()).done);m=!0){var w=b.value;this.Network.off(w,v[w])}}catch(e){y=!0,g=e}finally{try{!m&&_.return&&_.return()}finally{if(y)throw g}}v=e.events||{};var k=!0,x=!1,S=void 0;try{for(var O,E=Object.keys(v)[Symbol.iterator]();!(k=(O=E.next()).done);k=!0){var T=O.value;this.Network.on(T,v[T])}}catch(e){x=!0,S=e}finally{try{!k&&E.return&&E.return()}finally{if(x)throw S}}}return!1}},{key:"componentDidUpdate",value:function(){this.updateGraph()}},{key:"patchEdges",value:function(e){var t=e.edgesRemoved,n=e.edgesAdded,i=e.edgesChanged;this.edges.remove(t),this.edges.add(n),this.edges.update(i)}},{key:"patchNodes",value:function(e){var t=e.nodesRemoved,n=e.nodesAdded,i=e.nodesChanged;this.nodes.remove(t),this.nodes.add(n),this.nodes.update(i)}},{key:"updateGraph",value:function(){var e=document.getElementById(this.state.identifier),t=(0,s.default)({physics:{stabilization:!1},autoResize:!1,edges:{smooth:!1,color:"#000000",width:.5,arrows:{to:{enabled:!0,scaleFactor:.5}}}},this.props.options);this.Network=new u.default.Network(e,Object.assign({},this.props.graph,{edges:this.edges,nodes:this.nodes}),t),this.props.getNetwork&&this.props.getNetwork(this.Network),this.props.getNodes&&this.props.getNodes(this.nodes),this.props.getEdges&&this.props.getEdges(this.edges);var n=this.props.events||{},i=!0,r=!1,o=void 0;try{for(var a,l=Object.keys(n)[Symbol.iterator]();!(i=(a=l.next()).done);i=!0){var d=a.value;this.Network.on(d,n[d])}}catch(e){r=!0,o=e}finally{try{!i&&l.return&&l.return()}finally{if(r)throw o}}}},{key:"render",value:function(){var e=this.state.identifier,t=this.props.style;return o.default.createElement("div",{id:e,style:t},e)}}]),t}(r.Component);f.defaultProps={graph:{},style:{width:"100%",height:"100%"}},f.propTypes={graph:c.default.object,style:c.default.object,getNetwork:c.default.func,getNodes:c.default.func,getEdges:c.default.func},t.default=f},function(e,t,n){var i=function(){return this}()||Function("return this")(),r=i.regeneratorRuntime&&Object.getOwnPropertyNames(i).indexOf("regeneratorRuntime")>=0,o=r&&i.regeneratorRuntime;if(i.regeneratorRuntime=void 0,e.exports=n(112),r)i.regeneratorRuntime=o;else try{delete i.regeneratorRuntime}catch(e){i.regeneratorRuntime=void 0}},function(e,t){!function(t){"use strict";var n=Object.prototype,i=n.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",s=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag",l="object"==typeof e,u=t.regeneratorRuntime;if(u)l&&(e.exports=u);else{(u=t.regeneratorRuntime=l?e.exports:{}).wrap=v;var d={},c={};c[o]=function(){return this};var h=Object.getPrototypeOf,f=h&&h(h(E([])));f&&f!==n&&i.call(f,o)&&(c=f);var p=b.prototype=y.prototype=Object.create(c);g.prototype=p.constructor=b,b.constructor=g,b[a]=g.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,a in e||(e[a]="GeneratorFunction")),e.prototype=Object.create(p),e},u.awrap=function(e){return{__await:e}},_(w.prototype),w.prototype[s]=function(){return this},u.AsyncIterator=w,u.async=function(e,t,n,i){var r=new w(v(e,t,n,i));return u.isGeneratorFunction(t)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},_(p),p[a]="Generator",p[o]=function(){return this},p.toString=function(){return"[object Generator]"},u.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},u.values=E,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!e)for(var t in this)"t"===t.charAt(0)&&i.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,i){return s.type="throw",s.arg=e,t.next=n,i&&(t.method="next",t.arg=void 0),!!i}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],s=o.completion;if("root"===o.tryLoc)return n("end");if(o.tryLoc<=this.prev){var a=i.call(o,"catchLoc"),l=i.call(o,"finallyLoc");if(a&&l){if(this.prev<o.catchLoc)return n(o.catchLoc,!0);if(this.prev<o.finallyLoc)return n(o.finallyLoc)}else if(a){if(this.prev<o.catchLoc)return n(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return n(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&i.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),S(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var r=i.arg;S(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:E(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}}}function v(e,t,n,i){var r=t&&t.prototype instanceof y?t:y,o=Object.create(r.prototype),s=new O(i||[]);return o._invoke=function(e,t,n){var i="suspendedStart";return function(r,o){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===r)throw o;return T()}for(n.method=r,n.arg=o;;){var s=n.delegate;if(s){var a=k(s,n);if(a){if(a===d)continue;return a}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===i)throw i="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i="executing";var l=m(e,t,n);if("normal"===l.type){if(i=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(i="completed",n.method="throw",n.arg=l.arg)}}}(e,n,s),o}function m(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function y(){}function g(){}function b(){}function _(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function w(e){var t;this._invoke=function(n,r){function o(){return new Promise((function(t,o){!function t(n,r,o,s){var a=m(e[n],e,r);if("throw"!==a.type){var l=a.arg,u=l.value;return u&&"object"==typeof u&&i.call(u,"__await")?Promise.resolve(u.__await).then((function(e){t("next",e,o,s)}),(function(e){t("throw",e,o,s)})):Promise.resolve(u).then((function(e){l.value=e,o(l)}),s)}s(a.arg)}(n,r,t,o)}))}return t=t?t.then(o,o):o()}}function k(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method))return d;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return d}var i=m(n,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,d;var r=i.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function x(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function S(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(x,this),this.reset(!0)}function E(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,r=function t(){for(;++n<e.length;)if(i.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return r.next=r}}return{next:T}}function T(){return{value:void 0,done:!0}}}(function(){return this}()||Function("return this")())},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var i=n(58),r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,s=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,d=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,h=r?Symbol.for("react.forward_ref"):60112,f=r?Symbol.for("react.suspense"):60113,p=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116,m="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function _(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}_.prototype.isReactComponent={},_.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=_.prototype;var x=k.prototype=new w;x.constructor=k,i(x,_.prototype),x.isPureReactComponent=!0;var S={current:null},O=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var i,r={},s=null,a=null;if(null!=t)for(i in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(s=""+t.key),t)O.call(t,i)&&!E.hasOwnProperty(i)&&(r[i]=t[i]);var l=arguments.length-2;if(1===l)r.children=n;else if(1<l){for(var u=Array(l),d=0;d<l;d++)u[d]=arguments[d+2];r.children=u}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===r[i]&&(r[i]=l[i]);return{$$typeof:o,type:e,key:s,ref:a,props:r,_owner:S.current}}function D(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var C=/\/+/g,M=[];function P(e,t,n,i){if(M.length){var r=M.pop();return r.result=e,r.keyPrefix=t,r.func=n,r.context=i,r.count=0,r}return{result:e,keyPrefix:t,func:n,context:i,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function F(e,t,n){return null==e?0:function e(t,n,i,r){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var l=!1;if(null===t)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case o:case s:l=!0}}if(l)return i(r,t,""===n?"."+I(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var d=n+I(a=t[u],u);l+=e(a,d,i,r)}else if(null===t||"object"!=typeof t?d=null:d="function"==typeof(d=m&&t[m]||t["@@iterator"])?d:null,"function"==typeof d)for(t=d.call(t),u=0;!(a=t.next()).done;)l+=e(a=a.value,d=n+I(a,u++),i,r);else if("object"===a)throw i=""+t,Error(y(31,"[object Object]"===i?"object with keys {"+Object.keys(t).join(", ")+"}":i,""));return l}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function j(e,t){e.func.call(e.context,t,e.count++)}function R(e,t,n){var i=e.result,r=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?A(e,i,n,(function(e){return e})):null!=e&&(D(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,r+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(C,"$&/")+"/")+n)),i.push(e))}function A(e,t,n,i,r){var o="";null!=n&&(o=(""+n).replace(C,"$&/")+"/"),F(e,R,t=P(t,o,i,r)),N(t)}var z={current:null};function L(){var e=z.current;if(null===e)throw Error(y(321));return e}var Y={ReactCurrentDispatcher:z,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:i};t.Children={map:function(e,t,n){if(null==e)return e;var i=[];return A(e,i,null,t,n),i},forEach:function(e,t,n){if(null==e)return e;F(e,j,t=P(null,null,t,n)),N(t)},count:function(e){return F(e,(function(){return null}),null)},toArray:function(e){var t=[];return A(e,t,null,(function(e){return e})),t},only:function(e){if(!D(e))throw Error(y(143));return e}},t.Component=_,t.Fragment=a,t.Profiler=u,t.PureComponent=k,t.StrictMode=l,t.Suspense=f,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Y,t.cloneElement=function(e,t,n){if(null==e)throw Error(y(267,e));var r=i({},e.props),s=e.key,a=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,l=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(d in t)O.call(t,d)&&!E.hasOwnProperty(d)&&(r[d]=void 0===t[d]&&void 0!==u?u[d]:t[d])}var d=arguments.length-2;if(1===d)r.children=n;else if(1<d){u=Array(d);for(var c=0;c<d;c++)u[c]=arguments[c+2];r.children=u}return{$$typeof:o,type:e.type,key:s,ref:a,props:r,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:c,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:d,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:h,render:e}},t.isValidElement=D,t.lazy=function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var i=n(0),r=n(58),o=n(115);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!i)throw Error(s(227));function a(e,t,n,i,r,o,s,a,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var l=!1,u=null,d=!1,c=null,h={onError:function(e){l=!0,u=e}};function f(e,t,n,i,r,o,s,d,c){l=!1,u=null,a.apply(h,arguments)}var p=null,v=null,m=null;function y(e,t,n){var i=e.type||"unknown-event";e.currentTarget=m(n),function(e,t,n,i,r,o,a,h,p){if(f.apply(this,arguments),l){if(!l)throw Error(s(198));var v=u;l=!1,u=null,d||(d=!0,c=v)}}(i,t,void 0,e),e.currentTarget=null}var g=null,b={};function _(){if(g)for(var e in b){var t=b[e],n=g.indexOf(e);if(!(-1<n))throw Error(s(96,e));if(!k[n]){if(!t.extractEvents)throw Error(s(97,e));for(var i in k[n]=t,n=t.eventTypes){var r=void 0,o=n[i],a=t,l=i;if(x.hasOwnProperty(l))throw Error(s(99,l));x[l]=o;var u=o.phasedRegistrationNames;if(u){for(r in u)u.hasOwnProperty(r)&&w(u[r],a,l);r=!0}else o.registrationName?(w(o.registrationName,a,l),r=!0):r=!1;if(!r)throw Error(s(98,i,e))}}}}function w(e,t,n){if(S[e])throw Error(s(100,e));S[e]=t,O[e]=t.eventTypes[n].dependencies}var k=[],x={},S={},O={};function E(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var i=e[t];if(!b.hasOwnProperty(t)||b[t]!==i){if(b[t])throw Error(s(102,t));b[t]=i,n=!0}}n&&_()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),D=null,C=null,M=null;function P(e){if(e=v(e)){if("function"!=typeof D)throw Error(s(280));var t=e.stateNode;t&&(t=p(t),D(e.stateNode,e.type,t))}}function N(e){C?M?M.push(e):M=[e]:C=e}function F(){if(C){var e=C,t=M;if(M=C=null,P(e),t)for(e=0;e<t.length;e++)P(t[e])}}function I(e,t){return e(t)}function j(e,t,n,i,r){return e(t,n,i,r)}function R(){}var A=I,z=!1,L=!1;function Y(){null===C&&null===M||(R(),F())}function B(e,t,n){if(L)return e(t,n);L=!0;try{return A(e,t,n)}finally{L=!1,Y()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},U={};function G(e,t,n,i,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new G(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new G(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new G(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new G(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new G(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new G(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new G(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new G(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new G(e,5,!1,e.toLowerCase(),null,!1)}));var $=/[\-:]([a-z])/g;function Z(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace($,Z);q[t]=new G(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace($,Z);q[t]=new G(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace($,Z);q[t]=new G(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new G(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new G("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new G(e,1,!1,e.toLowerCase(),null,!0)}));var Q=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,i){var r=q.hasOwnProperty(t)?q[t]:null;(null!==r?0===r.type:!i&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,i){if(null==t||function(e,t,n,i){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,i))return!0;if(i)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,i)&&(n=null),i||null===r?function(e){return!!H.call(U,e)||!H.call(V,e)&&(W.test(e)?U[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,i=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,i?e.setAttributeNS(i,t,n):e.setAttribute(t,n))))}Q.hasOwnProperty("ReactCurrentDispatcher")||(Q.ReactCurrentDispatcher={current:null}),Q.hasOwnProperty("ReactCurrentBatchConfig")||(Q.ReactCurrentBatchConfig={suspense:null});var K=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,ie=J?Symbol.for("react.strict_mode"):60108,re=J?Symbol.for("react.profiler"):60114,oe=J?Symbol.for("react.provider"):60109,se=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,le=J?Symbol.for("react.forward_ref"):60112,ue=J?Symbol.for("react.suspense"):60113,de=J?Symbol.for("react.suspense_list"):60120,ce=J?Symbol.for("react.memo"):60115,he=J?Symbol.for("react.lazy"):60116,fe=J?Symbol.for("react.block"):60121,pe="function"==typeof Symbol&&Symbol.iterator;function ve(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=pe&&e[pe]||e["@@iterator"])?e:null}function me(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case re:return"Profiler";case ie:return"StrictMode";case ue:return"Suspense";case de:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case se:return"Context.Consumer";case oe:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case ce:return me(e.type);case fe:return me(e.render);case he:if(e=1===e._status?e._result:null)return me(e)}return null}function ye(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var i=e._debugOwner,r=e._debugSource,o=me(e.type);n=null,i&&(n=me(i.type)),i=o,o="",r?o=" (at "+r.fileName.replace(K,"")+":"+r.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(i||"Unknown")+o}t+=n,e=e.return}while(e);return t}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function _e(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var r=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){i=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),i="";return e&&(i=be(e)?e.checked?"true":"false":e.value),(e=i)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return r({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xe(e,t){var n=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:i,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Oe(e,t){Se(e,t);var n=ge(t.value),i=t.type;if(null!=n)"number"===i?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ee(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function De(e,t){return e=r({children:void 0},t),(t=function(e){var t="";return i.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ce(e,t,n,i){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&i&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(i&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function Me(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return r({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Pe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function Ne(e,t){var n=ge(t.value),i=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=i&&(e.defaultValue=""+i)}function Fe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ie="http://www.w3.org/1999/xhtml",je="http://www.w3.org/2000/svg";function Re(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ae(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Re(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ze,Le=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,i,r){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==je||"innerHTML"in e)e.innerHTML=t;else{for((ze=ze||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ze.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},He={},Ve={};function Ue(e){if(He[e])return He[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return He[e]=n[t];return e}T&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var Ge=Ue("animationend"),qe=Ue("animationiteration"),$e=Ue("animationstart"),Ze=Ue("transitionend"),Qe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Ke(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(s(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,i=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(i=r.return)){n=i;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return tt(r),e;if(o===i)return tt(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==i.return)n=r,i=o;else{for(var a=!1,l=r.child;l;){if(l===n){a=!0,n=r,i=o;break}if(l===i){a=!0,i=r,n=o;break}l=l.sibling}if(!a){for(l=o.child;l;){if(l===n){a=!0,n=o,i=r;break}if(l===i){a=!0,i=o,n=r;break}l=l.sibling}if(!a)throw Error(s(189))}}if(n.alternate!==i)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function it(e,t){if(null==t)throw Error(s(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function st(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var i=0;i<t.length&&!e.isPropagationStopped();i++)y(e,t[i],n[i]);else t&&y(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function at(e){if(null!==e&&(ot=it(ot,e)),e=ot,ot=null,e){if(rt(e,st),ot)throw Error(s(95));if(d)throw e=c,d=!1,c=null,e}}function lt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var dt=[];function ct(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>dt.length&&dt.push(e)}function ht(e,t,n,i){if(dt.length){var r=dt.pop();return r.topLevelType=e,r.eventSystemFlags=i,r.nativeEvent=t,r.targetInst=n,r}return{topLevelType:e,eventSystemFlags:i,nativeEvent:t,targetInst:n,ancestors:[]}}function ft(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var i=n;if(3===i.tag)i=i.stateNode.containerInfo;else{for(;i.return;)i=i.return;i=3!==i.tag?null:i.stateNode.containerInfo}if(!i)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Tn(i)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var r=lt(e.nativeEvent);i=e.topLevelType;var o=e.nativeEvent,s=e.eventSystemFlags;0===n&&(s|=64);for(var a=null,l=0;l<k.length;l++){var u=k[l];u&&(u=u.extractEvents(i,t,o,r,s))&&(a=it(a,u))}at(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":$t(t,"scroll",!0);break;case"focus":case"blur":$t(t,"focus",!0),$t(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&$t(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Qe.indexOf(e)&&qt(e,t)}n.set(e,null)}}var vt,mt,yt,gt=!1,bt=[],_t=null,wt=null,kt=null,xt=new Map,St=new Map,Ot=[],Et="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Dt(e,t,n,i,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r,container:i}}function Ct(e,t){switch(e){case"focus":case"blur":_t=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":St.delete(t.pointerId)}}function Mt(e,t,n,i,r,o){return null===e||e.nativeEvent!==o?(e=Dt(t,n,i,r,o),null!==t&&(null!==(t=Dn(t))&&mt(t)),e):(e.eventSystemFlags|=i,e)}function Pt(e){var t=Tn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Kt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Dn(t);return null!==n&&mt(n),e.blockedOn=t,!1}return!0}function Ft(e,t,n){Nt(e)&&n.delete(t)}function It(){for(gt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Dn(e.blockedOn))&&vt(e);break}var t=Kt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==_t&&Nt(_t)&&(_t=null),null!==wt&&Nt(wt)&&(wt=null),null!==kt&&Nt(kt)&&(kt=null),xt.forEach(Ft),St.forEach(Ft)}function jt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,It)))}function Rt(e){function t(t){return jt(t,e)}if(0<bt.length){jt(bt[0],e);for(var n=1;n<bt.length;n++){var i=bt[n];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==_t&&jt(_t,e),null!==wt&&jt(wt,e),null!==kt&&jt(kt,e),xt.forEach(t),St.forEach(t),n=0;n<Ot.length;n++)(i=Ot[n]).blockedOn===e&&(i.blockedOn=null);for(;0<Ot.length&&null===(n=Ot[0]).blockedOn;)Pt(n),null===n.blockedOn&&Ot.shift()}var At={},zt=new Map,Lt=new Map,Yt=["abort","abort",Ge,"animationEnd",qe,"animationIteration",$e,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ze,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var i=e[n],r=e[n+1],o="on"+(r[0].toUpperCase()+r.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[i],eventPriority:t},Lt.set(i,t),zt.set(i,o),At[r]=o}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Yt,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ht=0;Ht<Wt.length;Ht++)Lt.set(Wt[Ht],0);var Vt=o.unstable_UserBlockingPriority,Ut=o.unstable_runWithPriority,Gt=!0;function qt(e,t){$t(t,e,!1)}function $t(e,t,n){var i=Lt.get(t);switch(void 0===i?2:i){case 0:i=Zt.bind(null,t,1,e);break;case 1:i=Qt.bind(null,t,1,e);break;default:i=Xt.bind(null,t,1,e)}n?e.addEventListener(t,i,!0):e.addEventListener(t,i,!1)}function Zt(e,t,n,i){z||R();var r=Xt,o=z;z=!0;try{j(r,e,t,n,i)}finally{(z=o)||Y()}}function Qt(e,t,n,i){Ut(Vt,Xt.bind(null,e,t,n,i))}function Xt(e,t,n,i){if(Gt)if(0<bt.length&&-1<Et.indexOf(e))e=Dt(null,e,t,n,i),bt.push(e);else{var r=Kt(e,t,n,i);if(null===r)Ct(e,i);else if(-1<Et.indexOf(e))e=Dt(r,e,t,n,i),bt.push(e);else if(!function(e,t,n,i,r){switch(t){case"focus":return _t=Mt(_t,e,t,n,i,r),!0;case"dragenter":return wt=Mt(wt,e,t,n,i,r),!0;case"mouseover":return kt=Mt(kt,e,t,n,i,r),!0;case"pointerover":var o=r.pointerId;return xt.set(o,Mt(xt.get(o)||null,e,t,n,i,r)),!0;case"gotpointercapture":return o=r.pointerId,St.set(o,Mt(St.get(o)||null,e,t,n,i,r)),!0}return!1}(r,e,t,n,i)){Ct(e,i),e=ht(e,i,null,t);try{B(ft,e)}finally{ct(e)}}}}function Kt(e,t,n,i){if(null!==(n=Tn(n=lt(i)))){var r=Je(n);if(null===r)n=null;else{var o=r.tag;if(13===o){if(null!==(n=et(r)))return n;n=null}else if(3===o){if(r.stateNode.hydrate)return 3===r.tag?r.stateNode.containerInfo:null;n=null}else r!==n&&(n=null)}}e=ht(e,i,n,t);try{B(ft,e)}finally{ct(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var i=0===n.indexOf("--"),r=tn(n,t[n],i);"float"===n&&(n="cssFloat"),i?e.setProperty(n,r):e[n]=r}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=r({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if(!("object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(s(62,""))}}function sn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var an=Ie;function ln(e,t){var n=Ke(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=O[t];for(var i=0;i<t.length;i++)pt(t[i],e,n)}function un(){}function dn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function cn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function hn(e,t){var n,i=cn(e);for(e=0;i;){if(3===i.nodeType){if(n=e+i.textContent.length,e<=t&&n>=t)return{node:i,offset:t-e};e=n}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=cn(i)}}function fn(){for(var e=window,t=dn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=dn((e=t.contentWindow).document)}return t}function pn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var vn=null,mn=null;function yn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,_n="function"==typeof clearTimeout?clearTimeout:void 0;function wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function kn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var xn=Math.random().toString(36).slice(2),Sn="__reactInternalInstance$"+xn,On="__reactEventHandlers$"+xn,En="__reactContainere$"+xn;function Tn(e){var t=e[Sn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[En]||n[Sn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=kn(e);null!==e;){if(n=e[Sn])return n;e=kn(e)}return t}n=(e=n).parentNode}return null}function Dn(e){return!(e=e[Sn]||e[En])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Cn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function Mn(e){return e[On]||null}function Pn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t){var n=e.stateNode;if(!n)return null;var i=p(n);if(!i)return null;n=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(i=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(s(231,t,typeof n));return n}function Fn(e,t,n){(t=Nn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=it(n._dispatchListeners,t),n._dispatchInstances=it(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Pn(t);for(t=n.length;0<t--;)Fn(n[t],"captured",e);for(t=0;t<n.length;t++)Fn(n[t],"bubbled",e)}}function jn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Nn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=it(n._dispatchListeners,t),n._dispatchInstances=it(n._dispatchInstances,e))}function Rn(e){e&&e.dispatchConfig.registrationName&&jn(e._targetInst,null,e)}function An(e){rt(e,In)}var zn=null,Ln=null,Yn=null;function Bn(){if(Yn)return Yn;var e,t,n=Ln,i=n.length,r="value"in zn?zn.value:zn.textContent,o=r.length;for(e=0;e<i&&n[e]===r[e];e++);var s=i-e;for(t=1;t<=s&&n[i-t]===r[o-t];t++);return Yn=r.slice(e,1<t?1-t:void 0)}function Wn(){return!0}function Hn(){return!1}function Vn(e,t,n,i){for(var r in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(r)&&((t=e[r])?this[r]=t(n):"target"===r?this.target=i:this[r]=n[r]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Wn:Hn,this.isPropagationStopped=Hn,this}function Un(e,t,n,i){if(this.eventPool.length){var r=this.eventPool.pop();return this.call(r,e,t,n,i),r}return new this(e,t,n,i)}function Gn(e){if(!(e instanceof this))throw Error(s(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function qn(e){e.eventPool=[],e.getPooled=Un,e.release=Gn}r(Vn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Wn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Wn)},persist:function(){this.isPersistent=Wn},isPersistent:Hn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Hn,this._dispatchInstances=this._dispatchListeners=null}}),Vn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Vn.extend=function(e){function t(){}function n(){return i.apply(this,arguments)}var i=this;t.prototype=i.prototype;var o=new t;return r(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=r({},i.Interface,e),n.extend=i.extend,qn(n),n},qn(Vn);var $n=Vn.extend({data:null}),Zn=Vn.extend({data:null}),Qn=[9,13,27,32],Xn=T&&"CompositionEvent"in window,Kn=null;T&&"documentMode"in document&&(Kn=document.documentMode);var Jn=T&&"TextEvent"in window&&!Kn,ei=T&&(!Xn||Kn&&8<Kn&&11>=Kn),ti=String.fromCharCode(32),ni={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ii=!1;function ri(e,t){switch(e){case"keyup":return-1!==Qn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function oi(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var si=!1;var ai={eventTypes:ni,extractEvents:function(e,t,n,i){var r;if(Xn)e:{switch(e){case"compositionstart":var o=ni.compositionStart;break e;case"compositionend":o=ni.compositionEnd;break e;case"compositionupdate":o=ni.compositionUpdate;break e}o=void 0}else si?ri(e,n)&&(o=ni.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=ni.compositionStart);return o?(ei&&"ko"!==n.locale&&(si||o!==ni.compositionStart?o===ni.compositionEnd&&si&&(r=Bn()):(Ln="value"in(zn=i)?zn.value:zn.textContent,si=!0)),o=$n.getPooled(o,t,n,i),r?o.data=r:null!==(r=oi(n))&&(o.data=r),An(o),r=o):r=null,(e=Jn?function(e,t){switch(e){case"compositionend":return oi(t);case"keypress":return 32!==t.which?null:(ii=!0,ti);case"textInput":return(e=t.data)===ti&&ii?null:e;default:return null}}(e,n):function(e,t){if(si)return"compositionend"===e||!Xn&&ri(e,t)?(e=Bn(),Yn=Ln=zn=null,si=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ei&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Zn.getPooled(ni.beforeInput,t,n,i)).data=e,An(t)):t=null,null===r?t:null===t?r:[r,t]}},li={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ui(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!li[e.type]:"textarea"===t}var di={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ci(e,t,n){return(e=Vn.getPooled(di.change,e,t,n)).type="change",N(n),An(e),e}var hi=null,fi=null;function pi(e){at(e)}function vi(e){if(we(Cn(e)))return e}function mi(e,t){if("change"===e)return t}var yi=!1;function gi(){hi&&(hi.detachEvent("onpropertychange",bi),fi=hi=null)}function bi(e){if("value"===e.propertyName&&vi(fi))if(e=ci(fi,e,lt(e)),z)at(e);else{z=!0;try{I(pi,e)}finally{z=!1,Y()}}}function _i(e,t,n){"focus"===e?(gi(),fi=n,(hi=t).attachEvent("onpropertychange",bi)):"blur"===e&&gi()}function wi(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return vi(fi)}function ki(e,t){if("click"===e)return vi(t)}function xi(e,t){if("input"===e||"change"===e)return vi(t)}T&&(yi=ut("input")&&(!document.documentMode||9<document.documentMode));var Si={eventTypes:di,_isInputEventSupported:yi,extractEvents:function(e,t,n,i){var r=t?Cn(t):window,o=r.nodeName&&r.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===r.type)var s=mi;else if(ui(r))if(yi)s=xi;else{s=wi;var a=_i}else(o=r.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===r.type||"radio"===r.type)&&(s=ki);if(s&&(s=s(e,t)))return ci(s,n,i);a&&a(e,r,t),"blur"===e&&(e=r._wrapperState)&&e.controlled&&"number"===r.type&&Te(r,"number",r.value)}},Oi=Vn.extend({view:null,detail:null}),Ei={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ti(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ei[e])&&!!t[e]}function Di(){return Ti}var Ci=0,Mi=0,Pi=!1,Ni=!1,Fi=Oi.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Di,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ci;return Ci=e.screenX,Pi?"mousemove"===e.type?e.screenX-t:0:(Pi=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Mi;return Mi=e.screenY,Ni?"mousemove"===e.type?e.screenY-t:0:(Ni=!0,0)}}),Ii=Fi.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),ji={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ri={eventTypes:ji,extractEvents:function(e,t,n,i,r){var o="mouseover"===e||"pointerover"===e,s="mouseout"===e||"pointerout"===e;if(o&&0==(32&r)&&(n.relatedTarget||n.fromElement)||!s&&!o)return null;(o=i.window===i?i:(o=i.ownerDocument)?o.defaultView||o.parentWindow:window,s)?(s=t,null!==(t=(t=n.relatedTarget||n.toElement)?Tn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):s=null;if(s===t)return null;if("mouseout"===e||"mouseover"===e)var a=Fi,l=ji.mouseLeave,u=ji.mouseEnter,d="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Ii,l=ji.pointerLeave,u=ji.pointerEnter,d="pointer");if(e=null==s?o:Cn(s),o=null==t?o:Cn(t),(l=a.getPooled(l,s,n,i)).type=d+"leave",l.target=e,l.relatedTarget=o,(n=a.getPooled(u,t,n,i)).type=d+"enter",n.target=o,n.relatedTarget=e,d=t,(i=s)&&d)e:{for(u=d,s=0,e=a=i;e;e=Pn(e))s++;for(e=0,t=u;t;t=Pn(t))e++;for(;0<s-e;)a=Pn(a),s--;for(;0<e-s;)u=Pn(u),e--;for(;s--;){if(a===u||a===u.alternate)break e;a=Pn(a),u=Pn(u)}a=null}else a=null;for(u=a,a=[];i&&i!==u&&(null===(s=i.alternate)||s!==u);)a.push(i),i=Pn(i);for(i=[];d&&d!==u&&(null===(s=d.alternate)||s!==u);)i.push(d),d=Pn(d);for(d=0;d<a.length;d++)jn(a[d],"bubbled",l);for(d=i.length;0<d--;)jn(i[d],"captured",n);return 0==(64&r)?[l]:[l,n]}};var Ai="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},zi=Object.prototype.hasOwnProperty;function Li(e,t){if(Ai(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(i=0;i<n.length;i++)if(!zi.call(t,n[i])||!Ai(e[n[i]],t[n[i]]))return!1;return!0}var Yi=T&&"documentMode"in document&&11>=document.documentMode,Bi={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wi=null,Hi=null,Vi=null,Ui=!1;function Gi(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Ui||null==Wi||Wi!==dn(n)?null:("selectionStart"in(n=Wi)&&pn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vi&&Li(Vi,n)?null:(Vi=n,(e=Vn.getPooled(Bi.select,Hi,e,t)).type="select",e.target=Wi,An(e),e))}var qi={eventTypes:Bi,extractEvents:function(e,t,n,i,r,o){if(!(o=!(r=o||(i.window===i?i.document:9===i.nodeType?i:i.ownerDocument)))){e:{r=Ke(r),o=O.onSelect;for(var s=0;s<o.length;s++)if(!r.has(o[s])){r=!1;break e}r=!0}o=!r}if(o)return null;switch(r=t?Cn(t):window,e){case"focus":(ui(r)||"true"===r.contentEditable)&&(Wi=r,Hi=t,Vi=null);break;case"blur":Vi=Hi=Wi=null;break;case"mousedown":Ui=!0;break;case"contextmenu":case"mouseup":case"dragend":return Ui=!1,Gi(n,i);case"selectionchange":if(Yi)break;case"keydown":case"keyup":return Gi(n,i)}return null}},$i=Vn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Zi=Vn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Qi=Oi.extend({relatedTarget:null});function Xi(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Ki={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ji={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},er=Oi.extend({key:function(e){if(e.key){var t=Ki[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xi(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Ji[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Di,charCode:function(e){return"keypress"===e.type?Xi(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xi(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),tr=Fi.extend({dataTransfer:null}),nr=Oi.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Di}),ir=Vn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),rr=Fi.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),or={eventTypes:At,extractEvents:function(e,t,n,i){var r=zt.get(e);if(!r)return null;switch(e){case"keypress":if(0===Xi(n))return null;case"keydown":case"keyup":e=er;break;case"blur":case"focus":e=Qi;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Fi;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=tr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=nr;break;case Ge:case qe:case $e:e=$i;break;case Ze:e=ir;break;case"scroll":e=Oi;break;case"wheel":e=rr;break;case"copy":case"cut":case"paste":e=Zi;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ii;break;default:e=Vn}return An(t=e.getPooled(r,t,n,i)),t}};if(g)throw Error(s(101));g=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_(),p=Mn,v=Dn,m=Cn,E({SimpleEventPlugin:or,EnterLeaveEventPlugin:Ri,ChangeEventPlugin:Si,SelectEventPlugin:qi,BeforeInputEventPlugin:ai});var sr=[],ar=-1;function lr(e){0>ar||(e.current=sr[ar],sr[ar]=null,ar--)}function ur(e,t){ar++,sr[ar]=e.current,e.current=t}var dr={},cr={current:dr},hr={current:!1},fr=dr;function pr(e,t){var n=e.type.contextTypes;if(!n)return dr;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var r,o={};for(r in n)o[r]=t[r];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function vr(e){return null!=(e=e.childContextTypes)}function mr(){lr(hr),lr(cr)}function yr(e,t,n){if(cr.current!==dr)throw Error(s(168));ur(cr,t),ur(hr,n)}function gr(e,t,n){var i=e.stateNode;if(e=t.childContextTypes,"function"!=typeof i.getChildContext)return n;for(var o in i=i.getChildContext())if(!(o in e))throw Error(s(108,me(t)||"Unknown",o));return r({},n,{},i)}function br(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||dr,fr=cr.current,ur(cr,e),ur(hr,hr.current),!0}function _r(e,t,n){var i=e.stateNode;if(!i)throw Error(s(169));n?(e=gr(e,t,fr),i.__reactInternalMemoizedMergedChildContext=e,lr(hr),lr(cr),ur(cr,e)):lr(hr),ur(hr,n)}var wr=o.unstable_runWithPriority,kr=o.unstable_scheduleCallback,xr=o.unstable_cancelCallback,Sr=o.unstable_requestPaint,Or=o.unstable_now,Er=o.unstable_getCurrentPriorityLevel,Tr=o.unstable_ImmediatePriority,Dr=o.unstable_UserBlockingPriority,Cr=o.unstable_NormalPriority,Mr=o.unstable_LowPriority,Pr=o.unstable_IdlePriority,Nr={},Fr=o.unstable_shouldYield,Ir=void 0!==Sr?Sr:function(){},jr=null,Rr=null,Ar=!1,zr=Or(),Lr=1e4>zr?Or:function(){return Or()-zr};function Yr(){switch(Er()){case Tr:return 99;case Dr:return 98;case Cr:return 97;case Mr:return 96;case Pr:return 95;default:throw Error(s(332))}}function Br(e){switch(e){case 99:return Tr;case 98:return Dr;case 97:return Cr;case 96:return Mr;case 95:return Pr;default:throw Error(s(332))}}function Wr(e,t){return e=Br(e),wr(e,t)}function Hr(e,t,n){return e=Br(e),kr(e,t,n)}function Vr(e){return null===jr?(jr=[e],Rr=kr(Tr,Gr)):jr.push(e),Nr}function Ur(){if(null!==Rr){var e=Rr;Rr=null,xr(e)}Gr()}function Gr(){if(!Ar&&null!==jr){Ar=!0;var e=0;try{var t=jr;Wr(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),jr=null}catch(t){throw null!==jr&&(jr=jr.slice(e+1)),kr(Tr,Ur),t}finally{Ar=!1}}}function qr(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function $r(e,t){if(e&&e.defaultProps)for(var n in t=r({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Zr={current:null},Qr=null,Xr=null,Kr=null;function Jr(){Kr=Xr=Qr=null}function eo(e){var t=Zr.current;lr(Zr),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function no(e,t){Qr=e,Kr=Xr=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ms=!0),e.firstContext=null)}function io(e,t){if(Kr!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Kr=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xr){if(null===Qr)throw Error(s(308));Xr=t,Qr.dependencies={expirationTime:0,firstContext:t,responders:null}}else Xr=Xr.next=t;return e._currentValue}var ro=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function so(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ao(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function lo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function uo(e,t){var n=e.alternate;null!==n&&so(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function co(e,t,n,i){var o=e.updateQueue;ro=!1;var s=o.baseQueue,a=o.shared.pending;if(null!==a){if(null!==s){var l=s.next;s.next=a.next,a.next=l}s=a,o.shared.pending=null,null!==(l=e.alternate)&&(null!==(l=l.updateQueue)&&(l.baseQueue=a))}if(null!==s){l=s.next;var u=o.baseState,d=0,c=null,h=null,f=null;if(null!==l)for(var p=l;;){if((a=p.expirationTime)<i){var v={expirationTime:p.expirationTime,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null};null===f?(h=f=v,c=u):f=f.next=v,a>d&&(d=a)}else{null!==f&&(f=f.next={expirationTime:1073741823,suspenseConfig:p.suspenseConfig,tag:p.tag,payload:p.payload,callback:p.callback,next:null}),ol(a,p.suspenseConfig);e:{var m=e,y=p;switch(a=t,v=n,y.tag){case 1:if("function"==typeof(m=y.payload)){u=m.call(v,u,a);break e}u=m;break e;case 3:m.effectTag=-4097&m.effectTag|64;case 0:if(null==(a="function"==typeof(m=y.payload)?m.call(v,u,a):m))break e;u=r({},u,a);break e;case 2:ro=!0}}null!==p.callback&&(e.effectTag|=32,null===(a=o.effects)?o.effects=[p]:a.push(p))}if(null===(p=p.next)||p===l){if(null===(a=o.shared.pending))break;p=s.next=a.next,a.next=l,o.baseQueue=s=a,o.shared.pending=null}}null===f?c=u:f.next=h,o.baseState=c,o.baseQueue=f,sl(d),e.expirationTime=d,e.memoizedState=u}}function ho(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],r=i.callback;if(null!==r){if(i.callback=null,i=r,r=n,"function"!=typeof i)throw Error(s(191,i));i.call(r)}}}var fo=Q.ReactCurrentBatchConfig,po=(new i.Component).refs;function vo(e,t,n,i){n=null==(n=n(i,t=e.memoizedState))?t:r({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var mo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var i=Ga(),r=fo.suspense;(r=ao(i=qa(i,e,r),r)).payload=t,null!=n&&(r.callback=n),lo(e,r),$a(e,i)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var i=Ga(),r=fo.suspense;(r=ao(i=qa(i,e,r),r)).tag=1,r.payload=t,null!=n&&(r.callback=n),lo(e,r),$a(e,i)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ga(),i=fo.suspense;(i=ao(n=qa(n,e,i),i)).tag=2,null!=t&&(i.callback=t),lo(e,i),$a(e,n)}};function yo(e,t,n,i,r,o,s){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,o,s):!t.prototype||!t.prototype.isPureReactComponent||(!Li(n,i)||!Li(r,o))}function go(e,t,n){var i=!1,r=dr,o=t.contextType;return"object"==typeof o&&null!==o?o=io(o):(r=vr(t)?fr:cr.current,o=(i=null!=(i=t.contextTypes))?pr(e,r):dr),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mo,e.stateNode=t,t._reactInternalFiber=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=o),t}function bo(e,t,n,i){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,i),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,i),t.state!==e&&mo.enqueueReplaceState(t,t.state,null)}function _o(e,t,n,i){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=po,oo(e);var o=t.contextType;"object"==typeof o&&null!==o?r.context=io(o):(o=vr(t)?fr:cr.current,r.context=pr(e,o)),co(e,n,r,i),r.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(vo(e,t,o,n),r.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(t=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&mo.enqueueReplaceState(r,r.state,null),co(e,n,r,i),r.state=e.memoizedState),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var wo=Array.isArray;function ko(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var i=n.stateNode}if(!i)throw Error(s(147,e));var r=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===r?t.ref:((t=function(e){var t=i.refs;t===po&&(t=i.refs={}),null===e?delete t[r]:t[r]=e})._stringRef=r,t)}if("string"!=typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function xo(e,t){if("textarea"!==e.type)throw Error(s(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function So(e){function t(t,n){if(e){var i=t.lastEffect;null!==i?(i.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,i){if(!e)return null;for(;null!==i;)t(n,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=El(e,t)).index=0,e.sibling=null,e}function o(t,n,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<n?(t.effectTag=2,n):i:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,i){return null===t||6!==t.tag?((t=Cl(n,e.mode,i)).return=e,t):((t=r(t,n)).return=e,t)}function u(e,t,n,i){return null!==t&&t.elementType===n.type?((i=r(t,n.props)).ref=ko(e,t,n),i.return=e,i):((i=Tl(n.type,n.key,n.props,null,e.mode,i)).ref=ko(e,t,n),i.return=e,i)}function d(e,t,n,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ml(n,e.mode,i)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function c(e,t,n,i,o){return null===t||7!==t.tag?((t=Dl(n,e.mode,i,o)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Cl(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Tl(t.type,t.key,t.props,null,e.mode,n)).ref=ko(e,null,t),n.return=e,n;case te:return(t=Ml(t,e.mode,n)).return=e,t}if(wo(t)||ve(t))return(t=Dl(t,e.mode,n,null)).return=e,t;xo(e,t)}return null}function f(e,t,n,i){var r=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==r?null:l(e,t,""+n,i);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===r?n.type===ne?c(e,t,n.props.children,i,r):u(e,t,n,i):null;case te:return n.key===r?d(e,t,n,i):null}if(wo(n)||ve(n))return null!==r?null:c(e,t,n,i,null);xo(e,n)}return null}function p(e,t,n,i,r){if("string"==typeof i||"number"==typeof i)return l(t,e=e.get(n)||null,""+i,r);if("object"==typeof i&&null!==i){switch(i.$$typeof){case ee:return e=e.get(null===i.key?n:i.key)||null,i.type===ne?c(t,e,i.props.children,r,i.key):u(t,e,i,r);case te:return d(t,e=e.get(null===i.key?n:i.key)||null,i,r)}if(wo(i)||ve(i))return c(t,e=e.get(n)||null,i,r,null);xo(t,i)}return null}function v(r,s,a,l){for(var u=null,d=null,c=s,v=s=0,m=null;null!==c&&v<a.length;v++){c.index>v?(m=c,c=null):m=c.sibling;var y=f(r,c,a[v],l);if(null===y){null===c&&(c=m);break}e&&c&&null===y.alternate&&t(r,c),s=o(y,s,v),null===d?u=y:d.sibling=y,d=y,c=m}if(v===a.length)return n(r,c),u;if(null===c){for(;v<a.length;v++)null!==(c=h(r,a[v],l))&&(s=o(c,s,v),null===d?u=c:d.sibling=c,d=c);return u}for(c=i(r,c);v<a.length;v++)null!==(m=p(c,r,v,a[v],l))&&(e&&null!==m.alternate&&c.delete(null===m.key?v:m.key),s=o(m,s,v),null===d?u=m:d.sibling=m,d=m);return e&&c.forEach((function(e){return t(r,e)})),u}function m(r,a,l,u){var d=ve(l);if("function"!=typeof d)throw Error(s(150));if(null==(l=d.call(l)))throw Error(s(151));for(var c=d=null,v=a,m=a=0,y=null,g=l.next();null!==v&&!g.done;m++,g=l.next()){v.index>m?(y=v,v=null):y=v.sibling;var b=f(r,v,g.value,u);if(null===b){null===v&&(v=y);break}e&&v&&null===b.alternate&&t(r,v),a=o(b,a,m),null===c?d=b:c.sibling=b,c=b,v=y}if(g.done)return n(r,v),d;if(null===v){for(;!g.done;m++,g=l.next())null!==(g=h(r,g.value,u))&&(a=o(g,a,m),null===c?d=g:c.sibling=g,c=g);return d}for(v=i(r,v);!g.done;m++,g=l.next())null!==(g=p(v,r,m,g.value,u))&&(e&&null!==g.alternate&&v.delete(null===g.key?m:g.key),a=o(g,a,m),null===c?d=g:c.sibling=g,c=g);return e&&v.forEach((function(e){return t(r,e)})),d}return function(e,i,o,l){var u="object"==typeof o&&null!==o&&o.type===ne&&null===o.key;u&&(o=o.props.children);var d="object"==typeof o&&null!==o;if(d)switch(o.$$typeof){case ee:e:{for(d=o.key,u=i;null!==u;){if(u.key===d){switch(u.tag){case 7:if(o.type===ne){n(e,u.sibling),(i=r(u,o.props.children)).return=e,e=i;break e}break;default:if(u.elementType===o.type){n(e,u.sibling),(i=r(u,o.props)).ref=ko(e,u,o),i.return=e,e=i;break e}}n(e,u);break}t(e,u),u=u.sibling}o.type===ne?((i=Dl(o.props.children,e.mode,l,o.key)).return=e,e=i):((l=Tl(o.type,o.key,o.props,null,e.mode,l)).ref=ko(e,i,o),l.return=e,e=l)}return a(e);case te:e:{for(u=o.key;null!==i;){if(i.key===u){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){n(e,i.sibling),(i=r(i,o.children||[])).return=e,e=i;break e}n(e,i);break}t(e,i),i=i.sibling}(i=Ml(o,e.mode,l)).return=e,e=i}return a(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==i&&6===i.tag?(n(e,i.sibling),(i=r(i,o)).return=e,e=i):(n(e,i),(i=Cl(o,e.mode,l)).return=e,e=i),a(e);if(wo(o))return v(e,i,o,l);if(ve(o))return m(e,i,o,l);if(d&&xo(e,o),void 0===o&&!u)switch(e.tag){case 1:case 0:throw e=e.type,Error(s(152,e.displayName||e.name||"Component"))}return n(e,i)}}var Oo=So(!0),Eo=So(!1),To={},Do={current:To},Co={current:To},Mo={current:To};function Po(e){if(e===To)throw Error(s(174));return e}function No(e,t){switch(ur(Mo,t),ur(Co,e),ur(Do,To),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Ae(null,"");break;default:t=Ae(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lr(Do),ur(Do,t)}function Fo(){lr(Do),lr(Co),lr(Mo)}function Io(e){Po(Mo.current);var t=Po(Do.current),n=Ae(t,e.type);t!==n&&(ur(Co,e),ur(Do,n))}function jo(e){Co.current===e&&(lr(Do),lr(Co))}var Ro={current:0};function Ao(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function zo(e,t){return{responder:e,props:t}}var Lo=Q.ReactCurrentDispatcher,Yo=Q.ReactCurrentBatchConfig,Bo=0,Wo=null,Ho=null,Vo=null,Uo=!1;function Go(){throw Error(s(321))}function qo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Ai(e[n],t[n]))return!1;return!0}function $o(e,t,n,i,r,o){if(Bo=o,Wo=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Lo.current=null===e||null===e.memoizedState?ys:gs,e=n(i,r),t.expirationTime===Bo){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(s(301));o+=1,Vo=Ho=null,t.updateQueue=null,Lo.current=bs,e=n(i,r)}while(t.expirationTime===Bo)}if(Lo.current=ms,t=null!==Ho&&null!==Ho.next,Bo=0,Vo=Ho=Wo=null,Uo=!1,t)throw Error(s(300));return e}function Zo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Vo?Wo.memoizedState=Vo=e:Vo=Vo.next=e,Vo}function Qo(){if(null===Ho){var e=Wo.alternate;e=null!==e?e.memoizedState:null}else e=Ho.next;var t=null===Vo?Wo.memoizedState:Vo.next;if(null!==t)Vo=t,Ho=e;else{if(null===e)throw Error(s(310));e={memoizedState:(Ho=e).memoizedState,baseState:Ho.baseState,baseQueue:Ho.baseQueue,queue:Ho.queue,next:null},null===Vo?Wo.memoizedState=Vo=e:Vo=Vo.next=e}return Vo}function Xo(e,t){return"function"==typeof t?t(e):t}function Ko(e){var t=Qo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var i=Ho,r=i.baseQueue,o=n.pending;if(null!==o){if(null!==r){var a=r.next;r.next=o.next,o.next=a}i.baseQueue=r=o,n.pending=null}if(null!==r){r=r.next,i=i.baseState;var l=a=o=null,u=r;do{var d=u.expirationTime;if(d<Bo){var c={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===l?(a=l=c,o=i):l=l.next=c,d>Wo.expirationTime&&(Wo.expirationTime=d,sl(d))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),ol(d,u.suspenseConfig),i=u.eagerReducer===e?u.eagerState:e(i,u.action);u=u.next}while(null!==u&&u!==r);null===l?o=i:l.next=a,Ai(i,t.memoizedState)||(Ms=!0),t.memoizedState=i,t.baseState=o,t.baseQueue=l,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function Jo(e){var t=Qo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var i=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var a=r=r.next;do{o=e(o,a.action),a=a.next}while(a!==r);Ai(o,t.memoizedState)||(Ms=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,i]}function es(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xo,lastRenderedState:e}).dispatch=vs.bind(null,Wo,e),[t.memoizedState,e]}function ts(e,t,n,i){return e={tag:e,create:t,destroy:n,deps:i,next:null},null===(t=Wo.updateQueue)?(t={lastEffect:null},Wo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(i=n.next,n.next=e,e.next=i,t.lastEffect=e),e}function ns(){return Qo().memoizedState}function is(e,t,n,i){var r=Zo();Wo.effectTag|=e,r.memoizedState=ts(1|t,n,void 0,void 0===i?null:i)}function rs(e,t,n,i){var r=Qo();i=void 0===i?null:i;var o=void 0;if(null!==Ho){var s=Ho.memoizedState;if(o=s.destroy,null!==i&&qo(i,s.deps))return void ts(t,n,o,i)}Wo.effectTag|=e,r.memoizedState=ts(1|t,n,o,i)}function os(e,t){return is(516,4,e,t)}function ss(e,t){return rs(516,4,e,t)}function as(e,t){return rs(4,2,e,t)}function ls(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function us(e,t,n){return n=null!=n?n.concat([e]):null,rs(4,2,ls.bind(null,t,e),n)}function ds(){}function cs(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e}function hs(e,t){var n=Qo();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&qo(t,i[1])?i[0]:(n.memoizedState=[e,t],e)}function fs(e,t){var n=Qo();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&qo(t,i[1])?i[0]:(e=e(),n.memoizedState=[e,t],e)}function ps(e,t,n){var i=Yr();Wr(98>i?98:i,(function(){e(!0)})),Wr(97<i?97:i,(function(){var i=Yo.suspense;Yo.suspense=void 0===t?null:t;try{e(!1),n()}finally{Yo.suspense=i}}))}function vs(e,t,n){var i=Ga(),r=fo.suspense;r={expirationTime:i=qa(i,e,r),suspenseConfig:r,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?r.next=r:(r.next=o.next,o.next=r),t.pending=r,o=e.alternate,e===Wo||null!==o&&o===Wo)Uo=!0,r.expirationTime=Bo,Wo.expirationTime=Bo;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var s=t.lastRenderedState,a=o(s,n);if(r.eagerReducer=o,r.eagerState=a,Ai(a,s))return}catch(e){}$a(e,i)}}var ms={readContext:io,useCallback:Go,useContext:Go,useEffect:Go,useImperativeHandle:Go,useLayoutEffect:Go,useMemo:Go,useReducer:Go,useRef:Go,useState:Go,useDebugValue:Go,useResponder:Go,useDeferredValue:Go,useTransition:Go},ys={readContext:io,useCallback:cs,useContext:io,useEffect:os,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,is(4,2,ls.bind(null,t,e),n)},useLayoutEffect:function(e,t){return is(4,2,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var i=Zo();return t=void 0!==n?n(t):t,i.memoizedState=i.baseState=t,e=(e=i.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=vs.bind(null,Wo,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:es,useDebugValue:ds,useResponder:zo,useDeferredValue:function(e,t){var n=es(e),i=n[0],r=n[1];return os((function(){var n=Yo.suspense;Yo.suspense=void 0===t?null:t;try{r(e)}finally{Yo.suspense=n}}),[e,t]),i},useTransition:function(e){var t=es(!1),n=t[0];return t=t[1],[cs(ps.bind(null,t,e),[t,e]),n]}},gs={readContext:io,useCallback:hs,useContext:io,useEffect:ss,useImperativeHandle:us,useLayoutEffect:as,useMemo:fs,useReducer:Ko,useRef:ns,useState:function(){return Ko(Xo)},useDebugValue:ds,useResponder:zo,useDeferredValue:function(e,t){var n=Ko(Xo),i=n[0],r=n[1];return ss((function(){var n=Yo.suspense;Yo.suspense=void 0===t?null:t;try{r(e)}finally{Yo.suspense=n}}),[e,t]),i},useTransition:function(e){var t=Ko(Xo),n=t[0];return t=t[1],[hs(ps.bind(null,t,e),[t,e]),n]}},bs={readContext:io,useCallback:hs,useContext:io,useEffect:ss,useImperativeHandle:us,useLayoutEffect:as,useMemo:fs,useReducer:Jo,useRef:ns,useState:function(){return Jo(Xo)},useDebugValue:ds,useResponder:zo,useDeferredValue:function(e,t){var n=Jo(Xo),i=n[0],r=n[1];return ss((function(){var n=Yo.suspense;Yo.suspense=void 0===t?null:t;try{r(e)}finally{Yo.suspense=n}}),[e,t]),i},useTransition:function(e){var t=Jo(Xo),n=t[0];return t=t[1],[hs(ps.bind(null,t,e),[t,e]),n]}},_s=null,ws=null,ks=!1;function xs(e,t){var n=Sl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ss(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Os(e){if(ks){var t=ws;if(t){var n=t;if(!Ss(e,t)){if(!(t=wn(n.nextSibling))||!Ss(e,t))return e.effectTag=-1025&e.effectTag|2,ks=!1,void(_s=e);xs(_s,n)}_s=e,ws=wn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ks=!1,_s=e}}function Es(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;_s=e}function Ts(e){if(e!==_s)return!1;if(!ks)return Es(e),ks=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gn(t,e.memoizedProps))for(t=ws;t;)xs(e,t),t=wn(t.nextSibling);if(Es(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ws=wn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ws=null}}else ws=_s?wn(e.stateNode.nextSibling):null;return!0}function Ds(){ws=_s=null,ks=!1}var Cs=Q.ReactCurrentOwner,Ms=!1;function Ps(e,t,n,i){t.child=null===e?Eo(t,null,n,i):Oo(t,e.child,n,i)}function Ns(e,t,n,i,r){n=n.render;var o=t.ref;return no(t,r),i=$o(e,t,n,i,o,r),null===e||Ms?(t.effectTag|=1,Ps(e,t,i,r),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=r&&(e.expirationTime=0),$s(e,t,r))}function Fs(e,t,n,i,r,o){if(null===e){var s=n.type;return"function"!=typeof s||Ol(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Tl(n.type,null,i,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Is(e,t,s,i,r,o))}return s=e.child,r<o&&(r=s.memoizedProps,(n=null!==(n=n.compare)?n:Li)(r,i)&&e.ref===t.ref)?$s(e,t,o):(t.effectTag|=1,(e=El(s,i)).ref=t.ref,e.return=t,t.child=e)}function Is(e,t,n,i,r,o){return null!==e&&Li(e.memoizedProps,i)&&e.ref===t.ref&&(Ms=!1,r<o)?(t.expirationTime=e.expirationTime,$s(e,t,o)):Rs(e,t,n,i,o)}function js(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Rs(e,t,n,i,r){var o=vr(n)?fr:cr.current;return o=pr(t,o),no(t,r),n=$o(e,t,n,i,o,r),null===e||Ms?(t.effectTag|=1,Ps(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=r&&(e.expirationTime=0),$s(e,t,r))}function As(e,t,n,i,r){if(vr(n)){var o=!0;br(t)}else o=!1;if(no(t,r),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),go(t,n,i),_o(t,n,i,r),i=!0;else if(null===e){var s=t.stateNode,a=t.memoizedProps;s.props=a;var l=s.context,u=n.contextType;"object"==typeof u&&null!==u?u=io(u):u=pr(t,u=vr(n)?fr:cr.current);var d=n.getDerivedStateFromProps,c="function"==typeof d||"function"==typeof s.getSnapshotBeforeUpdate;c||"function"!=typeof s.UNSAFE_componentWillReceiveProps&&"function"!=typeof s.componentWillReceiveProps||(a!==i||l!==u)&&bo(t,s,i,u),ro=!1;var h=t.memoizedState;s.state=h,co(t,i,s,r),l=t.memoizedState,a!==i||h!==l||hr.current||ro?("function"==typeof d&&(vo(t,n,d,i),l=t.memoizedState),(a=ro||yo(t,n,a,i,h,l,u))?(c||"function"!=typeof s.UNSAFE_componentWillMount&&"function"!=typeof s.componentWillMount||("function"==typeof s.componentWillMount&&s.componentWillMount(),"function"==typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"==typeof s.componentDidMount&&(t.effectTag|=4)):("function"==typeof s.componentDidMount&&(t.effectTag|=4),t.memoizedProps=i,t.memoizedState=l),s.props=i,s.state=l,s.context=u,i=a):("function"==typeof s.componentDidMount&&(t.effectTag|=4),i=!1)}else s=t.stateNode,so(e,t),a=t.memoizedProps,s.props=t.type===t.elementType?a:$r(t.type,a),l=s.context,"object"==typeof(u=n.contextType)&&null!==u?u=io(u):u=pr(t,u=vr(n)?fr:cr.current),(c="function"==typeof(d=n.getDerivedStateFromProps)||"function"==typeof s.getSnapshotBeforeUpdate)||"function"!=typeof s.UNSAFE_componentWillReceiveProps&&"function"!=typeof s.componentWillReceiveProps||(a!==i||l!==u)&&bo(t,s,i,u),ro=!1,l=t.memoizedState,s.state=l,co(t,i,s,r),h=t.memoizedState,a!==i||l!==h||hr.current||ro?("function"==typeof d&&(vo(t,n,d,i),h=t.memoizedState),(d=ro||yo(t,n,a,i,l,h,u))?(c||"function"!=typeof s.UNSAFE_componentWillUpdate&&"function"!=typeof s.componentWillUpdate||("function"==typeof s.componentWillUpdate&&s.componentWillUpdate(i,h,u),"function"==typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(i,h,u)),"function"==typeof s.componentDidUpdate&&(t.effectTag|=4),"function"==typeof s.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof s.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof s.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=i,t.memoizedState=h),s.props=i,s.state=h,s.context=u,i=d):("function"!=typeof s.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof s.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),i=!1);return zs(e,t,n,i,o,r)}function zs(e,t,n,i,r,o){js(e,t);var s=0!=(64&t.effectTag);if(!i&&!s)return r&&_r(t,n,!1),$s(e,t,o);i=t.stateNode,Cs.current=t;var a=s&&"function"!=typeof n.getDerivedStateFromError?null:i.render();return t.effectTag|=1,null!==e&&s?(t.child=Oo(t,e.child,null,o),t.child=Oo(t,null,a,o)):Ps(e,t,a,o),t.memoizedState=i.state,r&&_r(t,n,!0),t.child}function Ls(e){var t=e.stateNode;t.pendingContext?yr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&yr(0,t.context,!1),No(e,t.containerInfo)}var Ys,Bs,Ws,Hs={dehydrated:null,retryTime:0};function Vs(e,t,n){var i,r=t.mode,o=t.pendingProps,s=Ro.current,a=!1;if((i=0!=(64&t.effectTag))||(i=0!=(2&s)&&(null===e||null!==e.memoizedState)),i?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(s|=1),ur(Ro,1&s),null===e){if(void 0!==o.fallback&&Os(t),a){if(a=o.fallback,(o=Dl(null,r,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Dl(a,r,n,null)).return=t,o.sibling=n,t.memoizedState=Hs,t.child=o,n}return r=o.children,t.memoizedState=null,t.child=Eo(t,null,r,n)}if(null!==e.memoizedState){if(r=(e=e.child).sibling,a){if(o=o.fallback,(n=El(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(r=El(r,o)).return=t,n.sibling=r,n.childExpirationTime=0,t.memoizedState=Hs,t.child=n,r}return n=Oo(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=o.fallback,(o=Dl(null,r,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Dl(a,r,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=Hs,t.child=o,n}return t.memoizedState=null,t.child=Oo(t,e,o.children,n)}function Us(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),to(e.return,t)}function Gs(e,t,n,i,r,o){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:n,tailExpiration:0,tailMode:r,lastEffect:o}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=i,s.tail=n,s.tailExpiration=0,s.tailMode=r,s.lastEffect=o)}function qs(e,t,n){var i=t.pendingProps,r=i.revealOrder,o=i.tail;if(Ps(e,t,i.children,n),0!=(2&(i=Ro.current)))i=1&i|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Us(e,n);else if(19===e.tag)Us(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(ur(Ro,i),0==(2&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===Ao(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Gs(t,!1,r,n,o,t.lastEffect);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===Ao(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Gs(t,!0,n,null,o,t.lastEffect);break;case"together":Gs(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function $s(e,t,n){null!==e&&(t.dependencies=e.dependencies);var i=t.expirationTime;if(0!==i&&sl(i),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=El(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=El(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Zs(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var i=null;null!==n;)null!==n.alternate&&(i=n),n=n.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function Qs(e,t,n){var i=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return vr(t.type)&&mr(),null;case 3:return Fo(),lr(hr),lr(cr),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ts(t)||(t.effectTag|=4),null;case 5:jo(t),n=Po(Mo.current);var o=t.type;if(null!==e&&null!=t.stateNode)Bs(e,t,o,i,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!i){if(null===t.stateNode)throw Error(s(166));return null}if(e=Po(Do.current),Ts(t)){i=t.stateNode,o=t.type;var a=t.memoizedProps;switch(i[Sn]=t,i[On]=a,o){case"iframe":case"object":case"embed":qt("load",i);break;case"video":case"audio":for(e=0;e<Qe.length;e++)qt(Qe[e],i);break;case"source":qt("error",i);break;case"img":case"image":case"link":qt("error",i),qt("load",i);break;case"form":qt("reset",i),qt("submit",i);break;case"details":qt("toggle",i);break;case"input":xe(i,a),qt("invalid",i),ln(n,"onChange");break;case"select":i._wrapperState={wasMultiple:!!a.multiple},qt("invalid",i),ln(n,"onChange");break;case"textarea":Pe(i,a),qt("invalid",i),ln(n,"onChange")}for(var l in on(o,a),e=null,a)if(a.hasOwnProperty(l)){var u=a[l];"children"===l?"string"==typeof u?i.textContent!==u&&(e=["children",u]):"number"==typeof u&&i.textContent!==""+u&&(e=["children",""+u]):S.hasOwnProperty(l)&&null!=u&&ln(n,l)}switch(o){case"input":_e(i),Ee(i,a,!0);break;case"textarea":_e(i),Fe(i);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(i.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===an&&(e=Re(o)),e===an?"script"===o?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof i.is?e=l.createElement(o,{is:i.is}):(e=l.createElement(o),"select"===o&&(l=e,i.multiple?l.multiple=!0:i.size&&(l.size=i.size))):e=l.createElementNS(e,o),e[Sn]=t,e[On]=i,Ys(e,t),t.stateNode=e,l=sn(o,i),o){case"iframe":case"object":case"embed":qt("load",e),u=i;break;case"video":case"audio":for(u=0;u<Qe.length;u++)qt(Qe[u],e);u=i;break;case"source":qt("error",e),u=i;break;case"img":case"image":case"link":qt("error",e),qt("load",e),u=i;break;case"form":qt("reset",e),qt("submit",e),u=i;break;case"details":qt("toggle",e),u=i;break;case"input":xe(e,i),u=ke(e,i),qt("invalid",e),ln(n,"onChange");break;case"option":u=De(e,i);break;case"select":e._wrapperState={wasMultiple:!!i.multiple},u=r({},i,{value:void 0}),qt("invalid",e),ln(n,"onChange");break;case"textarea":Pe(e,i),u=Me(e,i),qt("invalid",e),ln(n,"onChange");break;default:u=i}on(o,u);var d=u;for(a in d)if(d.hasOwnProperty(a)){var c=d[a];"style"===a?nn(e,c):"dangerouslySetInnerHTML"===a?null!=(c=c?c.__html:void 0)&&Le(e,c):"children"===a?"string"==typeof c?("textarea"!==o||""!==c)&&Ye(e,c):"number"==typeof c&&Ye(e,""+c):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?null!=c&&ln(n,a):null!=c&&X(e,a,c,l))}switch(o){case"input":_e(e),Ee(e,i,!1);break;case"textarea":_e(e),Fe(e);break;case"option":null!=i.value&&e.setAttribute("value",""+ge(i.value));break;case"select":e.multiple=!!i.multiple,null!=(n=i.value)?Ce(e,!!i.multiple,n,!1):null!=i.defaultValue&&Ce(e,!!i.multiple,i.defaultValue,!0);break;default:"function"==typeof u.onClick&&(e.onclick=un)}yn(o,i)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ws(0,t,e.memoizedProps,i);else{if("string"!=typeof i&&null===t.stateNode)throw Error(s(166));n=Po(Mo.current),Po(Do.current),Ts(t)?(n=t.stateNode,i=t.memoizedProps,n[Sn]=t,n.nodeValue!==i&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(i))[Sn]=t,t.stateNode=n)}return null;case 13:return lr(Ro),i=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==i,i=!1,null===e?void 0!==t.memoizedProps.fallback&&Ts(t):(i=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=o,o.nextEffect=a):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!i&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ro.current)?Ta===_a&&(Ta=wa):(Ta!==_a&&Ta!==wa||(Ta=ka),0!==Na&&null!==Sa&&(Fl(Sa,Ea),Il(Sa,Na)))),(n||i)&&(t.effectTag|=4),null);case 4:return Fo(),null;case 10:return eo(t),null;case 17:return vr(t.type)&&mr(),null;case 19:if(lr(Ro),null===(i=t.memoizedState))return null;if(o=0!=(64&t.effectTag),null===(a=i.rendering)){if(o)Zs(i,!1);else if(Ta!==_a||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Ao(a))){for(t.effectTag|=64,Zs(i,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===i.lastEffect&&(t.firstEffect=null),t.lastEffect=i.lastEffect,i=t.child;null!==i;)a=n,(o=i).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=a,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,a=e.dependencies,o.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),i=i.sibling;return ur(Ro,1&Ro.current|2),t.child}a=a.sibling}}else{if(!o)if(null!==(e=Ao(a))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Zs(i,!0),null===i.tail&&"hidden"===i.tailMode&&!a.alternate)return null!==(t=t.lastEffect=i.lastEffect)&&(t.nextEffect=null),null}else 2*Lr()-i.renderingStartTime>i.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,Zs(i,!1),t.expirationTime=t.childExpirationTime=n-1);i.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=i.last)?n.sibling=a:t.child=a,i.last=a)}return null!==i.tail?(0===i.tailExpiration&&(i.tailExpiration=Lr()+500),n=i.tail,i.rendering=n,i.tail=n.sibling,i.lastEffect=t.lastEffect,i.renderingStartTime=Lr(),n.sibling=null,t=Ro.current,ur(Ro,o?1&t|2:1&t),n):null}throw Error(s(156,t.tag))}function Xs(e){switch(e.tag){case 1:vr(e.type)&&mr();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Fo(),lr(hr),lr(cr),0!=(64&(t=e.effectTag)))throw Error(s(285));return e.effectTag=-4097&t|64,e;case 5:return jo(e),null;case 13:return lr(Ro),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return lr(Ro),null;case 4:return Fo(),null;case 10:return eo(e),null;default:return null}}function Ks(e,t){return{value:e,source:t,stack:ye(t)}}Ys=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Bs=function(e,t,n,i,o){var s=e.memoizedProps;if(s!==i){var a,l,u=t.stateNode;switch(Po(Do.current),e=null,n){case"input":s=ke(u,s),i=ke(u,i),e=[];break;case"option":s=De(u,s),i=De(u,i),e=[];break;case"select":s=r({},s,{value:void 0}),i=r({},i,{value:void 0}),e=[];break;case"textarea":s=Me(u,s),i=Me(u,i),e=[];break;default:"function"!=typeof s.onClick&&"function"==typeof i.onClick&&(u.onclick=un)}for(a in on(n,i),n=null,s)if(!i.hasOwnProperty(a)&&s.hasOwnProperty(a)&&null!=s[a])if("style"===a)for(l in u=s[a])u.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in i){var d=i[a];if(u=null!=s?s[a]:void 0,i.hasOwnProperty(a)&&d!==u&&(null!=d||null!=u))if("style"===a)if(u){for(l in u)!u.hasOwnProperty(l)||d&&d.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in d)d.hasOwnProperty(l)&&u[l]!==d[l]&&(n||(n={}),n[l]=d[l])}else n||(e||(e=[]),e.push(a,n)),n=d;else"dangerouslySetInnerHTML"===a?(d=d?d.__html:void 0,u=u?u.__html:void 0,null!=d&&u!==d&&(e=e||[]).push(a,d)):"children"===a?u===d||"string"!=typeof d&&"number"!=typeof d||(e=e||[]).push(a,""+d):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(S.hasOwnProperty(a)?(null!=d&&ln(o,a),e||u===d||(e=[])):(e=e||[]).push(a,d))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},Ws=function(e,t,n,i){n!==i&&(t.effectTag|=4)};var Js="function"==typeof WeakSet?WeakSet:Set;function ea(e,t){var n=t.source,i=t.stack;null===i&&null!==n&&(i=ye(n)),null!==n&&me(n.type),t=t.value,null!==e&&1===e.tag&&me(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ta(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){gl(e,t)}else t.current=null}function na(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,i=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:$r(t.type,n),i),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(s(163))}function ia(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.destroy;n.destroy=void 0,void 0!==i&&i()}n=n.next}while(n!==t)}}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.create;n.destroy=i()}n=n.next}while(n!==t)}}function oa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ra(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var i=n.elementType===n.type?t.memoizedProps:$r(n.type,t.memoizedProps);e.componentDidUpdate(i,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&ho(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}ho(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&yn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Rt(n)))));case 19:case 17:case 20:case 21:return}throw Error(s(163))}function sa(e,t,n){switch("function"==typeof kl&&kl(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var i=e.next;Wr(97<n?97:n,(function(){var e=i;do{var n=e.destroy;if(void 0!==n){var r=t;try{n()}catch(e){gl(r,e)}}e=e.next}while(e!==i)}))}break;case 1:ta(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){gl(e,t)}}(t,n);break;case 5:ta(t);break;case 4:da(e,t,n)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function la(e){return 5===e.tag||3===e.tag||4===e.tag}function ua(e){e:{for(var t=e.return;null!==t;){if(la(t)){var n=t;break e}t=t.return}throw Error(s(160))}switch(t=n.stateNode,n.tag){case 5:var i=!1;break;case 3:case 4:t=t.containerInfo,i=!0;break;default:throw Error(s(161))}16&n.effectTag&&(Ye(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||la(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}i?function e(t,n,i){var r=t.tag,o=5===r||6===r;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===i.nodeType?i.parentNode.insertBefore(t,n):i.insertBefore(t,n):(8===i.nodeType?(n=i.parentNode).insertBefore(t,i):(n=i).appendChild(t),null!==(i=i._reactRootContainer)&&void 0!==i||null!==n.onclick||(n.onclick=un));else if(4!==r&&null!==(t=t.child))for(e(t,n,i),t=t.sibling;null!==t;)e(t,n,i),t=t.sibling}(e,n,t):function e(t,n,i){var r=t.tag,o=5===r||6===r;if(o)t=o?t.stateNode:t.stateNode.instance,n?i.insertBefore(t,n):i.appendChild(t);else if(4!==r&&null!==(t=t.child))for(e(t,n,i),t=t.sibling;null!==t;)e(t,n,i),t=t.sibling}(e,n,t)}function da(e,t,n){for(var i,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(s(160));switch(i=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:i=i.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,d=n,c=u;;)if(sa(l,c,d),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(l=i,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):i.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){i=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(sa(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function ca(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ia(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var i=t.memoizedProps,r=null!==e?e.memoizedProps:i;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[On]=i,"input"===e&&"radio"===i.type&&null!=i.name&&Se(n,i),sn(e,r),t=sn(e,i),r=0;r<o.length;r+=2){var a=o[r],l=o[r+1];"style"===a?nn(n,l):"dangerouslySetInnerHTML"===a?Le(n,l):"children"===a?Ye(n,l):X(n,a,l,t)}switch(e){case"input":Oe(n,i);break;case"textarea":Ne(n,i);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!i.multiple,null!=(e=i.value)?Ce(n,!!i.multiple,e,!1):t!==!!i.multiple&&(null!=i.defaultValue?Ce(n,!!i.multiple,i.defaultValue,!0):Ce(n,!!i.multiple,i.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(s(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Rt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?i=!1:(i=!0,n=t.child,Ia=Lr()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,i?"function"==typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,r=null!=(r=e.memoizedProps.style)&&r.hasOwnProperty("display")?r.display:null,o.style.display=tn("display",r));else if(6===e.tag)e.stateNode.nodeValue=i?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ha(t);case 19:return void ha(t);case 17:return}throw Error(s(163))}function ha(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Js),t.forEach((function(t){var i=_l.bind(null,e,t);n.has(t)||(n.add(t),t.then(i,i))}))}}var fa="function"==typeof WeakMap?WeakMap:Map;function pa(e,t,n){(n=ao(n,null)).tag=3,n.payload={element:null};var i=t.value;return n.callback=function(){Ra||(Ra=!0,Aa=i),ea(e,t)},n}function va(e,t,n){(n=ao(n,null)).tag=3;var i=e.type.getDerivedStateFromError;if("function"==typeof i){var r=t.value;n.payload=function(){return ea(e,t),i(r)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof i&&(null===za?za=new Set([this]):za.add(this),ea(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var ma,ya=Math.ceil,ga=Q.ReactCurrentDispatcher,ba=Q.ReactCurrentOwner,_a=0,wa=3,ka=4,xa=0,Sa=null,Oa=null,Ea=0,Ta=_a,Da=null,Ca=1073741823,Ma=1073741823,Pa=null,Na=0,Fa=!1,Ia=0,ja=null,Ra=!1,Aa=null,za=null,La=!1,Ya=null,Ba=90,Wa=null,Ha=0,Va=null,Ua=0;function Ga(){return 0!=(48&xa)?1073741821-(Lr()/10|0):0!==Ua?Ua:Ua=1073741821-(Lr()/10|0)}function qa(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var i=Yr();if(0==(4&t))return 99===i?1073741823:1073741822;if(0!=(16&xa))return Ea;if(null!==n)e=qr(e,0|n.timeoutMs||5e3,250);else switch(i){case 99:e=1073741823;break;case 98:e=qr(e,150,100);break;case 97:case 96:e=qr(e,5e3,250);break;case 95:e=2;break;default:throw Error(s(326))}return null!==Sa&&e===Ea&&--e,e}function $a(e,t){if(50<Ha)throw Ha=0,Va=null,Error(s(185));if(null!==(e=Za(e,t))){var n=Yr();1073741823===t?0!=(8&xa)&&0==(48&xa)?Ja(e):(Xa(e),0===xa&&Ur()):Xa(e),0==(4&xa)||98!==n&&99!==n||(null===Wa?Wa=new Map([[e,t]]):(void 0===(n=Wa.get(e))||n>t)&&Wa.set(e,t))}}function Za(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var i=e.return,r=null;if(null===i&&3===e.tag)r=e.stateNode;else for(;null!==i;){if(n=i.alternate,i.childExpirationTime<t&&(i.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===i.return&&3===i.tag){r=i.stateNode;break}i=i.return}return null!==r&&(Sa===r&&(sl(t),Ta===ka&&Fl(r,Ea)),Il(r,t)),r}function Qa(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Nl(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xa(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Vr(Ja.bind(null,e));else{var t=Qa(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var i=Ga();if(1073741823===t?i=99:1===t||2===t?i=95:i=0>=(i=10*(1073741821-t)-10*(1073741821-i))?99:250>=i?98:5250>=i?97:95,null!==n){var r=e.callbackPriority;if(e.callbackExpirationTime===t&&r>=i)return;n!==Nr&&xr(n)}e.callbackExpirationTime=t,e.callbackPriority=i,t=1073741823===t?Vr(Ja.bind(null,e)):Hr(i,Ka.bind(null,e),{timeout:10*(1073741821-t)-Lr()}),e.callbackNode=t}}}function Ka(e,t){if(Ua=0,t)return jl(e,t=Ga()),Xa(e),null;var n=Qa(e);if(0!==n){if(t=e.callbackNode,0!=(48&xa))throw Error(s(327));if(vl(),e===Sa&&n===Ea||nl(e,n),null!==Oa){var i=xa;xa|=16;for(var r=rl();;)try{ll();break}catch(t){il(e,t)}if(Jr(),xa=i,ga.current=r,1===Ta)throw t=Da,nl(e,n),Fl(e,n),Xa(e),t;if(null===Oa)switch(r=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,i=Ta,Sa=null,i){case _a:case 1:throw Error(s(345));case 2:jl(e,2<n?2:n);break;case wa:if(Fl(e,n),n===(i=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=cl(r)),1073741823===Ca&&10<(r=Ia+500-Lr())){if(Fa){var o=e.lastPingedTime;if(0===o||o>=n){e.lastPingedTime=n,nl(e,n);break}}if(0!==(o=Qa(e))&&o!==n)break;if(0!==i&&i!==n){e.lastPingedTime=i;break}e.timeoutHandle=bn(hl.bind(null,e),r);break}hl(e);break;case ka:if(Fl(e,n),n===(i=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=cl(r)),Fa&&(0===(r=e.lastPingedTime)||r>=n)){e.lastPingedTime=n,nl(e,n);break}if(0!==(r=Qa(e))&&r!==n)break;if(0!==i&&i!==n){e.lastPingedTime=i;break}if(1073741823!==Ma?i=10*(1073741821-Ma)-Lr():1073741823===Ca?i=0:(i=10*(1073741821-Ca)-5e3,0>(i=(r=Lr())-i)&&(i=0),(n=10*(1073741821-n)-r)<(i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*ya(i/1960))-i)&&(i=n)),10<i){e.timeoutHandle=bn(hl.bind(null,e),i);break}hl(e);break;case 5:if(1073741823!==Ca&&null!==Pa){o=Ca;var a=Pa;if(0>=(i=0|a.busyMinDurationMs)?i=0:(r=0|a.busyDelayMs,i=(o=Lr()-(10*(1073741821-o)-(0|a.timeoutMs||5e3)))<=r?0:r+i-o),10<i){Fl(e,n),e.timeoutHandle=bn(hl.bind(null,e),i);break}}hl(e);break;default:throw Error(s(329))}if(Xa(e),e.callbackNode===t)return Ka.bind(null,e)}}return null}function Ja(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&xa))throw Error(s(327));if(vl(),e===Sa&&t===Ea||nl(e,t),null!==Oa){var n=xa;xa|=16;for(var i=rl();;)try{al();break}catch(t){il(e,t)}if(Jr(),xa=n,ga.current=i,1===Ta)throw n=Da,nl(e,t),Fl(e,t),Xa(e),n;if(null!==Oa)throw Error(s(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Sa=null,hl(e),Xa(e)}return null}function el(e,t){var n=xa;xa|=1;try{return e(t)}finally{0===(xa=n)&&Ur()}}function tl(e,t){var n=xa;xa&=-2,xa|=8;try{return e(t)}finally{0===(xa=n)&&Ur()}}function nl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,_n(n)),null!==Oa)for(n=Oa.return;null!==n;){var i=n;switch(i.tag){case 1:null!=(i=i.type.childContextTypes)&&mr();break;case 3:Fo(),lr(hr),lr(cr);break;case 5:jo(i);break;case 4:Fo();break;case 13:case 19:lr(Ro);break;case 10:eo(i)}n=n.return}Sa=e,Oa=El(e.current,null),Ea=t,Ta=_a,Da=null,Ma=Ca=1073741823,Pa=null,Na=0,Fa=!1}function il(e,t){for(;;){try{if(Jr(),Lo.current=ms,Uo)for(var n=Wo.memoizedState;null!==n;){var i=n.queue;null!==i&&(i.pending=null),n=n.next}if(Bo=0,Vo=Ho=Wo=null,Uo=!1,null===Oa||null===Oa.return)return Ta=1,Da=t,Oa=null;e:{var r=e,o=Oa.return,s=Oa,a=t;if(t=Ea,s.effectTag|=2048,s.firstEffect=s.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var l=a;if(0==(2&s.mode)){var u=s.alternate;u?(s.updateQueue=u.updateQueue,s.memoizedState=u.memoizedState,s.expirationTime=u.expirationTime):(s.updateQueue=null,s.memoizedState=null)}var d=0!=(1&Ro.current),c=o;do{var h;if(h=13===c.tag){var f=c.memoizedState;if(null!==f)h=null!==f.dehydrated;else{var p=c.memoizedProps;h=void 0!==p.fallback&&(!0!==p.unstable_avoidThisFallback||!d)}}if(h){var v=c.updateQueue;if(null===v){var m=new Set;m.add(l),c.updateQueue=m}else v.add(l);if(0==(2&c.mode)){if(c.effectTag|=64,s.effectTag&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var y=ao(1073741823,null);y.tag=2,lo(s,y)}s.expirationTime=1073741823;break e}a=void 0,s=t;var g=r.pingCache;if(null===g?(g=r.pingCache=new fa,a=new Set,g.set(l,a)):void 0===(a=g.get(l))&&(a=new Set,g.set(l,a)),!a.has(s)){a.add(s);var b=bl.bind(null,r,l,s);l.then(b,b)}c.effectTag|=4096,c.expirationTime=t;break e}c=c.return}while(null!==c);a=Error((me(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ye(s))}5!==Ta&&(Ta=2),a=Ks(a,s),c=o;do{switch(c.tag){case 3:l=a,c.effectTag|=4096,c.expirationTime=t,uo(c,pa(c,l,t));break e;case 1:l=a;var _=c.type,w=c.stateNode;if(0==(64&c.effectTag)&&("function"==typeof _.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===za||!za.has(w)))){c.effectTag|=4096,c.expirationTime=t,uo(c,va(c,l,t));break e}}c=c.return}while(null!==c)}Oa=dl(Oa)}catch(e){t=e;continue}break}}function rl(){var e=ga.current;return ga.current=ms,null===e?ms:e}function ol(e,t){e<Ca&&2<e&&(Ca=e),null!==t&&e<Ma&&2<e&&(Ma=e,Pa=t)}function sl(e){e>Na&&(Na=e)}function al(){for(;null!==Oa;)Oa=ul(Oa)}function ll(){for(;null!==Oa&&!Fr();)Oa=ul(Oa)}function ul(e){var t=ma(e.alternate,e,Ea);return e.memoizedProps=e.pendingProps,null===t&&(t=dl(e)),ba.current=null,t}function dl(e){Oa=e;do{var t=Oa.alternate;if(e=Oa.return,0==(2048&Oa.effectTag)){if(t=Qs(t,Oa,Ea),1===Ea||1!==Oa.childExpirationTime){for(var n=0,i=Oa.child;null!==i;){var r=i.expirationTime,o=i.childExpirationTime;r>n&&(n=r),o>n&&(n=o),i=i.sibling}Oa.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Oa.firstEffect),null!==Oa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Oa.firstEffect),e.lastEffect=Oa.lastEffect),1<Oa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Oa:e.firstEffect=Oa,e.lastEffect=Oa))}else{if(null!==(t=Xs(Oa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Oa.sibling))return t;Oa=e}while(null!==Oa);return Ta===_a&&(Ta=5),null}function cl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function hl(e){var t=Yr();return Wr(99,fl.bind(null,e,t)),null}function fl(e,t){do{vl()}while(null!==Ya);if(0!=(48&xa))throw Error(s(327));var n=e.finishedWork,i=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var r=cl(n);if(e.firstPendingTime=r,i<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:i<=e.firstSuspendedTime&&(e.firstSuspendedTime=i-1),i<=e.lastPingedTime&&(e.lastPingedTime=0),i<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Sa&&(Oa=Sa=null,Ea=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){var o=xa;xa|=32,ba.current=null,vn=Gt;var a=fn();if(pn(a)){if("selectionStart"in a)var l={start:a.selectionStart,end:a.selectionEnd};else e:{var u=(l=(l=a.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(u&&0!==u.rangeCount){l=u.anchorNode;var d=u.anchorOffset,c=u.focusNode;u=u.focusOffset;try{l.nodeType,c.nodeType}catch(e){l=null;break e}var h=0,f=-1,p=-1,v=0,m=0,y=a,g=null;t:for(;;){for(var b;y!==l||0!==d&&3!==y.nodeType||(f=h+d),y!==c||0!==u&&3!==y.nodeType||(p=h+u),3===y.nodeType&&(h+=y.nodeValue.length),null!==(b=y.firstChild);)g=y,y=b;for(;;){if(y===a)break t;if(g===l&&++v===d&&(f=h),g===c&&++m===u&&(p=h),null!==(b=y.nextSibling))break;g=(y=g).parentNode}y=b}l=-1===f||-1===p?null:{start:f,end:p}}else l=null}l=l||{start:0,end:0}}else l=null;mn={activeElementDetached:null,focusedElem:a,selectionRange:l},Gt=!1,ja=r;do{try{pl()}catch(e){if(null===ja)throw Error(s(330));gl(ja,e),ja=ja.nextEffect}}while(null!==ja);ja=r;do{try{for(a=e,l=t;null!==ja;){var _=ja.effectTag;if(16&_&&Ye(ja.stateNode,""),128&_){var w=ja.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&_){case 2:ua(ja),ja.effectTag&=-3;break;case 6:ua(ja),ja.effectTag&=-3,ca(ja.alternate,ja);break;case 1024:ja.effectTag&=-1025;break;case 1028:ja.effectTag&=-1025,ca(ja.alternate,ja);break;case 4:ca(ja.alternate,ja);break;case 8:da(a,d=ja,l),aa(d)}ja=ja.nextEffect}}catch(e){if(null===ja)throw Error(s(330));gl(ja,e),ja=ja.nextEffect}}while(null!==ja);if(k=mn,w=fn(),_=k.focusedElem,l=k.selectionRange,w!==_&&_&&_.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(_.ownerDocument.documentElement,_)){null!==l&&pn(_)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in _?(_.selectionStart=w,_.selectionEnd=Math.min(k,_.value.length)):(k=(w=_.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),d=_.textContent.length,a=Math.min(l.start,d),l=void 0===l.end?a:Math.min(l.end,d),!k.extend&&a>l&&(d=l,l=a,a=d),d=hn(_,a),c=hn(_,l),d&&c&&(1!==k.rangeCount||k.anchorNode!==d.node||k.anchorOffset!==d.offset||k.focusNode!==c.node||k.focusOffset!==c.offset)&&((w=w.createRange()).setStart(d.node,d.offset),k.removeAllRanges(),a>l?(k.addRange(w),k.extend(c.node,c.offset)):(w.setEnd(c.node,c.offset),k.addRange(w))))),w=[];for(k=_;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof _.focus&&_.focus(),_=0;_<w.length;_++)(k=w[_]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Gt=!!vn,mn=vn=null,e.current=n,ja=r;do{try{for(_=e;null!==ja;){var x=ja.effectTag;if(36&x&&oa(_,ja.alternate,ja),128&x){w=void 0;var S=ja.ref;if(null!==S){var O=ja.stateNode;switch(ja.tag){case 5:w=O;break;default:w=O}"function"==typeof S?S(w):S.current=w}}ja=ja.nextEffect}}catch(e){if(null===ja)throw Error(s(330));gl(ja,e),ja=ja.nextEffect}}while(null!==ja);ja=null,Ir(),xa=o}else e.current=n;if(La)La=!1,Ya=e,Ba=t;else for(ja=r;null!==ja;)t=ja.nextEffect,ja.nextEffect=null,ja=t;if(0===(t=e.firstPendingTime)&&(za=null),1073741823===t?e===Va?Ha++:(Ha=0,Va=e):Ha=0,"function"==typeof wl&&wl(n.stateNode,i),Xa(e),Ra)throw Ra=!1,e=Aa,Aa=null,e;return 0!=(8&xa)?null:(Ur(),null)}function pl(){for(;null!==ja;){var e=ja.effectTag;0!=(256&e)&&na(ja.alternate,ja),0==(512&e)||La||(La=!0,Hr(97,(function(){return vl(),null}))),ja=ja.nextEffect}}function vl(){if(90!==Ba){var e=97<Ba?97:Ba;return Ba=90,Wr(e,ml)}}function ml(){if(null===Ya)return!1;var e=Ya;if(Ya=null,0!=(48&xa))throw Error(s(331));var t=xa;for(xa|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ia(5,n),ra(5,n)}}catch(t){if(null===e)throw Error(s(330));gl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return xa=t,Ur(),!0}function yl(e,t,n){lo(e,t=pa(e,t=Ks(n,t),1073741823)),null!==(e=Za(e,1073741823))&&Xa(e)}function gl(e,t){if(3===e.tag)yl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){yl(n,e,t);break}if(1===n.tag){var i=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof i.componentDidCatch&&(null===za||!za.has(i))){lo(n,e=va(n,e=Ks(t,e),1073741823)),null!==(n=Za(n,1073741823))&&Xa(n);break}}n=n.return}}function bl(e,t,n){var i=e.pingCache;null!==i&&i.delete(t),Sa===e&&Ea===n?Ta===ka||Ta===wa&&1073741823===Ca&&Lr()-Ia<500?nl(e,Ea):Fa=!0:Nl(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xa(e)))}function _l(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=qa(t=Ga(),e,null)),null!==(e=Za(e,t))&&Xa(e)}ma=function(e,t,n){var i=t.expirationTime;if(null!==e){var r=t.pendingProps;if(e.memoizedProps!==r||hr.current)Ms=!0;else{if(i<n){switch(Ms=!1,t.tag){case 3:Ls(t),Ds();break;case 5:if(Io(t),4&t.mode&&1!==n&&r.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vr(t.type)&&br(t);break;case 4:No(t,t.stateNode.containerInfo);break;case 10:i=t.memoizedProps.value,r=t.type._context,ur(Zr,r._currentValue),r._currentValue=i;break;case 13:if(null!==t.memoizedState)return 0!==(i=t.child.childExpirationTime)&&i>=n?Vs(e,t,n):(ur(Ro,1&Ro.current),null!==(t=$s(e,t,n))?t.sibling:null);ur(Ro,1&Ro.current);break;case 19:if(i=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(i)return qs(e,t,n);t.effectTag|=64}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null),ur(Ro,Ro.current),!i)return null}return $s(e,t,n)}Ms=!1}}else Ms=!1;switch(t.expirationTime=0,t.tag){case 2:if(i=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,r=pr(t,cr.current),no(t,n),r=$o(null,t,i,e,r,n),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vr(i)){var o=!0;br(t)}else o=!1;t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,oo(t);var a=i.getDerivedStateFromProps;"function"==typeof a&&vo(t,i,a,e),r.updater=mo,t.stateNode=r,r._reactInternalFiber=t,_o(t,i,e,n),t=zs(null,t,i,!0,o,n)}else t.tag=0,Ps(null,t,r,n),t=t.child;return t;case 16:e:{if(r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(r),1!==r._status)throw r._result;switch(r=r._result,t.type=r,o=t.tag=function(e){if("function"==typeof e)return Ol(e)?1:0;if(null!=e){if((e=e.$$typeof)===le)return 11;if(e===ce)return 14}return 2}(r),e=$r(r,e),o){case 0:t=Rs(null,t,r,e,n);break e;case 1:t=As(null,t,r,e,n);break e;case 11:t=Ns(null,t,r,e,n);break e;case 14:t=Fs(null,t,r,$r(r.type,e),i,n);break e}throw Error(s(306,r,""))}return t;case 0:return i=t.type,r=t.pendingProps,Rs(e,t,i,r=t.elementType===i?r:$r(i,r),n);case 1:return i=t.type,r=t.pendingProps,As(e,t,i,r=t.elementType===i?r:$r(i,r),n);case 3:if(Ls(t),i=t.updateQueue,null===e||null===i)throw Error(s(282));if(i=t.pendingProps,r=null!==(r=t.memoizedState)?r.element:null,so(e,t),co(t,i,null,n),(i=t.memoizedState.element)===r)Ds(),t=$s(e,t,n);else{if((r=t.stateNode.hydrate)&&(ws=wn(t.stateNode.containerInfo.firstChild),_s=t,r=ks=!0),r)for(n=Eo(t,null,i,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ps(e,t,i,n),Ds();t=t.child}return t;case 5:return Io(t),null===e&&Os(t),i=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,a=r.children,gn(i,r)?a=null:null!==o&&gn(i,o)&&(t.effectTag|=16),js(e,t),4&t.mode&&1!==n&&r.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ps(e,t,a,n),t=t.child),t;case 6:return null===e&&Os(t),null;case 13:return Vs(e,t,n);case 4:return No(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=Oo(t,null,i,n):Ps(e,t,i,n),t.child;case 11:return i=t.type,r=t.pendingProps,Ns(e,t,i,r=t.elementType===i?r:$r(i,r),n);case 7:return Ps(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ps(e,t,t.pendingProps.children,n),t.child;case 10:e:{i=t.type._context,r=t.pendingProps,a=t.memoizedProps,o=r.value;var l=t.type._context;if(ur(Zr,l._currentValue),l._currentValue=o,null!==a)if(l=a.value,0===(o=Ai(l,o)?0:0|("function"==typeof i._calculateChangedBits?i._calculateChangedBits(l,o):1073741823))){if(a.children===r.children&&!hr.current){t=$s(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var u=l.dependencies;if(null!==u){a=l.child;for(var d=u.firstContext;null!==d;){if(d.context===i&&0!=(d.observedBits&o)){1===l.tag&&((d=ao(n,null)).tag=2,lo(l,d)),l.expirationTime<n&&(l.expirationTime=n),null!==(d=l.alternate)&&d.expirationTime<n&&(d.expirationTime=n),to(l.return,n),u.expirationTime<n&&(u.expirationTime=n);break}d=d.next}}else a=10===l.tag&&l.type===t.type?null:l.child;if(null!==a)a.return=l;else for(a=l;null!==a;){if(a===t){a=null;break}if(null!==(l=a.sibling)){l.return=a.return,a=l;break}a=a.return}l=a}Ps(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,i=(o=t.pendingProps).children,no(t,n),i=i(r=io(r,o.unstable_observedBits)),t.effectTag|=1,Ps(e,t,i,n),t.child;case 14:return o=$r(r=t.type,t.pendingProps),Fs(e,t,r,o=$r(r.type,o),i,n);case 15:return Is(e,t,t.type,t.pendingProps,i,n);case 17:return i=t.type,r=t.pendingProps,r=t.elementType===i?r:$r(i,r),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vr(i)?(e=!0,br(t)):e=!1,no(t,n),go(t,i,r),_o(t,i,r,n),zs(null,t,i,!0,e,n);case 19:return qs(e,t,n)}throw Error(s(156,t.tag))};var wl=null,kl=null;function xl(e,t,n,i){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Sl(e,t,n,i){return new xl(e,t,n,i)}function Ol(e){return!(!(e=e.prototype)||!e.isReactComponent)}function El(e,t){var n=e.alternate;return null===n?((n=Sl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Tl(e,t,n,i,r,o){var a=2;if(i=e,"function"==typeof e)Ol(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Dl(n.children,r,o,t);case ae:a=8,r|=7;break;case ie:a=8,r|=1;break;case re:return(e=Sl(12,n,t,8|r)).elementType=re,e.type=re,e.expirationTime=o,e;case ue:return(e=Sl(13,n,t,r)).type=ue,e.elementType=ue,e.expirationTime=o,e;case de:return(e=Sl(19,n,t,r)).elementType=de,e.expirationTime=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case oe:a=10;break e;case se:a=9;break e;case le:a=11;break e;case ce:a=14;break e;case he:a=16,i=null;break e;case fe:a=22;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Sl(a,n,t,r)).elementType=e,t.type=i,t.expirationTime=o,t}function Dl(e,t,n,i){return(e=Sl(7,e,i,t)).expirationTime=n,e}function Cl(e,t,n){return(e=Sl(6,e,null,t)).expirationTime=n,e}function Ml(e,t,n){return(t=Sl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pl(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Nl(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Fl(e,t){var n=e.firstSuspendedTime,i=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(i>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Il(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function jl(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Rl(e,t,n,i){var r=t.current,o=Ga(),a=fo.suspense;o=qa(o,r,a);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(s(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(vr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(s(171))}if(1===n.tag){var u=n.type;if(vr(u)){n=gr(n,u,l);break e}}n=l}else n=dr;return null===t.context?t.context=n:t.pendingContext=n,(t=ao(o,a)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),lo(r,t),$a(r,o),o}function Al(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function zl(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Ll(e,t){zl(e,t),(e=e.alternate)&&zl(e,t)}function Yl(e,t,n){var i=new Pl(e,t,n=null!=n&&!0===n.hydrate),r=Sl(3,null,null,2===t?7:1===t?3:0);i.current=r,r.stateNode=i,oo(r),e[En]=i.current,n&&0!==t&&function(e,t){var n=Ke(t);Et.forEach((function(e){pt(e,t,n)})),Tt.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=i}function Bl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Wl(e,t,n,i,r){var o=n._reactRootContainer;if(o){var s=o._internalRoot;if("function"==typeof r){var a=r;r=function(){var e=Al(s);a.call(e)}}Rl(t,s,e,r)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Yl(e,0,t?{hydrate:!0}:void 0)}(n,i),s=o._internalRoot,"function"==typeof r){var l=r;r=function(){var e=Al(s);l.call(e)}}tl((function(){Rl(t,s,e,r)}))}return Al(s)}function Hl(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==i?null:""+i,children:e,containerInfo:t,implementation:n}}function Vl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Bl(t))throw Error(s(200));return Hl(e,t,null,n)}Yl.prototype.render=function(e){Rl(e,this._internalRoot,null,null)},Yl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Rl(null,e,null,(function(){t[En]=null}))},vt=function(e){if(13===e.tag){var t=qr(Ga(),150,100);$a(e,t),Ll(e,t)}},mt=function(e){13===e.tag&&($a(e,3),Ll(e,3))},yt=function(e){if(13===e.tag){var t=Ga();$a(e,t=qa(t,e,null)),Ll(e,t)}},D=function(e,t,n){switch(t){case"input":if(Oe(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var i=n[t];if(i!==e&&i.form===e.form){var r=Mn(i);if(!r)throw Error(s(90));we(i),Oe(i,r)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&Ce(e,!!n.multiple,t,!1)}},I=el,j=function(e,t,n,i,r){var o=xa;xa|=4;try{return Wr(98,e.bind(null,t,n,i,r))}finally{0===(xa=o)&&Ur()}},R=function(){0==(49&xa)&&(function(){if(null!==Wa){var e=Wa;Wa=null,e.forEach((function(e,t){jl(t,e),Xa(t)})),Ur()}}(),vl())},A=function(e,t){var n=xa;xa|=2;try{return e(t)}finally{0===(xa=n)&&Ur()}};var Ul,Gl,ql={Events:[Dn,Cn,Mn,E,x,An,function(e){rt(e,Rn)},N,F,Xt,at,vl,{current:!1}]};Gl=(Ul={findFiberByHostInstance:Tn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);wl=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},kl=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(r({},Ul,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Q.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Gl?Gl(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ql,t.createPortal=Vl,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(s(188));throw Error(s(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&xa))throw Error(s(187));var n=xa;xa|=1;try{return Wr(99,e.bind(null,t))}finally{xa=n,Ur()}},t.hydrate=function(e,t,n){if(!Bl(t))throw Error(s(200));return Wl(null,e,t,!0,n)},t.render=function(e,t,n){if(!Bl(t))throw Error(s(200));return Wl(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Bl(e))throw Error(s(40));return!!e._reactRootContainer&&(tl((function(){Wl(null,null,e,!1,(function(){e._reactRootContainer=null,e[En]=null}))})),!0)},t.unstable_batchedUpdates=el,t.unstable_createPortal=function(e,t){return Vl(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,i){if(!Bl(n))throw Error(s(200));if(null==e||void 0===e._reactInternalFiber)throw Error(s(38));return Wl(e,t,n,!1,i)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(116)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var i,r,o,s,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var l=null,u=null,d=function(){if(null!==l)try{var e=t.unstable_now();l(!0,e),l=null}catch(e){throw setTimeout(d,0),e}},c=Date.now();t.unstable_now=function(){return Date.now()-c},i=function(e){null!==l?setTimeout(i,0,e):(l=e,setTimeout(d,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},s=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var h=window.performance,f=window.Date,p=window.setTimeout,v=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof h&&"function"==typeof h.now)t.unstable_now=function(){return h.now()};else{var y=f.now();t.unstable_now=function(){return f.now()-y}}var g=!1,b=null,_=-1,w=5,k=0;s=function(){return t.unstable_now()>=k},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,S=x.port2;x.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();k=e+w;try{b(!0,e)?S.postMessage(null):(g=!1,b=null)}catch(e){throw S.postMessage(null),e}}else g=!1},i=function(e){b=e,g||(g=!0,S.postMessage(null))},r=function(e,n){_=p((function(){e(t.unstable_now())}),n)},o=function(){v(_),_=-1}}function O(e,t){var n=e.length;e.push(t);e:for(;;){var i=n-1>>>1,r=e[i];if(!(void 0!==r&&0<D(r,t)))break e;e[i]=t,e[n]=r,n=i}}function E(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var i=0,r=e.length;i<r;){var o=2*(i+1)-1,s=e[o],a=o+1,l=e[a];if(void 0!==s&&0>D(s,n))void 0!==l&&0>D(l,s)?(e[i]=l,e[a]=n,i=a):(e[i]=s,e[o]=n,i=o);else{if(!(void 0!==l&&0>D(l,n)))break e;e[i]=l,e[a]=n,i=a}}}return t}return null}function D(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],M=[],P=1,N=null,F=3,I=!1,j=!1,R=!1;function A(e){for(var t=E(M);null!==t;){if(null===t.callback)T(M);else{if(!(t.startTime<=e))break;T(M),t.sortIndex=t.expirationTime,O(C,t)}t=E(M)}}function z(e){if(R=!1,A(e),!j)if(null!==E(C))j=!0,i(L);else{var t=E(M);null!==t&&r(z,t.startTime-e)}}function L(e,n){j=!1,R&&(R=!1,o()),I=!0;var i=F;try{for(A(n),N=E(C);null!==N&&(!(N.expirationTime>n)||e&&!s());){var a=N.callback;if(null!==a){N.callback=null,F=N.priorityLevel;var l=a(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?N.callback=l:N===E(C)&&T(C),A(n)}else T(C);N=E(C)}if(null!==N)var u=!0;else{var d=E(M);null!==d&&r(z,d.startTime-n),u=!1}return u}finally{N=null,F=i,I=!1}}function Y(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){j||I||(j=!0,i(L))},t.unstable_getCurrentPriorityLevel=function(){return F},t.unstable_getFirstCallbackNode=function(){return E(C)},t.unstable_next=function(e){switch(F){case 1:case 2:case 3:var t=3;break;default:t=F}var n=F;F=t;try{return e()}finally{F=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=F;F=e;try{return t()}finally{F=n}},t.unstable_scheduleCallback=function(e,n,s){var a=t.unstable_now();if("object"==typeof s&&null!==s){var l=s.delay;l="number"==typeof l&&0<l?a+l:a,s="number"==typeof s.timeout?s.timeout:Y(e)}else s=Y(e),l=a;return e={id:P++,callback:n,priorityLevel:e,startTime:l,expirationTime:s=l+s,sortIndex:-1},l>a?(e.sortIndex=l,O(M,e),null===E(C)&&e===E(M)&&(R?o():R=!0,r(z,l-a))):(e.sortIndex=s,O(C,e),j||I||(j=!0,i(L))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();A(e);var n=E(C);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||s()},t.unstable_wrapCallback=function(e){var t=F;return function(){var n=F;F=t;try{return e.apply(this,arguments)}finally{F=n}}}},function(e,t,n){var i=n(118)("defaultsDeep",n(231));i.placeholder=n(59),e.exports=i},function(e,t,n){var i=n(119),r=n(121);e.exports=function(e,t,n){return i(r,e,t,n)}},function(e,t,n){var i=n(120),r=n(59),o=Array.prototype.push;function s(e,t){return 2==t?function(t,n){return e(t,n)}:function(t){return e(t)}}function a(e){for(var t=e?e.length:0,n=Array(t);t--;)n[t]=e[t];return n}function l(e,t){return function(){var n=arguments.length;if(n){for(var i=Array(n);n--;)i[n]=arguments[n];var r=i[0]=t.apply(void 0,i);return e.apply(void 0,i),r}}}e.exports=function e(t,n,u,d){var c="function"==typeof n,h=n===Object(n);if(h&&(d=u,u=n,n=void 0),null==u)throw new TypeError;d||(d={});var f=!("cap"in d)||d.cap,p=!("curry"in d)||d.curry,v=!("fixed"in d)||d.fixed,m=!("immutable"in d)||d.immutable,y=!("rearg"in d)||d.rearg,g=c?u:r,b="curry"in d&&d.curry,_="fixed"in d&&d.fixed,w="rearg"in d&&d.rearg,k=c?u.runInContext():void 0,x=c?u:{ary:t.ary,assign:t.assign,clone:t.clone,curry:t.curry,forEach:t.forEach,isArray:t.isArray,isError:t.isError,isFunction:t.isFunction,isWeakMap:t.isWeakMap,iteratee:t.iteratee,keys:t.keys,rearg:t.rearg,toInteger:t.toInteger,toPath:t.toPath},S=x.ary,O=x.assign,E=x.clone,T=x.curry,D=x.forEach,C=x.isArray,M=x.isError,P=x.isFunction,N=x.isWeakMap,F=x.keys,I=x.rearg,j=x.toInteger,R=x.toPath,A=F(i.aryMethod),z={castArray:function(e){return function(){var t=arguments[0];return C(t)?e(a(t)):e.apply(void 0,arguments)}},iteratee:function(e){return function(){var t=arguments[0],n=arguments[1],i=e(t,n),r=i.length;return f&&"number"==typeof n?(n=n>2?n-2:1,r&&r<=n?i:s(i,n)):i}},mixin:function(e){return function(t){var n=this;if(!P(n))return e(n,Object(t));var i=[];return D(F(t),(function(e){P(t[e])&&i.push([e,n.prototype[e]])})),e(n,Object(t)),D(i,(function(e){var t=e[1];P(t)?n.prototype[e[0]]=t:delete n.prototype[e[0]]})),n}},nthArg:function(e){return function(t){var n=t<0?1:j(t)+1;return T(e(t),n)}},rearg:function(e){return function(t,n){var i=n?n.length:0;return T(e(t,n),i)}},runInContext:function(n){return function(i){return e(t,n(i),d)}}};function L(e,t){if(f){var n=i.iterateeRearg[e];if(n)return function(e,t){return V(e,(function(e){var n=t.length;return function(e,t){return 2==t?function(t,n){return e.apply(void 0,arguments)}:function(t){return e.apply(void 0,arguments)}}(I(s(e,n),t),n)}))}(t,n);var r=!c&&i.iterateeAry[e];if(r)return function(e,t){return V(e,(function(e){return"function"==typeof e?s(e,t):e}))}(t,r)}return t}function Y(e,t,n){if(v&&(_||!i.skipFixed[e])){var r=i.methodSpread[e],s=r&&r.start;return void 0===s?S(t,n):function(e,t){return function(){for(var n=arguments.length,i=n-1,r=Array(n);n--;)r[n]=arguments[n];var s=r[t],a=r.slice(0,t);return s&&o.apply(a,s),t!=i&&o.apply(a,r.slice(t+1)),e.apply(this,a)}}(t,s)}return t}function B(e,t,n){return y&&n>1&&(w||!i.skipRearg[e])?I(t,i.methodRearg[e]||i.aryRearg[n]):t}function W(e,t){for(var n=-1,i=(t=R(t)).length,r=i-1,o=E(Object(e)),s=o;null!=s&&++n<i;){var a=t[n],l=s[a];null==l||P(l)||M(l)||N(l)||(s[a]=E(n==r?l:Object(l))),s=s[a]}return o}function H(t,n){var r=i.aliasToReal[t]||t,o=i.remap[r]||r,s=d;return function(t){var i=c?k:x,a=c?k[o]:n,l=O(O({},s),t);return e(i,r,a,l)}}function V(e,t){return function(){var n=arguments.length;if(!n)return e();for(var i=Array(n);n--;)i[n]=arguments[n];var r=y?0:n-1;return i[r]=t(i[r]),e.apply(void 0,i)}}function U(e,t,n){var r,o=i.aliasToReal[e]||e,s=t,u=z[o];return u?s=u(t):m&&(i.mutate.array[o]?s=l(t,a):i.mutate.object[o]?s=l(t,function(e){return function(t){return e({},t)}}(t)):i.mutate.set[o]&&(s=l(t,W))),D(A,(function(e){return D(i.aryMethod[e],(function(t){if(o==t){var n=i.methodSpread[o],a=n&&n.afterRearg;return r=a?Y(o,B(o,s,e),e):B(o,Y(o,s,e),e),r=function(e,t,n){return b||p&&n>1?T(t,n):t}(0,r=L(o,r),e),!1}})),!r})),r||(r=s),r==t&&(r=b?T(r,1):function(){return t.apply(this,arguments)}),r.convert=H(o,t),r.placeholder=t.placeholder=n,r}if(!h)return U(n,u,g);var G=u,q=[];return D(A,(function(e){D(i.aryMethod[e],(function(e){var t=G[i.remap[e]||e];t&&q.push([e,U(e,t,G)])}))})),D(F(G),(function(e){var t=G[e];if("function"==typeof t){for(var n=q.length;n--;)if(q[n][0]==e)return;t.convert=H(e,t),q.push([e,t])}})),D(q,(function(e){G[e[0]]=e[1]})),G.convert=function(e){return G.runInContext.convert(e)(void 0)},G.placeholder=G,D(F(G),(function(e){D(i.realToAlias[e]||[],(function(t){G[t]=G[e]}))})),G}},function(e,t){t.aliasToReal={each:"forEach",eachRight:"forEachRight",entries:"toPairs",entriesIn:"toPairsIn",extend:"assignIn",extendAll:"assignInAll",extendAllWith:"assignInAllWith",extendWith:"assignInWith",first:"head",conforms:"conformsTo",matches:"isMatch",property:"get",__:"placeholder",F:"stubFalse",T:"stubTrue",all:"every",allPass:"overEvery",always:"constant",any:"some",anyPass:"overSome",apply:"spread",assoc:"set",assocPath:"set",complement:"negate",compose:"flowRight",contains:"includes",dissoc:"unset",dissocPath:"unset",dropLast:"dropRight",dropLastWhile:"dropRightWhile",equals:"isEqual",identical:"eq",indexBy:"keyBy",init:"initial",invertObj:"invert",juxt:"over",omitAll:"omit",nAry:"ary",path:"get",pathEq:"matchesProperty",pathOr:"getOr",paths:"at",pickAll:"pick",pipe:"flow",pluck:"map",prop:"get",propEq:"matchesProperty",propOr:"getOr",props:"at",symmetricDifference:"xor",symmetricDifferenceBy:"xorBy",symmetricDifferenceWith:"xorWith",takeLast:"takeRight",takeLastWhile:"takeRightWhile",unapply:"rest",unnest:"flatten",useWith:"overArgs",where:"conformsTo",whereEq:"isMatch",zipObj:"zipObject"},t.aryMethod={1:["assignAll","assignInAll","attempt","castArray","ceil","create","curry","curryRight","defaultsAll","defaultsDeepAll","floor","flow","flowRight","fromPairs","invert","iteratee","memoize","method","mergeAll","methodOf","mixin","nthArg","over","overEvery","overSome","rest","reverse","round","runInContext","spread","template","trim","trimEnd","trimStart","uniqueId","words","zipAll"],2:["add","after","ary","assign","assignAllWith","assignIn","assignInAllWith","at","before","bind","bindAll","bindKey","chunk","cloneDeepWith","cloneWith","concat","conformsTo","countBy","curryN","curryRightN","debounce","defaults","defaultsDeep","defaultTo","delay","difference","divide","drop","dropRight","dropRightWhile","dropWhile","endsWith","eq","every","filter","find","findIndex","findKey","findLast","findLastIndex","findLastKey","flatMap","flatMapDeep","flattenDepth","forEach","forEachRight","forIn","forInRight","forOwn","forOwnRight","get","groupBy","gt","gte","has","hasIn","includes","indexOf","intersection","invertBy","invoke","invokeMap","isEqual","isMatch","join","keyBy","lastIndexOf","lt","lte","map","mapKeys","mapValues","matchesProperty","maxBy","meanBy","merge","mergeAllWith","minBy","multiply","nth","omit","omitBy","overArgs","pad","padEnd","padStart","parseInt","partial","partialRight","partition","pick","pickBy","propertyOf","pull","pullAll","pullAt","random","range","rangeRight","rearg","reject","remove","repeat","restFrom","result","sampleSize","some","sortBy","sortedIndex","sortedIndexOf","sortedLastIndex","sortedLastIndexOf","sortedUniqBy","split","spreadFrom","startsWith","subtract","sumBy","take","takeRight","takeRightWhile","takeWhile","tap","throttle","thru","times","trimChars","trimCharsEnd","trimCharsStart","truncate","union","uniqBy","uniqWith","unset","unzipWith","without","wrap","xor","zip","zipObject","zipObjectDeep"],3:["assignInWith","assignWith","clamp","differenceBy","differenceWith","findFrom","findIndexFrom","findLastFrom","findLastIndexFrom","getOr","includesFrom","indexOfFrom","inRange","intersectionBy","intersectionWith","invokeArgs","invokeArgsMap","isEqualWith","isMatchWith","flatMapDepth","lastIndexOfFrom","mergeWith","orderBy","padChars","padCharsEnd","padCharsStart","pullAllBy","pullAllWith","rangeStep","rangeStepRight","reduce","reduceRight","replace","set","slice","sortedIndexBy","sortedLastIndexBy","transform","unionBy","unionWith","update","xorBy","xorWith","zipWith"],4:["fill","setWith","updateWith"]},t.aryRearg={2:[1,0],3:[2,0,1],4:[3,2,0,1]},t.iterateeAry={dropRightWhile:1,dropWhile:1,every:1,filter:1,find:1,findFrom:1,findIndex:1,findIndexFrom:1,findKey:1,findLast:1,findLastFrom:1,findLastIndex:1,findLastIndexFrom:1,findLastKey:1,flatMap:1,flatMapDeep:1,flatMapDepth:1,forEach:1,forEachRight:1,forIn:1,forInRight:1,forOwn:1,forOwnRight:1,map:1,mapKeys:1,mapValues:1,partition:1,reduce:2,reduceRight:2,reject:1,remove:1,some:1,takeRightWhile:1,takeWhile:1,times:1,transform:2},t.iterateeRearg={mapKeys:[1],reduceRight:[1,0]},t.methodRearg={assignInAllWith:[1,0],assignInWith:[1,2,0],assignAllWith:[1,0],assignWith:[1,2,0],differenceBy:[1,2,0],differenceWith:[1,2,0],getOr:[2,1,0],intersectionBy:[1,2,0],intersectionWith:[1,2,0],isEqualWith:[1,2,0],isMatchWith:[2,1,0],mergeAllWith:[1,0],mergeWith:[1,2,0],padChars:[2,1,0],padCharsEnd:[2,1,0],padCharsStart:[2,1,0],pullAllBy:[2,1,0],pullAllWith:[2,1,0],rangeStep:[1,2,0],rangeStepRight:[1,2,0],setWith:[3,1,2,0],sortedIndexBy:[2,1,0],sortedLastIndexBy:[2,1,0],unionBy:[1,2,0],unionWith:[1,2,0],updateWith:[3,1,2,0],xorBy:[1,2,0],xorWith:[1,2,0],zipWith:[1,2,0]},t.methodSpread={assignAll:{start:0},assignAllWith:{start:0},assignInAll:{start:0},assignInAllWith:{start:0},defaultsAll:{start:0},defaultsDeepAll:{start:0},invokeArgs:{start:2},invokeArgsMap:{start:2},mergeAll:{start:0},mergeAllWith:{start:0},partial:{start:1},partialRight:{start:1},without:{start:1},zipAll:{start:0}},t.mutate={array:{fill:!0,pull:!0,pullAll:!0,pullAllBy:!0,pullAllWith:!0,pullAt:!0,remove:!0,reverse:!0},object:{assign:!0,assignAll:!0,assignAllWith:!0,assignIn:!0,assignInAll:!0,assignInAllWith:!0,assignInWith:!0,assignWith:!0,defaults:!0,defaultsAll:!0,defaultsDeep:!0,defaultsDeepAll:!0,merge:!0,mergeAll:!0,mergeAllWith:!0,mergeWith:!0},set:{set:!0,setWith:!0,unset:!0,update:!0,updateWith:!0}},t.realToAlias=function(){var e=Object.prototype.hasOwnProperty,n=t.aliasToReal,i={};for(var r in n){var o=n[r];e.call(i,o)?i[o].push(r):i[o]=[r]}return i}(),t.remap={assignAll:"assign",assignAllWith:"assignWith",assignInAll:"assignIn",assignInAllWith:"assignInWith",curryN:"curry",curryRightN:"curryRight",defaultsAll:"defaults",defaultsDeepAll:"defaultsDeep",findFrom:"find",findIndexFrom:"findIndex",findLastFrom:"findLast",findLastIndexFrom:"findLastIndex",getOr:"get",includesFrom:"includes",indexOfFrom:"indexOf",invokeArgs:"invoke",invokeArgsMap:"invokeMap",lastIndexOfFrom:"lastIndexOf",mergeAll:"merge",mergeAllWith:"mergeWith",padChars:"pad",padCharsEnd:"padEnd",padCharsStart:"padStart",propertyOf:"get",rangeStep:"range",rangeStepRight:"rangeRight",restFrom:"rest",spreadFrom:"spread",trimChars:"trim",trimCharsEnd:"trimEnd",trimCharsStart:"trimStart",zipAll:"zip"},t.skipFixed={castArray:!0,flow:!0,flowRight:!0,iteratee:!0,mixin:!0,rearg:!0,runInContext:!0},t.skipRearg={add:!0,assign:!0,assignIn:!0,bind:!0,bindKey:!0,concat:!0,difference:!0,divide:!0,eq:!0,gt:!0,gte:!0,isEqual:!0,lt:!0,lte:!0,matchesProperty:!0,merge:!0,multiply:!0,overArgs:!0,partial:!0,partialRight:!0,propertyOf:!0,random:!0,range:!0,rangeRight:!0,subtract:!0,zip:!0,zipObject:!0,zipObjectDeep:!0}},function(e,t,n){e.exports={ary:n(122),assign:n(78),clone:n(157),curry:n(199),forEach:n(38),isArray:n(3),isError:n(200),isFunction:n(17),isWeakMap:n(201),iteratee:n(202),keys:n(81),rearg:n(226),toInteger:n(77),toPath:n(230)}},function(e,t,n){var i=n(33);e.exports=function(e,t,n){return t=n?void 0:t,t=e&&null==t?e.length:t,i(e,128,void 0,void 0,void 0,void 0,t)}},function(e,t,n){var i=n(17),r=n(126),o=n(4),s=n(64),a=/^\[object .+?Constructor\]$/,l=Function.prototype,u=Object.prototype,d=l.toString,c=u.hasOwnProperty,h=RegExp("^"+d.call(c).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!o(e)||r(e))&&(i(e)?h:a).test(s(e))}},function(e,t,n){var i=n(8),r=Object.prototype,o=r.hasOwnProperty,s=r.toString,a=i?i.toStringTag:void 0;e.exports=function(e){var t=o.call(e,a),n=e[a];try{e[a]=void 0;var i=!0}catch(e){}var r=s.call(e);return i&&(t?e[a]=n:delete e[a]),r}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var i,r=n(127),o=(i=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";e.exports=function(e){return!!o&&o in e}},function(e,t,n){var i=n(2)["__core-js_shared__"];e.exports=i},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var i=n(18),r=n(2);e.exports=function(e,t,n){var o=1&t,s=i(e);return function t(){var i=this&&this!==r&&this instanceof t?s:e;return i.apply(o?n:this,arguments)}}},function(e,t,n){var i=n(20),r=n(18),o=n(65),s=n(68),a=n(76),l=n(39),u=n(2);e.exports=function(e,t,n){var d=r(e);return function r(){for(var c=arguments.length,h=Array(c),f=c,p=a(r);f--;)h[f]=arguments[f];var v=c<3&&h[0]!==p&&h[c-1]!==p?[]:l(h,p);if((c-=v.length)<n)return s(e,t,o,r.placeholder,void 0,h,v,void 0,void 0,n-c);var m=this&&this!==u&&this instanceof r?d:e;return i(m,this,h)}}},function(e,t){e.exports=function(e,t){for(var n=e.length,i=0;n--;)e[n]===t&&++i;return i}},function(e,t,n){var i=n(35),r=n(69),o=n(134),s=n(136);e.exports=function(e){var t=o(e),n=s[t];if("function"!=typeof n||!(t in i.prototype))return!1;if(e===n)return!0;var a=r(n);return!!a&&e===a[0]}},function(e,t){e.exports=function(){}},function(e,t,n){var i=n(135),r=Object.prototype.hasOwnProperty;e.exports=function(e){for(var t=e.name+"",n=i[t],o=r.call(i,t)?n.length:0;o--;){var s=n[o],a=s.func;if(null==a||a==e)return s.name}return t}},function(e,t){e.exports={}},function(e,t,n){var i=n(35),r=n(70),o=n(36),s=n(3),a=n(5),l=n(137),u=Object.prototype.hasOwnProperty;function d(e){if(a(e)&&!s(e)&&!(e instanceof i)){if(e instanceof r)return e;if(u.call(e,"__wrapped__"))return l(e)}return new r(e)}d.prototype=o.prototype,d.prototype.constructor=d,e.exports=d},function(e,t,n){var i=n(35),r=n(70),o=n(9);e.exports=function(e){if(e instanceof i)return e.clone();var t=new r(e.__wrapped__,e.__chain__);return t.__actions__=o(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}},function(e,t){var n=/\{\n\/\* \[wrapped with (.+)\] \*/,i=/,? & /;e.exports=function(e){var t=e.match(n);return t?t[1].split(i):[]}},function(e,t){var n=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;e.exports=function(e,t){var i=t.length;if(!i)return e;var r=i-1;return t[r]=(i>1?"& ":"")+t[r],t=t.join(i>2?", ":" "),e.replace(n,"{\n/* [wrapped with "+t+"] */\n")}},function(e,t,n){var i=n(141),r=n(74),o=n(16),s=r?function(e,t){return r(e,"toString",{configurable:!0,enumerable:!1,value:i(t),writable:!0})}:o;e.exports=s},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var i=n(38),r=n(75),o=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]];e.exports=function(e,t){return i(o,(function(n){var i="_."+n[0];t&n[1]&&!r(e,i)&&e.push(i)})),e.sort()}},function(e,t,n){var i=n(144),r=n(145),o=n(146);e.exports=function(e,t,n){return t==t?o(e,t,n):i(e,r,n)}},function(e,t){e.exports=function(e,t,n,i){for(var r=e.length,o=n+(i?1:-1);i?o--:++o<r;)if(t(e[o],o,e))return o;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var i=n-1,r=e.length;++i<r;)if(e[i]===t)return i;return-1}},function(e,t,n){var i=n(9),r=n(21),o=Math.min;e.exports=function(e,t){for(var n=e.length,s=o(t.length,n),a=i(e);s--;){var l=t[s];e[s]=r(l,n)?a[l]:void 0}return e}},function(e,t,n){var i=n(20),r=n(18),o=n(2);e.exports=function(e,t,n,s){var a=1&t,l=r(e);return function t(){for(var r=-1,u=arguments.length,d=-1,c=s.length,h=Array(c+u),f=this&&this!==o&&this instanceof t?l:e;++d<c;)h[d]=s[d];for(;u--;)h[d++]=arguments[++r];return i(f,a?n:this,h)}}},function(e,t,n){var i=n(66),r=n(67),o=n(39),s=Math.min;e.exports=function(e,t){var n=e[1],a=t[1],l=n|a,u=l<131,d=128==a&&8==n||128==a&&256==n&&e[7].length<=t[8]||384==a&&t[7].length<=t[8]&&8==n;if(!u&&!d)return e;1&a&&(e[2]=t[2],l|=1&n?0:4);var c=t[3];if(c){var h=e[3];e[3]=h?i(h,c,t[4]):c,e[4]=h?o(e[3],"__lodash_placeholder__"):t[4]}return(c=t[5])&&(h=e[5],e[5]=h?r(h,c,t[6]):c,e[6]=h?o(e[5],"__lodash_placeholder__"):t[6]),(c=t[7])&&(e[7]=c),128&a&&(e[8]=null==e[8]?t[8]:s(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=l,e}},function(e,t,n){var i=n(151);e.exports=function(e){return e?(e=i(e))===1/0||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}},function(e,t,n){var i=n(4),r=n(10),o=/^\s+|\s+$/g,s=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,l=/^0o[0-7]+$/i,u=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(r(e))return NaN;if(i(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=i(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(o,"");var n=a.test(e);return n||l.test(e)?u(e.slice(2),n?2:8):s.test(e)?NaN:+e}},function(e,t){e.exports=function(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}},function(e,t,n){var i=n(7),r=n(5);e.exports=function(e){return r(e)&&"[object Arguments]"==i(e)}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var i=n(7),r=n(43),o=n(5),s={};s["[object Float32Array]"]=s["[object Float64Array]"]=s["[object Int8Array]"]=s["[object Int16Array]"]=s["[object Int32Array]"]=s["[object Uint8Array]"]=s["[object Uint8ClampedArray]"]=s["[object Uint16Array]"]=s["[object Uint32Array]"]=!0,s["[object Arguments]"]=s["[object Array]"]=s["[object ArrayBuffer]"]=s["[object Boolean]"]=s["[object DataView]"]=s["[object Date]"]=s["[object Error]"]=s["[object Function]"]=s["[object Map]"]=s["[object Number]"]=s["[object Object]"]=s["[object RegExp]"]=s["[object Set]"]=s["[object String]"]=s["[object WeakMap]"]=!1,e.exports=function(e){return o(e)&&r(e.length)&&!!s[i(e)]}},function(e,t,n){var i=n(82)(Object.keys,Object);e.exports=i},function(e,t,n){var i=n(83);e.exports=function(e){return i(e,4)}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var i=n(29),r=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=i(t,e);return!(n<0)&&(n==t.length-1?t.pop():r.call(t,n,1),--this.size,!0)}},function(e,t,n){var i=n(29);e.exports=function(e){var t=this.__data__,n=i(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var i=n(29);e.exports=function(e){return i(this.__data__,e)>-1}},function(e,t,n){var i=n(29);e.exports=function(e,t){var n=this.__data__,r=i(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this}},function(e,t,n){var i=n(28);e.exports=function(){this.__data__=new i,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var i=n(28),r=n(46),o=n(47);e.exports=function(e,t){var n=this.__data__;if(n instanceof i){var s=n.__data__;if(!r||s.length<199)return s.push([e,t]),this.size=++n.size,this;n=this.__data__=new o(s)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var i=n(169),r=n(28),o=n(46);e.exports=function(){this.size=0,this.__data__={hash:new i,map:new(o||r),string:new i}}},function(e,t,n){var i=n(170),r=n(171),o=n(172),s=n(173),a=n(174);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=s,l.prototype.set=a,e.exports=l},function(e,t,n){var i=n(30);e.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var i=n(30),r=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(i){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return r.call(t,e)?t[e]:void 0}},function(e,t,n){var i=n(30),r=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return i?void 0!==t[e]:r.call(t,e)}},function(e,t,n){var i=n(30);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=i&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var i=n(31);e.exports=function(e){var t=i(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var i=n(31);e.exports=function(e){return i(this,e).get(e)}},function(e,t,n){var i=n(31);e.exports=function(e){return i(this,e).has(e)}},function(e,t,n){var i=n(31);e.exports=function(e,t){var n=i(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this}},function(e,t,n){var i=n(11),r=n(32);e.exports=function(e,t){return e&&i(t,r(t),e)}},function(e,t,n){var i=n(4),r=n(45),o=n(182),s=Object.prototype.hasOwnProperty;e.exports=function(e){if(!i(e))return o(e);var t=r(e),n=[];for(var a in e)("constructor"!=a||!t&&s.call(e,a))&&n.push(a);return n}},function(e,t){e.exports=function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}},function(e,t,n){var i=n(11),r=n(48);e.exports=function(e,t){return i(e,r(e),t)}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,r=0,o=[];++n<i;){var s=e[n];t(s,n,e)&&(o[r++]=s)}return o}},function(e,t,n){var i=n(11),r=n(86);e.exports=function(e,t){return i(e,r(e),t)}},function(e,t,n){var i=n(88),r=n(86),o=n(32);e.exports=function(e){return i(e,o,r)}},function(e,t,n){var i=n(6)(n(2),"DataView");e.exports=i},function(e,t,n){var i=n(6)(n(2),"Promise");e.exports=i},function(e,t,n){var i=n(6)(n(2),"Set");e.exports=i},function(e,t){var n=Object.prototype.hasOwnProperty;e.exports=function(e){var t=e.length,i=new e.constructor(t);return t&&"string"==typeof e[0]&&n.call(e,"index")&&(i.index=e.index,i.input=e.input),i}},function(e,t,n){var i=n(51),r=n(192),o=n(193),s=n(194),a=n(90);e.exports=function(e,t,n){var l=e.constructor;switch(t){case"[object ArrayBuffer]":return i(e);case"[object Boolean]":case"[object Date]":return new l(+e);case"[object DataView]":return r(e,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return a(e,n);case"[object Map]":return new l;case"[object Number]":case"[object String]":return new l(e);case"[object RegExp]":return o(e);case"[object Set]":return new l;case"[object Symbol]":return s(e)}}},function(e,t,n){var i=n(51);e.exports=function(e,t){var n=t?i(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}},function(e,t){var n=/\w*$/;e.exports=function(e){var t=new e.constructor(e.source,n.exec(e));return t.lastIndex=e.lastIndex,t}},function(e,t,n){var i=n(8),r=i?i.prototype:void 0,o=r?r.valueOf:void 0;e.exports=function(e){return o?Object(o.call(e)):{}}},function(e,t,n){var i=n(196),r=n(25),o=n(44),s=o&&o.isMap,a=s?r(s):i;e.exports=a},function(e,t,n){var i=n(13),r=n(5);e.exports=function(e){return r(e)&&"[object Map]"==i(e)}},function(e,t,n){var i=n(198),r=n(25),o=n(44),s=o&&o.isSet,a=s?r(s):i;e.exports=a},function(e,t,n){var i=n(13),r=n(5);e.exports=function(e){return r(e)&&"[object Set]"==i(e)}},function(e,t,n){var i=n(33);function r(e,t,n){var o=i(e,8,void 0,void 0,void 0,void 0,void 0,t=n?void 0:t);return o.placeholder=r.placeholder,o}r.placeholder={},e.exports=r},function(e,t,n){var i=n(7),r=n(5),o=n(92);e.exports=function(e){if(!r(e))return!1;var t=i(e);return"[object Error]"==t||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!o(e)}},function(e,t,n){var i=n(13),r=n(5);e.exports=function(e){return r(e)&&"[object WeakMap]"==i(e)}},function(e,t,n){var i=n(83),r=n(203);e.exports=function(e){return r("function"==typeof e?e:i(e,1))}},function(e,t,n){var i=n(204),r=n(215),o=n(16),s=n(3),a=n(223);e.exports=function(e){return"function"==typeof e?e:null==e?o:"object"==typeof e?s(e)?r(e[0],e[1]):i(e):a(e)}},function(e,t,n){var i=n(205),r=n(214),o=n(97);e.exports=function(e){var t=r(e);return 1==t.length&&t[0][2]?o(t[0][0],t[0][1]):function(n){return n===e||i(n,e,t)}}},function(e,t,n){var i=n(27),r=n(52);e.exports=function(e,t,n,o){var s=n.length,a=s,l=!o;if(null==e)return!a;for(e=Object(e);s--;){var u=n[s];if(l&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++s<a;){var d=(u=n[s])[0],c=e[d],h=u[1];if(l&&u[2]){if(void 0===c&&!(d in e))return!1}else{var f=new i;if(o)var p=o(c,h,d,e,t,f);if(!(void 0===p?r(h,c,3,o,f):p))return!1}}return!0}},function(e,t,n){var i=n(27),r=n(93),o=n(210),s=n(213),a=n(13),l=n(3),u=n(24),d=n(42),c="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,f,p,v){var m=l(e),y=l(t),g=m?"[object Array]":a(e),b=y?"[object Array]":a(t),_=(g="[object Arguments]"==g?c:g)==c,w=(b="[object Arguments]"==b?c:b)==c,k=g==b;if(k&&u(e)){if(!u(t))return!1;m=!0,_=!1}if(k&&!_)return v||(v=new i),m||d(e)?r(e,t,n,f,p,v):o(e,t,g,n,f,p,v);if(!(1&n)){var x=_&&h.call(e,"__wrapped__"),S=w&&h.call(t,"__wrapped__");if(x||S){var O=x?e.value():e,E=S?t.value():t;return v||(v=new i),p(O,E,n,f,v)}}return!!k&&(v||(v=new i),s(e,t,n,f,p,v))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var i=n(8),r=n(89),o=n(12),s=n(93),a=n(211),l=n(212),u=i?i.prototype:void 0,d=u?u.valueOf:void 0;e.exports=function(e,t,n,i,u,c,h){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!c(new r(e),new r(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var f=a;case"[object Set]":var p=1&i;if(f||(f=l),e.size!=t.size&&!p)return!1;var v=h.get(e);if(v)return v==t;i|=2,h.set(e,t);var m=s(f(e),f(t),i,u,c,h);return h.delete(e),m;case"[object Symbol]":if(d)return d.call(e)==d.call(t)}return!1}},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t,n){var i=n(87),r=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,o,s,a){var l=1&n,u=i(e),d=u.length;if(d!=i(t).length&&!l)return!1;for(var c=d;c--;){var h=u[c];if(!(l?h in t:r.call(t,h)))return!1}var f=a.get(e);if(f&&a.get(t))return f==t;var p=!0;a.set(e,t),a.set(t,e);for(var v=l;++c<d;){var m=e[h=u[c]],y=t[h];if(o)var g=l?o(y,m,h,t,e,a):o(m,y,h,e,t,a);if(!(void 0===g?m===y||s(m,y,n,o,a):g)){p=!1;break}v||(v="constructor"==h)}if(p&&!v){var b=e.constructor,_=t.constructor;b!=_&&"constructor"in e&&"constructor"in t&&!("function"==typeof b&&b instanceof b&&"function"==typeof _&&_ instanceof _)&&(p=!1)}return a.delete(e),a.delete(t),p}},function(e,t,n){var i=n(96),r=n(22);e.exports=function(e){for(var t=r(e),n=t.length;n--;){var o=t[n],s=e[o];t[n]=[o,s,i(s)]}return t}},function(e,t,n){var i=n(52),r=n(216),o=n(220),s=n(53),a=n(96),l=n(97),u=n(14);e.exports=function(e,t){return s(e)&&a(t)?l(u(e),t):function(n){var s=r(n,e);return void 0===s&&s===t?o(n,e):i(t,s,3)}}},function(e,t,n){var i=n(98);e.exports=function(e,t,n){var r=null==e?void 0:i(e,t);return void 0===r?n:r}},function(e,t,n){var i=n(218);e.exports=function(e){var t=i(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var i=n(47);function r(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var i=arguments,r=t?t.apply(this,i):i[0],o=n.cache;if(o.has(r))return o.get(r);var s=e.apply(this,i);return n.cache=o.set(r,s)||o,s};return n.cache=new(r.Cache||i),n}r.Cache=i,e.exports=r},function(e,t,n){var i=n(8),r=n(54),o=n(3),s=n(10),a=i?i.prototype:void 0,l=a?a.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(o(t))return r(t,e)+"";if(s(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t,n){var i=n(221),r=n(222);e.exports=function(e,t){return null!=e&&r(e,t,i)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var i=n(99),r=n(23),o=n(3),s=n(21),a=n(43),l=n(14);e.exports=function(e,t,n){for(var u=-1,d=(t=i(t,e)).length,c=!1;++u<d;){var h=l(t[u]);if(!(c=null!=e&&n(e,h)))break;e=e[h]}return c||++u!=d?c:!!(d=null==e?0:e.length)&&a(d)&&s(h,d)&&(o(e)||r(e))}},function(e,t,n){var i=n(224),r=n(225),o=n(53),s=n(14);e.exports=function(e){return o(e)?i(s(e)):r(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var i=n(98);e.exports=function(e){return function(t){return i(t,e)}}},function(e,t,n){var i=n(33),r=n(227),o=r((function(e,t){return i(e,256,void 0,void 0,void 0,t)}));e.exports=o},function(e,t,n){var i=n(228),r=n(103),o=n(37);e.exports=function(e){return o(r(e,void 0,i),e+"")}},function(e,t,n){var i=n(102);e.exports=function(e){return(null==e?0:e.length)?i(e,1):[]}},function(e,t,n){var i=n(8),r=n(23),o=n(3),s=i?i.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||r(e)||!!(s&&e&&e[s])}},function(e,t,n){var i=n(54),r=n(9),o=n(3),s=n(10),a=n(100),l=n(14),u=n(101);e.exports=function(e){return o(e)?i(e,l):s(e)?[e]:r(a(u(e)))}},function(e,t,n){var i=n(20),r=n(55),o=n(232),s=n(237),a=r((function(e){return e.push(void 0,o),i(s,void 0,e)}));e.exports=a},function(e,t,n){var i=n(104),r=n(4);e.exports=function e(t,n,o,s,a,l){return r(t)&&r(n)&&(l.set(n,t),i(t,n,void 0,e,l),l.delete(n)),t}},function(e,t,n){var i=n(234)();e.exports=i},function(e,t){e.exports=function(e){return function(t,n,i){for(var r=-1,o=Object(t),s=i(t),a=s.length;a--;){var l=s[e?a:++r];if(!1===n(o[l],l,o))break}return t}}},function(e,t,n){var i=n(105),r=n(84),o=n(90),s=n(9),a=n(91),l=n(23),u=n(3),d=n(106),c=n(24),h=n(17),f=n(4),p=n(92),v=n(42),m=n(107),y=n(236);e.exports=function(e,t,n,g,b,_,w){var k=m(e,n),x=m(t,n),S=w.get(x);if(S)i(e,n,S);else{var O=_?_(k,x,n+"",e,t,w):void 0,E=void 0===O;if(E){var T=u(x),D=!T&&c(x),C=!T&&!D&&v(x);O=x,T||D||C?u(k)?O=k:d(k)?O=s(k):D?(E=!1,O=r(x,!0)):C?(E=!1,O=o(x,!0)):O=[]:p(x)||l(x)?(O=k,l(k)?O=y(k):f(k)&&!h(k)||(O=a(x))):E=!1}E&&(w.set(x,O),b(O,x,g,_,w),w.delete(x)),i(e,n,O)}}},function(e,t,n){var i=n(11),r=n(32);e.exports=function(e){return i(e,r(e))}},function(e,t,n){var i=n(104),r=n(238)((function(e,t,n,r){i(e,t,n,r)}));e.exports=r},function(e,t,n){var i=n(55),r=n(239);e.exports=function(e){return i((function(t,n){var i=-1,o=n.length,s=o>1?n[o-1]:void 0,a=o>2?n[2]:void 0;for(s=e.length>3&&"function"==typeof s?(o--,s):void 0,a&&r(n[0],n[1],a)&&(s=o<3?void 0:s,o=1),t=Object(t);++i<o;){var l=n[i];l&&e(t,l,i,s)}return t}))}},function(e,t,n){var i=n(12),r=n(26),o=n(21),s=n(4);e.exports=function(e,t,n){if(!s(n))return!1;var a=typeof t;return!!("number"==a?r(n)&&o(t,n.length):"string"==a&&t in n)&&i(n[t],e)}},function(e,t,n){var i=n(52);e.exports=function(e,t){return i(e,t)}},function(e,t,n){var i=n(242),r=n(102),o=n(55),s=n(106),a=n(244),l=o((function(e,t){var n=a(t);return s(n)&&(n=void 0),s(e)?i(e,r(t,1,s,!0),void 0,n):[]}));e.exports=l},function(e,t,n){var i=n(94),r=n(75),o=n(243),s=n(54),a=n(25),l=n(95);e.exports=function(e,t,n,u){var d=-1,c=r,h=!0,f=e.length,p=[],v=t.length;if(!f)return p;n&&(t=s(t,a(n))),u?(c=o,h=!1):t.length>=200&&(c=l,h=!1,t=new i(t));e:for(;++d<f;){var m=e[d],y=null==n?m:n(m);if(m=u||0!==m?m:0,h&&y==y){for(var g=v;g--;)if(t[g]===y)continue e;p.push(m)}else c(t,y,u)||p.push(m)}return p}},function(e,t){e.exports=function(e,t,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(t,e[i]))return!0;return!1}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"DOMutil",(function(){return Eu})),n.d(t,"DataSet",(function(){return Lr})),n.d(t,"DataView",(function(){return Yr})),n.d(t,"Hammer",(function(){return oa})),n.d(t,"Network",(function(){return yu})),n.d(t,"Queue",(function(){return Nr})),n.d(t,"data",(function(){return Wr})),n.d(t,"keycharm",(function(){return No})),n.d(t,"moment",(function(){return Cu})),n.d(t,"network",(function(){return Mu})),n.d(t,"util",(function(){return Ki}));
/**
 * vis-network - network
 * http://visjs.org/
 *
 * A dynamic, browser-based visualization library.
 *
 * @version 5.4.1
 * @date    2019-09-06T18:48:22Z
 *
 * @copyright (c) 2011-2017 Almende B.V, http://almende.com
 * @copyright (c) 2018-2019 visjs contributors, https://github.com/visjs
 *
 * @license 
 * vis.js is dual licensed under both
 *
 *   1. The Apache 2.0 License
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   and
 *
 *   2. The MIT License
 *      http://opensource.org/licenses/MIT
 *
 * vis.js may be distributed under either license.
 */
"undefined"==typeof globalThis?"undefined"==typeof window?void 0===e&&("undefined"==typeof self||self):window:globalThis;function i(e,t){return e(t={exports:{}},t.exports),t.exports}var r=i((function(e){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)})),o=i((function(e){var t=e.exports={version:"2.6.9"};"number"==typeof __e&&(__e=t)})),s=(o.version,i((function(e){var t=r["__core-js_shared__"]||(r["__core-js_shared__"]={});(e.exports=function(e,n){return t[e]||(t[e]=void 0===n?{}:n)})("versions",[]).push({version:o.version,mode:"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})}))),a=0,l=Math.random(),u=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++a+l).toString(36))},d=i((function(e){var t=s("wks"),n=r.Symbol,i="function"==typeof n;(e.exports=function(e){return t[e]||(t[e]=i&&n[e]||(i?n:u)("Symbol."+e))}).store=t})),c={f:d},h=function(e){return"object"==typeof e?null!==e:"function"==typeof e},f=function(e){if(!h(e))throw TypeError(e+" is not an object!");return e},p=function(e){try{return!!e()}catch(e){return!0}},v=!p((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})),m=r.document,y=h(m)&&h(m.createElement),g=function(e){return y?m.createElement(e):{}},b=!v&&!p((function(){return 7!=Object.defineProperty(g("div"),"a",{get:function(){return 7}}).a})),_=function(e,t){if(!h(e))return e;var n,i;if(t&&"function"==typeof(n=e.toString)&&!h(i=n.call(e)))return i;if("function"==typeof(n=e.valueOf)&&!h(i=n.call(e)))return i;if(!t&&"function"==typeof(n=e.toString)&&!h(i=n.call(e)))return i;throw TypeError("Can't convert object to primitive value")},w=Object.defineProperty,k={f:v?Object.defineProperty:function(e,t,n){if(f(e),t=_(t,!0),f(n),b)try{return w(e,t,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},x=k.f,S=function(e){var t=o.Symbol||(o.Symbol=r.Symbol||{});"_"==e.charAt(0)||e in t||x(t,e,{value:c.f(e)})};S("asyncIterator");var O={}.hasOwnProperty,E=function(e,t){return O.call(e,t)},T=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},D=v?function(e,t,n){return k.f(e,t,T(1,n))}:function(e,t,n){return e[t]=n,e},C=s("native-function-to-string",Function.toString),M=i((function(e){var t=u("src"),n="toString",i=(""+C).split(n);o.inspectSource=function(e){return C.call(e)},(e.exports=function(e,n,o,s){var a="function"==typeof o;a&&(E(o,"name")||D(o,"name",n)),e[n]===o||(a&&(E(o,t)||D(o,t,e[n]?""+e[n]:i.join(n+""))),e===r?e[n]=o:s?e[n]?e[n]=o:D(e,n,o):(delete e[n],D(e,n,o)))})(Function.prototype,n,(function(){return"function"==typeof this&&this[t]||C.call(this)}))})),P=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e},N=function(e,t,n){return P(e),void 0===t?e:1===n?function(n){return e.call(t,n)}:2===n?function(n,i){return e.call(t,n,i)}:3===n?function(n,i,r){return e.call(t,n,i,r)}:function(){return e.apply(t,arguments)}},F=function(e,t,n){var i,s,a,l,u=e&F.F,d=e&F.G,c=e&F.S,h=e&F.P,f=e&F.B,p=d?r:c?r[t]||(r[t]={}):(r[t]||{}).prototype,v=d?o:o[t]||(o[t]={}),m=v.prototype||(v.prototype={});for(i in d&&(n=t),n)a=((s=!u&&p&&void 0!==p[i])?p:n)[i],l=f&&s?N(a,r):h&&"function"==typeof a?N(Function.call,a):a,p&&M(p,i,a,e&F.U),v[i]!=a&&D(v,i,l),h&&m[i]!=a&&(m[i]=a)};r.core=o,F.F=1,F.G=2,F.S=4,F.P=8,F.B=16,F.W=32,F.U=64,F.R=128;var I,j=F,R=i((function(e){var t=u("meta"),n=k.f,i=0,r=Object.isExtensible||function(){return!0},o=!p((function(){return r(Object.preventExtensions({}))})),s=function(e){n(e,t,{value:{i:"O"+ ++i,w:{}}})},a=e.exports={KEY:t,NEED:!1,fastKey:function(e,n){if(!h(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!E(e,t)){if(!r(e))return"F";if(!n)return"E";s(e)}return e[t].i},getWeak:function(e,n){if(!E(e,t)){if(!r(e))return!0;if(!n)return!1;s(e)}return e[t].w},onFreeze:function(e){return o&&a.NEED&&r(e)&&!E(e,t)&&s(e),e}}})),A=(R.KEY,R.NEED,R.fastKey,R.getWeak,R.onFreeze,k.f),z=d("toStringTag"),L=function(e,t,n){e&&!E(e=n?e:e.prototype,z)&&A(e,z,{configurable:!0,value:t})},Y={}.toString,B=function(e){return Y.call(e).slice(8,-1)},W=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==B(e)?e.split(""):Object(e)},H=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e},V=function(e){return W(H(e))},U=Math.ceil,G=Math.floor,q=function(e){return isNaN(e=+e)?0:(0<e?G:U)(e)},$=Math.min,Z=function(e){return 0<e?$(q(e),9007199254740991):0},Q=Math.max,X=Math.min,K=s("keys"),J=function(e){return K[e]||(K[e]=u(e))},ee=(I=!1,function(e,t,n){var i,r=V(e),o=Z(r.length),s=function(e,t){return 0>(e=q(e))?Q(e+t,0):X(e,t)}(n,o);if(I&&t!=t){for(;o>s;)if((i=r[s++])!=i)return!0}else for(;o>s;s++)if((I||s in r)&&r[s]===t)return I||s||0;return!I&&-1}),te=J("IE_PROTO"),ne=function(e,t){var n,i=V(e),r=0,o=[];for(n in i)n!=te&&E(i,n)&&o.push(n);for(;t.length>r;)E(i,n=t[r++])&&(~ee(o,n)||o.push(n));return o},ie=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],re=Object.keys||function(e){return ne(e,ie)},oe={f:Object.getOwnPropertySymbols},se={f:{}.propertyIsEnumerable},ae=Array.isArray||function(e){return"Array"==B(e)},le=function(e){return Object(H(e))},ue=v?Object.defineProperties:function(e,t){f(e);for(var n,i=re(t),r=i.length,o=0;r>o;)k.f(e,n=i[o++],t[n]);return e},de=r.document,ce=de&&de.documentElement,he=J("IE_PROTO"),fe=function(){},pe=function(){var e,t=g("iframe"),n=ie.length;for(t.style.display="none",ce.appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),pe=e.F;n--;)delete pe.prototype[ie[n]];return pe()},ve=Object.create||function(e,t){var n;return null===e?n=pe():(fe.prototype=f(e),n=new fe,fe.prototype=null,n[he]=e),void 0===t?n:ue(n,t)},me=ie.concat("length","prototype"),ye={f:Object.getOwnPropertyNames||function(e){return ne(e,me)}},ge=ye.f,be={}.toString,_e="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],we={f:function(e){return _e&&"[object Window]"==be.call(e)?function(e){try{return ge(e)}catch(e){return _e.slice()}}(e):ge(V(e))}},ke=Object.getOwnPropertyDescriptor,xe={f:v?ke:function(e,t){if(e=V(e),t=_(t,!0),b)try{return ke(e,t)}catch(t){}return E(e,t)?T(!se.f.call(e,t),e[t]):void 0}},Se=R.KEY,Oe=xe.f,Ee=k.f,Te=we.f,De=r.Symbol,Ce=r.JSON,Me=Ce&&Ce.stringify,Pe=d("_hidden"),Ne=d("toPrimitive"),Fe={}.propertyIsEnumerable,Ie=s("symbol-registry"),je=s("symbols"),Re=s("op-symbols"),Ae=Object.prototype,ze="function"==typeof De&&!!oe.f,Le=r.QObject,Ye=!Le||!Le.prototype||!Le.prototype.findChild,Be=v&&p((function(){return 7!=ve(Ee({},"a",{get:function(){return Ee(this,"a",{value:7}).a}})).a}))?function(e,t,n){var i=Oe(Ae,t);i&&delete Ae[t],Ee(e,t,n),i&&e!==Ae&&Ee(Ae,t,i)}:Ee,We=function(e){var t=je[e]=ve(De.prototype);return t._k=e,t},He=ze&&"symbol"==typeof De.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof De},Ve=function(e,t,n){return e===Ae&&Ve(Re,t,n),f(e),t=_(t,!0),f(n),E(je,t)?(n.enumerable?(E(e,Pe)&&e[Pe][t]&&(e[Pe][t]=!1),n=ve(n,{enumerable:T(0,!1)})):(!E(e,Pe)&&Ee(e,Pe,T(1,{})),e[Pe][t]=!0),Be(e,t,n)):Ee(e,t,n)},Ue=function(e,t){f(e);for(var n,i=function(e){var t=re(e),n=oe.f;if(n)for(var i,r=n(e),o=se.f,s=0;r.length>s;)o.call(e,i=r[s++])&&t.push(i);return t}(t=V(t)),r=0,o=i.length;o>r;)Ve(e,n=i[r++],t[n]);return e},Ge=function(e){var t=Fe.call(this,e=_(e,!0));return(this!==Ae||!E(je,e)||E(Re,e))&&(!(t||!E(this,e)||!E(je,e)||E(this,Pe)&&this[Pe][e])||t)},qe=function(e,t){if(e=V(e),t=_(t,!0),e!==Ae||!E(je,t)||E(Re,t)){var n=Oe(e,t);return n&&E(je,t)&&!(E(e,Pe)&&e[Pe][t])&&(n.enumerable=!0),n}},$e=function(e){for(var t,n=Te(V(e)),i=[],r=0;n.length>r;)E(je,t=n[r++])||t==Pe||t==Se||i.push(t);return i},Ze=function(e){for(var t,n=e===Ae,i=Te(n?Re:V(e)),r=[],o=0;i.length>o;)E(je,t=i[o++])&&(!n||E(Ae,t))&&r.push(je[t]);return r};ze||(M((De=function(){if(this instanceof De)throw TypeError("Symbol is not a constructor!");var e=u(0<arguments.length?arguments[0]:void 0),t=function(n){this===Ae&&t.call(Re,n),E(this,Pe)&&E(this[Pe],e)&&(this[Pe][e]=!1),Be(this,e,T(1,n))};return v&&Ye&&Be(Ae,e,{configurable:!0,set:t}),We(e)}).prototype,"toString",(function(){return this._k})),xe.f=qe,k.f=Ve,ye.f=we.f=$e,se.f=Ge,oe.f=Ze,v&&M(Ae,"propertyIsEnumerable",Ge,!0),c.f=function(e){return We(d(e))}),j(j.G+j.W+j.F*!ze,{Symbol:De});for(var Qe=["hasInstance","isConcatSpreadable","iterator","match","replace","search","species","split","toPrimitive","toStringTag","unscopables"],Xe=0;Qe.length>Xe;)d(Qe[Xe++]);for(var Ke=re(d.store),Je=0;Ke.length>Je;)S(Ke[Je++]);j(j.S+j.F*!ze,"Symbol",{for:function(e){return E(Ie,e+="")?Ie[e]:Ie[e]=De(e)},keyFor:function(e){if(!He(e))throw TypeError(e+" is not a symbol!");for(var t in Ie)if(Ie[t]===e)return t},useSetter:function(){Ye=!0},useSimple:function(){Ye=!1}}),j(j.S+j.F*!ze,"Object",{create:function(e,t){return void 0===t?ve(e):Ue(ve(e),t)},defineProperty:Ve,defineProperties:Ue,getOwnPropertyDescriptor:qe,getOwnPropertyNames:$e,getOwnPropertySymbols:Ze});var et=p((function(){oe.f(1)}));function tt(e){return(tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function nt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function it(e,t){var n=Object.keys(e);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(e)),t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n}function rt(e){return function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}j(j.S+j.F*et,"Object",{getOwnPropertySymbols:function(e){return oe.f(le(e))}}),Ce&&j(j.S+j.F*(!ze||p((function(){var e=De();return"[null]"!=Me([e])||"{}"!=Me({a:e})||"{}"!=Me(Object(e))}))),"JSON",{stringify:function(e){for(var t,n,i=[e],r=1;arguments.length>r;)i.push(arguments[r++]);if(n=t=i[1],(h(t)||void 0!==e)&&!He(e))return ae(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!He(t))return t}),i[1]=t,Me.apply(Ce,i)}}),De.prototype[Ne]||D(De.prototype,Ne,De.prototype.valueOf),L(De,"Symbol"),L(Math,"Math",!0),L(r.JSON,"JSON",!0);!function(e,t){var n=(o.Object||{})[e]||Object[e],i={};i[e]=t(n),j(j.S+j.F*p((function(){n(1)})),"Object",i)}("keys",(function(){return function(e){return re(le(e))}}));var ot=function(){var e=f(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t};v&&"g"!=/./g.flags&&k.f(RegExp.prototype,"flags",{configurable:!0,get:ot});var st=/./.toString,at=function(e){M(RegExp.prototype,"toString",e,!0)};p((function(){return"/a/b"!=st.call({source:"a",flags:"b"})}))?at((function(){var e=f(this);return"/".concat(e.source,"/","flags"in e?e.flags:!v&&e instanceof RegExp?ot.call(e):void 0)})):"toString"!=st.name&&at((function(){return st.call(this)}));var lt=function(e){return function(t,n){var i,r,o=H(t)+"",s=q(n),a=o.length;return 0>s||s>=a?e?"":void 0:55296>(i=o.charCodeAt(s))||56319<i||s+1===a||56320>(r=o.charCodeAt(s+1))||57343<r?e?o.charAt(s):i:e?o.slice(s,s+2):r-56320+(i-55296<<10)+65536}}(!0),ut=function(e,t,n){return t+(n?lt(e,t).length:1)},dt=d("toStringTag"),ct="Arguments"==B(function(){return arguments}()),ht=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(t){}}(t=Object(e),dt))?n:ct?B(t):"Object"==(i=B(t))&&"function"==typeof t.callee?"Arguments":i},ft=RegExp.prototype.exec,pt=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==ht(e))throw new TypeError("RegExp#exec called on incompatible receiver");return ft.call(e,t)},vt=RegExp.prototype.exec,mt=String.prototype.replace,yt=vt,gt=function(){var e=/a/,t=/b*/g;return vt.call(e,"a"),vt.call(t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),bt=void 0!==/()??/.exec("")[1];(gt||bt)&&(yt=function(e){var t,n,i,r,o=this;return bt&&(n=new RegExp("^"+o.source+"$(?!\\s)",ot.call(o))),gt&&(t=o.lastIndex),i=vt.call(o,e),gt&&i&&(o.lastIndex=o.global?i.index+i[0].length:t),bt&&i&&1<i.length&&mt.call(i[0],n,(function(){for(r=1;r<arguments.length-2;r++)void 0===arguments[r]&&(i[r]=void 0)})),i});var _t=yt;j({target:"RegExp",proto:!0,forced:_t!==/./.exec},{exec:_t});var wt=d("species"),kt=!p((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),xt=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2===n.length&&"a"===n[0]&&"b"===n[1]}(),St=function(e,t,n){var i=d(e),r=!p((function(){var t={};return t[i]=function(){return 7},7!=""[e](t)})),o=r?!p((function(){var t=!1,n=/a/;return n.exec=function(){return t=!0,null},"split"===e&&(n.constructor={},n.constructor[wt]=function(){return n}),n[i](""),!t})):void 0;if(!r||!o||"replace"===e&&!kt||"split"===e&&!xt){var s=/./[i],a=n(H,i,""[e],(function(e,t,n,i,o){return t.exec===_t?r&&!o?{done:!0,value:s.call(t,n,i)}:{done:!0,value:e.call(n,t,i)}:{done:!1}})),l=a[0],u=a[1];M(String.prototype,e,l),D(RegExp.prototype,i,2==t?function(e,t){return u.call(e,this,t)}:function(e){return u.call(e,this)})}},Ot=Math.max,Et=Math.min,Tt=Math.floor,Dt=/\$([$&`']|\d\d?|<[^>]*>)/g,Ct=/\$([$&`']|\d\d?)/g,Mt=function(e){return void 0===e?e:e+""};St("replace",2,(function(e,t,n,i){function r(e,t,i,r,o,s){var a=i+e.length,l=r.length,u=Ct;return void 0!==o&&(o=le(o),u=Dt),n.call(s,u,(function(n,s){var u;switch(s.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,i);case"'":return t.slice(a);case"<":u=o[s.slice(1,-1)];break;default:var d=+s;if(0==d)return n;if(d>l){var c=Tt(d/10);return 0===c?n:c<=l?void 0===r[c-1]?s.charAt(1):r[c-1]+s.charAt(1):n}u=r[d-1]}return void 0===u?"":u}))}return[function(i,r){var o=e(this),s=null==i?void 0:i[t];return void 0===s?n.call(o+"",i,r):s.call(i,o,r)},function(e,t){var o=i(n,e,this,t);if(o.done)return o.value;var s=f(e),a=this+"",l="function"==typeof t;l||(t+="");var u=s.global;if(u){var d=s.unicode;s.lastIndex=0}for(var c,h=[];null!==(c=pt(s,a))&&(h.push(c),u);){""==c[0]+""&&(s.lastIndex=ut(a,Z(s.lastIndex),d))}for(var p="",v=0,m=0;m<h.length;m++){for(var y=(c=h[m])[0]+"",g=Ot(Et(q(c.index),a.length),0),b=[],_=1;_<c.length;_++)b.push(Mt(c[_]));var w=c.groups;if(l){var k=[y].concat(b,g,a);void 0!==w&&k.push(w);var x=t.apply(void 0,k)+""}else x=r(y,a,g,b,w,t);g>=v&&(p+=a.slice(v,g)+x,v=g+y.length)}return p+a.slice(v)}]}));var Pt=d("unscopables"),Nt=Array.prototype;null==Nt[Pt]&&D(Nt,Pt,{});var Ft=function(e){Nt[Pt][e]=!0},It=function(e,t){return{value:t,done:!!e}},jt={},Rt={};D(Rt,d("iterator"),(function(){return this}));var At=J("IE_PROTO"),zt=Object.prototype,Lt=Object.getPrototypeOf||function(e){return e=le(e),E(e,At)?e[At]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?zt:null},Yt=d("iterator"),Bt=!([].keys&&"next"in[].keys()),Wt=function(){return this},Ht=function(e,t,n,i,r,o,s){!function(e,t,n){e.prototype=ve(Rt,{next:T(1,n)}),L(e,t+" Iterator")}(n,t,i);var a,l,u,d=function(e){return!Bt&&e in p?p[e]:function(){return new n(this,e)}},c=t+" Iterator",h="values"==r,f=!1,p=e.prototype,v=p[Yt]||p["@@iterator"]||r&&p[r],m=v||d(r),y=r?h?d("entries"):m:void 0,g="Array"==t&&p.entries||v;if(g&&((u=Lt(g.call(new e)))!==Object.prototype&&u.next&&(L(u,c,!0),"function"!=typeof u[Yt]&&D(u,Yt,Wt))),h&&v&&"values"!==v.name&&(f=!0,m=function(){return v.call(this)}),(Bt||f||!p[Yt])&&D(p,Yt,m),jt[t]=m,jt[c]=Wt,r)if(a={values:h?m:d("values"),keys:o?m:d("keys"),entries:y},s)for(l in a)l in p||M(p,l,a[l]);else j(j.P+j.F*(Bt||f),t,a);return a}(Array,"Array",(function(e,t){this._t=V(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,It(1)):It(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values");jt.Arguments=jt.Array,Ft("keys"),Ft("values"),Ft("entries");for(var Vt=d("iterator"),Ut=d("toStringTag"),Gt=jt.Array,qt={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},$t=re(qt),Zt=0;Zt<$t.length;Zt++){var Qt,Xt=$t[Zt],Kt=qt[Xt],Jt=r[Xt],en=Jt&&Jt.prototype;if(en&&(en[Vt]||D(en,Vt,Gt),en[Ut]||D(en,Ut,Xt),jt[Xt]=Gt,Kt))for(Qt in Ht)en[Qt]||M(en,Qt,Ht[Qt],!0)}({})[d("toStringTag")]="z",M(Object.prototype,"toString",(function(){return"[object "+ht(this)+"]"}),!0);var tn=se.f,nn=function(e){return function(t){for(var n,i=V(t),r=re(i),o=r.length,s=0,a=[];o>s;)n=r[s++],(!v||tn.call(i,n))&&a.push(e?[n,i[n]]:i[n]);return a}}(!1);j(j.S,"Object",{values:function(e){return nn(e)}});var rn=d("match"),on=d("species"),sn=Math.min,an=[].push,ln=!p((function(){RegExp(4294967295,"y")}));St("split",2,(function(e,t,n,i){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||1<".".split(/()()/).length||"".split(/.?/).length?function(e,t){var i=this+"";if(void 0===e&&0===t)return[];if(!function(e){var t;return h(e)&&(void 0===(t=e[rn])?"RegExp"==B(e):!!t)}(e))return n.call(i,e,t);for(var r,o,s,a=[],l=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),u=0,d=void 0===t?4294967295:t>>>0,c=new RegExp(e.source,l+"g");(r=_t.call(c,i))&&!((o=c.lastIndex)>u&&(a.push(i.slice(u,r.index)),1<r.length&&r.index<i.length&&an.apply(a,r.slice(1)),s=r[0].length,u=o,a.length>=d));)c.lastIndex===r.index&&c.lastIndex++;return u===i.length?(s||!c.test(""))&&a.push(""):a.push(i.slice(u)),a.length>d?a.slice(0,d):a}:"0".split(void 0,0).length?function(e,t){return void 0===e&&0===t?[]:n.call(this,e,t)}:n,[function(n,i){var o=e(this),s=null==n?void 0:n[t];return void 0===s?r.call(o+"",n,i):s.call(n,o,i)},function(e,t){var o=i(r,e,this,t,r!==n);if(o.done)return o.value;var s=f(e),a=this+"",l=function(e,t){var n,i=f(e).constructor;return void 0===i||null==(n=f(i)[on])?t:P(n)}(s,RegExp),u=s.unicode,d=(s.ignoreCase?"i":"")+(s.multiline?"m":"")+(s.unicode?"u":"")+(ln?"y":"g"),c=new l(ln?s:"^(?:"+s.source+")",d),h=void 0===t?4294967295:t>>>0;if(0===h)return[];if(0===a.length)return null===pt(c,a)?[a]:[];for(var p=0,v=0,m=[];v<a.length;){c.lastIndex=ln?v:0;var y,g=pt(c,ln?a:a.slice(v));if(null===g||(y=sn(Z(c.lastIndex+(ln?0:v)),a.length))===p)v=ut(a,v,u);else{if(m.push(a.slice(p,v)),m.length===h)return m;for(var b=1;b<=g.length-1;b++)if(m.push(g[b]),m.length===h)return m;v=p=y}}return m.push(a.slice(p)),m}]}));var un=Object.assign,dn=!un||p((function(){var e={},t={},n=Symbol(),i="abcdefghijklmnopqrst";return e[n]=7,i.split("").forEach((function(e){t[e]=e})),7!=un({},e)[n]||Object.keys(un({},t)).join("")!=i}))?function(e){for(var t=le(e),n=arguments.length,i=1,r=oe.f,o=se.f;n>i;)for(var s,a=W(arguments[i++]),l=r?re(a).concat(r(a)):re(a),u=l.length,d=0;u>d;)s=l[d++],(!v||o.call(a,s))&&(t[s]=a[s]);return t}:un;j(j.S+j.F,"Object",{assign:dn});var cn=function(e,t){if(f(e),!h(t)&&null!==t)throw TypeError(t+": can't set as prototype!")},hn={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=N(Function.call,xe.f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(n){t=!0}return function(e,i){return cn(e,i),t?e.__proto__=i:n(e,i),e}}({},!1):void 0),check:cn}.set,fn=function(e,t,n){var i,r=t.constructor;return r!==n&&"function"==typeof r&&(i=r.prototype)!==n.prototype&&h(i)&&hn&&hn(e,i),e},pn="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff",vn="["+pn+"]",mn=RegExp("^"+vn+vn+"*"),yn=RegExp(vn+vn+"*$"),gn=function(e,t,n){var i={},r=p((function(){return!!pn[e]()||"​"!="​"[e]()})),o=i[e]=r?t(bn):pn[e];n&&(i[n]=o),j(j.P+j.F*r,"String",i)},bn=gn.trim=function(e,t){return e=H(e)+"",1&t&&(e=e.replace(mn,"")),2&t&&(e=e.replace(yn,"")),e},_n=gn,wn=ye.f,kn=xe.f,xn=k.f,Sn=_n.trim,On=r.Number,En=On,Tn=On.prototype,Dn="Number"==B(ve(Tn)),Cn="trim"in String.prototype,Mn=function(e){var t=_(e,!1);if("string"==typeof t&&2<t.length){var n,i,r,o=(t=Cn?t.trim():Sn(t,3)).charCodeAt(0);if(43===o||45===o){if(88===(n=t.charCodeAt(2))||120===n)return NaN}else if(48===o){switch(t.charCodeAt(1)){case 66:case 98:i=2,r=49;break;case 79:case 111:i=8,r=55;break;default:return+t}for(var s,a=t.slice(2),l=0,u=a.length;l<u;l++)if(48>(s=a.charCodeAt(l))||s>r)return NaN;return parseInt(a,i)}}return+t};if(!On(" 0o1")||!On("0b1")||On("+0x1")){On=function(e){var t=1>arguments.length?0:e,n=this;return n instanceof On&&(Dn?p((function(){Tn.valueOf.call(n)})):"Number"!=B(n))?fn(new En(Mn(t)),n,On):Mn(t)};for(var Pn,Nn=v?wn(En):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),Fn=0;Nn.length>Fn;Fn++)E(En,Pn=Nn[Fn])&&!E(On,Pn)&&xn(On,Pn,kn(En,Pn));On.prototype=Tn,Tn.constructor=On,M(r,"Number",On)}for(var In=i((function(e){var t=Math.round,n=Math.pow,i=Math.max,r=Math.abs,o=Math.min,s=Math.floor,a=Math.ceil;!function(t,n){e.exports=n()}(0,(function(){function l(){return pt.apply(null,arguments)}function u(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function d(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function c(e){return void 0===e}function h(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function f(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function p(e,t){var n,i=[];for(n=0;n<e.length;++n)i.push(t(e[n],n));return i}function v(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function m(e,t){for(var n in t)v(t,n)&&(e[n]=t[n]);return v(t,"toString")&&(e.toString=t.toString),v(t,"valueOf")&&(e.valueOf=t.valueOf),e}function y(e,t,n,i){return Ce(e,t,n,i,!0).utc()}function g(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function b(e){if(null==e._isValid){var t=g(e),n=vt.call(t.parsedDateParts,(function(e){return null!=e})),i=!isNaN(e._d.getTime())&&0>t.overflow&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n);if(e._strict&&(i=i&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return i;e._isValid=i}return e._isValid}function _(e){var t=y(NaN);return null==e?g(t).userInvalidated=!0:m(g(t),e),t}function w(e,t){var n,i,r;if(c(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),c(t._i)||(e._i=t._i),c(t._f)||(e._f=t._f),c(t._l)||(e._l=t._l),c(t._strict)||(e._strict=t._strict),c(t._tzm)||(e._tzm=t._tzm),c(t._isUTC)||(e._isUTC=t._isUTC),c(t._offset)||(e._offset=t._offset),c(t._pf)||(e._pf=g(t)),c(t._locale)||(e._locale=t._locale),0<mt.length)for(n=0;n<mt.length;n++)c(r=t[i=mt[n]])||(e[i]=r);return e}function k(e){w(this,e),this._d=new Date(null==e._d?NaN:e._d.getTime()),this.isValid()||(this._d=new Date(NaN)),!1===yt&&(yt=!0,l.updateOffset(this),yt=!1)}function x(e){return e instanceof k||null!=e&&null!=e._isAMomentObject}function S(e){return 0>e?a(e)||0:s(e)}function O(e){var t=+e,n=0;return 0!=t&&isFinite(t)&&(n=S(t)),n}function E(e,t,n){var i,s=o(e.length,t.length),a=r(e.length-t.length),l=0;for(i=0;i<s;i++)(n&&e[i]!==t[i]||!n&&O(e[i])!==O(t[i]))&&l++;return l+a}function T(e){!1===l.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function D(e,t){var n=!0;return m((function(){if(null!=l.deprecationHandler&&l.deprecationHandler(null,e),n){for(var i,r=[],o=0;o<arguments.length;o++){if(i="","object"==typeof arguments[o]){for(var s in i+="\n["+o+"] ",arguments[0])i+=s+": "+arguments[0][s]+", ";i=i.slice(0,-2)}else i=arguments[o];r.push(i)}T(e+"\nArguments: "+Array.prototype.slice.call(r).join("")+"\n"+(new Error).stack),n=!1}return t.apply(this,arguments)}),t)}function C(e,t){null!=l.deprecationHandler&&l.deprecationHandler(e,t),gt[e]||(T(t),gt[e]=!0)}function M(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function P(e,t){var n,i=m({},e);for(n in t)v(t,n)&&(d(e[n])&&d(t[n])?(i[n]={},m(i[n],e[n]),m(i[n],t[n])):null==t[n]?delete i[n]:i[n]=t[n]);for(n in e)v(e,n)&&!v(t,n)&&d(e[n])&&(i[n]=m({},i[n]));return i}function N(e){null!=e&&this.set(e)}function F(e,t){var n=e.toLowerCase();_t[n]=_t[n+"s"]=_t[t]=e}function I(e){return"string"==typeof e?_t[e]||_t[e.toLowerCase()]:void 0}function j(e){var t,n,i={};for(n in e)v(e,n)&&((t=I(n))&&(i[t]=e[n]));return i}function R(e,t){wt[e]=t}function A(e,t,o){var s=""+r(e);return(0<=e?o?"+":"":"-")+n(10,i(0,t-s.length)).toString().substr(1)+s}function z(e,t,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),e&&(Ot[e]=r),t&&(Ot[t[0]]=function(){return A(r.apply(this,arguments),t[1],t[2])}),n&&(Ot[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function L(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function Y(e,t){return e.isValid()?(t=B(t,e.localeData()),St[t]=St[t]||function(e){var t,n,i=e.match(kt);for(t=0,n=i.length;t<n;t++)i[t]=Ot[i[t]]?Ot[i[t]]:L(i[t]);return function(t){var r,o="";for(r=0;r<n;r++)o+=M(i[r])?i[r].call(t,e):i[r];return o}}(t),St[t](e)):e.localeData().invalidDate()}function B(e,t){function n(e){return t.longDateFormat(e)||e}var i=5;for(xt.lastIndex=0;0<=i&&xt.test(e);)e=e.replace(xt,n),xt.lastIndex=0,i-=1;return e}function W(e,t,n){Wt[e]=M(t)?t:function(e){return e&&n?n:t}}function H(e,t){return v(Wt,e)?Wt[e](t._strict,t._locale):new RegExp(function(e){return V(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,n,i,r){return t||n||i||r})))}(e))}function V(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function U(e,t){var n,i=t;for("string"==typeof e&&(e=[e]),h(t)&&(i=function(e,n){n[t]=O(e)}),n=0;n<e.length;n++)Ht[e[n]]=i}function G(e,t){U(e,(function(e,n,i,r){i._w=i._w||{},t(e,i._w,i,r)}))}function q(e,t,n){null!=t&&v(Ht,e)&&Ht[e](t,n._a,n,e)}function $(e){return Z(e)?366:365}function Z(e){return 0==e%4&&0!=e%100||0==e%400}function Q(e,t){return function(n){return null==n?X(this,e):(K(this,e,n),l.updateOffset(this,t),this)}}function X(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function K(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&Z(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),J(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function J(e,t){if(isNaN(e)||isNaN(t))return NaN;var n=function(e,t){return(e%t+t)%t}(t,12);return e+=(t-n)/12,1===n?Z(e)?29:28:31-n%7%2}function ee(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;12>i;++i)o=y([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===t?-1===(r=Vt.call(this._shortMonthsParse,s))?null:r:-1===(r=Vt.call(this._longMonthsParse,s))?null:r:"MMM"===t?-1!==(r=Vt.call(this._shortMonthsParse,s))?r:-1===(r=Vt.call(this._longMonthsParse,s))?null:r:-1!==(r=Vt.call(this._longMonthsParse,s))?r:-1===(r=Vt.call(this._shortMonthsParse,s))?null:r}function te(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=O(t);else if(!h(t=e.localeData().monthsParse(t)))return e;return n=o(e.date(),J(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function ne(e){return null==e?X(this,"Month"):(te(this,e),l.updateOffset(this,!0),this)}function ie(){function e(e,t){return t.length-e.length}var t,n,i=[],r=[],o=[];for(t=0;12>t;t++)n=y([2e3,t]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(e),r.sort(e),o.sort(e),t=0;12>t;t++)i[t]=V(i[t]),r[t]=V(r[t]);for(t=0;24>t;t++)o[t]=V(o[t]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function re(e,t,n,i,r,o,s){var a;return 100>e&&0<=e?(a=new Date(e+400,t,n,i,r,o,s),isFinite(a.getFullYear())&&a.setFullYear(e)):a=new Date(e,t,n,i,r,o,s),a}function oe(e){var t;if(100>e&&0<=e){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function se(e,t,n){var i=7+t-n;return-((7+oe(e,0,i).getUTCDay()-t)%7)+i-1}function ae(e,t,n,i,r){var o,s,a=1+7*(t-1)+(7+n-i)%7+se(e,i,r);return 0>=a?s=$(o=e-1)+a:a>$(e)?(o=e+1,s=a-$(e)):(o=e,s=a),{year:o,dayOfYear:s}}function le(e,t,n){var i,r,o=se(e.year(),t,n),a=s((e.dayOfYear()-o-1)/7)+1;return 1>a?i=a+ue(r=e.year()-1,t,n):a>ue(e.year(),t,n)?(i=a-ue(e.year(),t,n),r=e.year()+1):(r=e.year(),i=a),{week:i,year:r}}function ue(e,t,n){var i=se(e,t,n),r=se(e+1,t,n);return($(e)-i+r)/7}function de(e,t){return e.slice(t,7).concat(e.slice(0,t))}function ce(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;7>i;++i)o=y([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===t?-1===(r=Vt.call(this._weekdaysParse,s))?null:r:"ddd"===t?-1===(r=Vt.call(this._shortWeekdaysParse,s))?null:r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:"dddd"===t?-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1!==(r=Vt.call(this._shortWeekdaysParse,s))?r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:"ddd"===t?-1!==(r=Vt.call(this._shortWeekdaysParse,s))?r:-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:-1!==(r=Vt.call(this._minWeekdaysParse,s))?r:-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1===(r=Vt.call(this._shortWeekdaysParse,s))?null:r}function he(){function e(e,t){return t.length-e.length}var t,n,i,r,o,s=[],a=[],l=[],u=[];for(t=0;7>t;t++)n=y([2e3,1]).day(t),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),s.push(i),a.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(s.sort(e),a.sort(e),l.sort(e),u.sort(e),t=0;7>t;t++)a[t]=V(a[t]),l[t]=V(l[t]),u[t]=V(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+s.join("|")+")","i")}function fe(){return this.hours()%12||12}function pe(e,t){z(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function ve(e,t){return t._meridiemParse}function me(e){return e?e.toLowerCase().replace("_","-"):e}function ye(t){var n=null;if(!Kt[t]&&e&&e.exports)try{n=Zt._abbr,function(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}(),ge(n)}catch(t){}return Kt[t]}function ge(e,t){var n;return e&&((n=c(t)?_e(e):be(e,t))?Zt=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Zt._abbr}function be(e,t){if(null!==t){var n,i=Xt;if(t.abbr=e,null!=Kt[e])C("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=Kt[e]._config;else if(null!=t.parentLocale)if(null!=Kt[t.parentLocale])i=Kt[t.parentLocale]._config;else{if(null==(n=ye(t.parentLocale)))return Jt[t.parentLocale]||(Jt[t.parentLocale]=[]),Jt[t.parentLocale].push({name:e,config:t}),null;i=n._config}return Kt[e]=new N(P(i,t)),Jt[e]&&Jt[e].forEach((function(e){be(e.name,e.config)})),ge(e),Kt[e]}return delete Kt[e],null}function _e(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Zt;if(!u(e)){if(t=ye(e))return t;e=[e]}return function(e){for(var t,n,i,r,o=0;o<e.length;){for(t=(r=me(e[o]).split("-")).length,n=(n=me(e[o+1]))?n.split("-"):null;0<t;){if(i=ye(r.slice(0,t).join("-")))return i;if(n&&n.length>=t&&E(r,n,!0)>=t-1)break;t--}o++}return Zt}(e)}function we(e){var t,n=e._a;return n&&-2===g(e).overflow&&(t=0>n[1]||11<n[1]?1:1>n[2]||n[2]>J(n[0],n[1])?2:0>n[3]||24<n[3]||24===n[3]&&(0!==n[4]||0!==n[5]||0!==n[6])?3:0>n[4]||59<n[4]?4:0>n[5]||59<n[5]?5:0>n[6]||999<n[6]?6:-1,g(e)._overflowDayOfYear&&(0>t||2<t)&&(t=2),g(e)._overflowWeeks&&-1===t&&(t=7),g(e)._overflowWeekday&&-1===t&&(t=8),g(e).overflow=t),e}function ke(e,t,n){return null==e?null==t?n:t:e}function xe(e){var t,n,i,r,o,s=[];if(!e._d){for(i=function(e){var t=new Date(l.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[2]&&null==e._a[1]&&function(e){var t,n,i,r,o,s,a,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)o=1,s=4,n=ke(t.GG,e._a[0],le(Me(),1,4).year),i=ke(t.W,1),(1>(r=ke(t.E,1))||7<r)&&(l=!0);else{o=e._locale._week.dow,s=e._locale._week.doy;var u=le(Me(),o,s);n=ke(t.gg,e._a[0],u.year),i=ke(t.w,u.week),null==t.d?null==t.e?r=o:(r=t.e+o,(0>t.e||6<t.e)&&(l=!0)):(0>(r=t.d)||6<r)&&(l=!0)}1>i||i>ue(n,o,s)?g(e)._overflowWeeks=!0:null==l?(a=ae(n,i,r,o,s),e._a[0]=a.year,e._dayOfYear=a.dayOfYear):g(e)._overflowWeekday=!0}(e),null!=e._dayOfYear&&(o=ke(e._a[0],i[0]),(e._dayOfYear>$(o)||0===e._dayOfYear)&&(g(e)._overflowDayOfYear=!0),n=oe(o,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),t=0;3>t&&null==e._a[t];++t)e._a[t]=s[t]=i[t];for(;7>t;t++)e._a[t]=s[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?oe:re).apply(null,s),r=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&void 0!==e._w.d&&e._w.d!==r&&(g(e).weekdayMismatch=!0)}}function Se(e){var t,n,i,r,o,s,a=e._i,l=en.exec(a)||tn.exec(a);if(l){for(g(e).iso=!0,t=0,n=rn.length;t<n;t++)if(rn[t][1].exec(l[1])){r=rn[t][0],i=!1!==rn[t][2];break}if(null==r)return void(e._isValid=!1);if(l[3]){for(t=0,n=on.length;t<n;t++)if(on[t][1].exec(l[3])){o=(l[2]||" ")+on[t][0];break}if(null==o)return void(e._isValid=!1)}if(!i&&null!=o)return void(e._isValid=!1);if(l[4]){if(!nn.exec(l[4]))return void(e._isValid=!1);s="Z"}e._f=r+(o||"")+(s||""),Te(e)}else e._isValid=!1}function Oe(e){var t=parseInt(e,10);return 49>=t?2e3+t:999>=t?1900+t:t}function Ee(e){var t=an.exec(function(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}(e._i));if(t){var n=function(e,t,n,i,r,o){var s=[Oe(e),qt.indexOf(t),parseInt(n,10),parseInt(i,10),parseInt(r,10)];return o&&s.push(parseInt(o,10)),s}(t[4],t[3],t[2],t[5],t[6],t[7]);if(!function(e,t,n){return!e||$t.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(g(n).weekdayMismatch=!0,n._isValid=!1,!1)}(t[1],n,e))return;e._a=n,e._tzm=function(e,t,n){if(e)return ln[e];if(t)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(t[8],t[9],t[10]),e._d=oe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),g(e).rfc2822=!0}else e._isValid=!1}function Te(e){if(e._f!==l.ISO_8601)if(e._f!==l.RFC_2822){e._a=[],g(e).empty=!0;var t,n,i,r,o,s=""+e._i,a=s.length,u=0;for(i=B(e._f,e._locale).match(kt)||[],t=0;t<i.length;t++)r=i[t],(n=(s.match(H(r,e))||[])[0])&&(0<(o=s.substr(0,s.indexOf(n))).length&&g(e).unusedInput.push(o),s=s.slice(s.indexOf(n)+n.length),u+=n.length),Ot[r]?(n?g(e).empty=!1:g(e).unusedTokens.push(r),q(r,n,e)):e._strict&&!n&&g(e).unusedTokens.push(r);g(e).charsLeftOver=a-u,0<s.length&&g(e).unusedInput.push(s),12>=e._a[3]&&!0===g(e).bigHour&&0<e._a[3]&&(g(e).bigHour=void 0),g(e).parsedDateParts=e._a.slice(0),g(e).meridiem=e._meridiem,e._a[3]=function(e,t,n){var i;return null==n?t:null==e.meridiemHour?null==e.isPM?t:((i=e.isPM(n))&&12>t&&(t+=12),i||12!==t||(t=0),t):e.meridiemHour(t,n)}(e._locale,e._a[3],e._meridiem),xe(e),we(e)}else Ee(e);else Se(e)}function De(e){var t=e._i,n=e._f;return e._locale=e._locale||_e(e._l),null===t||void 0===n&&""===t?_({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),x(t)?new k(we(t)):(f(t)?e._d=t:u(n)?function(e){var t,n,i,r,o;if(0===e._f.length)return g(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<e._f.length;r++)o=0,t=w({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[r],Te(t),b(t)&&(o+=g(t).charsLeftOver,o+=10*g(t).unusedTokens.length,g(t).score=o,(null==i||o<i)&&(i=o,n=t));m(e,n||t)}(e):n?Te(e):function(e){var t=e._i;c(t)?e._d=new Date(l.now()):f(t)?e._d=new Date(t.valueOf()):"string"==typeof t?function(e){var t=sn.exec(e._i);null===t?(Se(e),!1===e._isValid&&(delete e._isValid,Ee(e),!1===e._isValid&&(delete e._isValid,l.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):u(t)?(e._a=p(t.slice(0),(function(e){return parseInt(e,10)})),xe(e)):d(t)?function(e){if(!e._d){var t=j(e._i);e._a=p([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),xe(e)}}(e):h(t)?e._d=new Date(t):l.createFromInputFallback(e)}(e),b(e)||(e._d=null),e))}function Ce(e,t,n,i,r){var o={};return(!0===n||!1===n)&&(i=n,n=void 0),(d(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||u(e)&&0===e.length)&&(e=void 0),o._isAMomentObject=!0,o._useUTC=o._isUTC=r,o._l=n,o._i=e,o._f=t,o._strict=i,function(e){var t=new k(we(De(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}(o)}function Me(e,t,n,i){return Ce(e,t,n,i,!1)}function Pe(e,t){var n,i;if(1===t.length&&u(t[0])&&(t=t[0]),!t.length)return Me();for(n=t[0],i=1;i<t.length;++i)(!t[i].isValid()||t[i][e](n))&&(n=t[i]);return n}function Ne(e){var t=j(e),n=t.year||0,i=t.quarter||0,r=t.month||0,o=t.week||t.isoWeek||0,s=t.day||0,a=t.hour||0,l=t.minute||0,u=t.second||0,d=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===Vt.call(cn,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,i=0;i<cn.length;++i)if(e[cn[i]]){if(n)return!1;parseFloat(e[cn[i]])!==O(e[cn[i]])&&(n=!0)}return!0}(t),this._milliseconds=+d+1e3*u+6e4*l+1e3*a*60*60,this._days=+s+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=_e(),this._bubble()}function Fe(e){return e instanceof Ne}function Ie(e){return 0>e?-1*t(-1*e):t(e)}function je(e,t){z(e,0,0,(function(){var e=this.utcOffset(),n="+";return 0>e&&(e=-e,n="-"),n+A(~~(e/60),2)+t+A(~~e%60,2)}))}function Re(e,t){var n=(t||"").match(e);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(hn)||["-",0,0],r=60*i[1]+O(i[2]);return 0===r?0:"+"===i[0]?r:-r}function Ae(e,t){var n,i;return t._isUTC?(n=t.clone(),i=(x(e)||f(e)?e.valueOf():Me(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+i),l.updateOffset(n,!1),n):Me(e).local()}function ze(e){return 15*-t(e._d.getTimezoneOffset()/15)}function Le(){return!!this.isValid()&&this._isUTC&&0===this._offset}function Ye(e,t){var n,i,r,o=e,s=null;return Fe(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:h(e)?(o={},t?o[t]=e:o.milliseconds=e):(s=fn.exec(e))?(n="-"===s[1]?-1:1,o={y:0,d:O(s[2])*n,h:O(s[3])*n,m:O(s[4])*n,s:O(s[5])*n,ms:O(Ie(1e3*s[6]))*n}):(s=pn.exec(e))?(n="-"===s[1]?-1:1,o={y:Be(s[2],n),M:Be(s[3],n),w:Be(s[4],n),d:Be(s[5],n),h:Be(s[6],n),m:Be(s[7],n),s:Be(s[8],n)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(r=function(e,t){var n;return e.isValid()&&t.isValid()?(t=Ae(t,e),e.isBefore(t)?n=We(e,t):((n=We(t,e)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(Me(o.from),Me(o.to)),(o={}).ms=r.milliseconds,o.M=r.months),i=new Ne(o),Fe(e)&&v(e,"_locale")&&(i._locale=e._locale),i}function Be(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function We(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function He(e,t){return function(n,i){var r;return null===i||isNaN(+i)||(C(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),Ve(this,Ye(n="string"==typeof n?+n:n,i),e),this}}function Ve(e,t,n,i){var r=t._milliseconds,o=Ie(t._days),s=Ie(t._months);e.isValid()&&(i=null==i||i,s&&te(e,X(e,"Month")+s*n),o&&K(e,"Date",X(e,"Date")+o*n),r&&e._d.setTime(e._d.valueOf()+r*n),i&&l.updateOffset(e,o||s))}function Ue(e,t){var n,i=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(i,"months");return 0>t-r?n=(t-r)/(r-e.clone().add(i-1,"months")):n=(t-r)/(e.clone().add(i+1,"months")-r),-(i+n)||0}function Ge(e){var t;return void 0===e?this._locale._abbr:(null!=(t=_e(e))&&(this._locale=t),this)}function qe(){return this._locale}function $e(e,t){return(e%t+t)%t}function Ze(e,t,n){return 100>e&&0<=e?new Date(e+400,t,n)-126227808e5:new Date(e,t,n).valueOf()}function Qe(e,t,n){return 100>e&&0<=e?Date.UTC(e+400,t,n)-126227808e5:Date.UTC(e,t,n)}function Xe(e,t){z(0,[e,e.length],0,t)}function Ke(e,t,n,i,r){var o;return null==e?le(this,i,r).year:(t>(o=ue(e,i,r))&&(t=o),Je.call(this,e,t,n,i,r))}function Je(e,t,n,i,r){var o=ae(e,t,n,i,r),s=oe(o.year,0,o.dayOfYear);return this.year(s.getUTCFullYear()),this.month(s.getUTCMonth()),this.date(s.getUTCDate()),this}function et(e,t){t[6]=O(1e3*("0."+e))}function tt(e){return e}function nt(e,t,n,i){var r=_e(),o=y().set(i,t);return r[n](o,e)}function it(e,t,n){if(h(e)&&(t=e,e=void 0),e=e||"",null!=t)return nt(e,t,n,"month");var i,r=[];for(i=0;12>i;i++)r[i]=nt(e,i,n,"month");return r}function rt(e,t,n,i){"boolean"==typeof e?(h(t)&&(n=t,t=void 0),t=t||""):(n=t=e,e=!1,h(t)&&(n=t,t=void 0),t=t||"");var r=_e(),o=e?r._week.dow:0;if(null!=n)return nt(t,(n+o)%7,i,"day");var s,a=[];for(s=0;7>s;s++)a[s]=nt(t,(s+o)%7,i,"day");return a}function ot(e,t,n,i){var r=Ye(t,n);return e._milliseconds+=i*r._milliseconds,e._days+=i*r._days,e._months+=i*r._months,e._bubble()}function st(e){return 0>e?s(e):a(e)}function at(e){return 4800*e/146097}function lt(e){return 146097*e/4800}function ut(e){return function(){return this.as(e)}}function dt(e){return function(){return this.isValid()?this._data[e]:NaN}}function ct(e,t,n,i,r){return r.relativeTime(t||1,!!n,e,i)}function ht(e){return(0<e)-(0>e)||+e}function ft(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Vn(this._milliseconds)/1e3,i=Vn(this._days),r=Vn(this._months);e=S(n/60),t=S(e/60),n%=60,e%=60;var o=S(r/12),s=r%=12,a=i,l=t,u=e,d=n?n.toFixed(3).replace(/\.?0+$/,""):"",c=this.asSeconds();if(!c)return"P0D";var h=0>c?"-":"",f=ht(this._months)===ht(c)?"":"-",p=ht(this._days)===ht(c)?"":"-",v=ht(this._milliseconds)===ht(c)?"":"-";return h+"P"+(o?f+o+"Y":"")+(s?f+s+"M":"")+(a?p+a+"D":"")+(l||u||d?"T":"")+(l?v+l+"H":"")+(u?v+u+"M":"")+(d?v+d+"S":"")}var pt,vt;vt=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,i=0;i<n;i++)if(i in t&&e.call(this,t[i],i,t))return!0;return!1};var mt=l.momentProperties=[],yt=!1,gt={};l.suppressDeprecationWarnings=!1,l.deprecationHandler=null;var bt=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)v(e,t)&&n.push(t);return n},_t={},wt={},kt=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,xt=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,St={},Ot={},Et=/\d/,Tt=/\d\d/,Dt=/\d{3}/,Ct=/\d{4}/,Mt=/[+-]?\d{6}/,Pt=/\d\d?/,Nt=/\d\d\d\d?/,Ft=/\d\d\d\d\d\d?/,It=/\d{1,3}/,jt=/\d{1,4}/,Rt=/[+-]?\d{1,6}/,At=/\d+/,zt=/[+-]?\d+/,Lt=/Z|[+-]\d\d:?\d\d/gi,Yt=/Z|[+-]\d\d(?::?\d\d)?/gi,Bt=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Wt={},Ht={};z("Y",0,0,(function(){var e=this.year();return 9999>=e?""+e:"+"+e})),z(0,["YY",2],0,(function(){return this.year()%100})),z(0,["YYYY",4],0,"year"),z(0,["YYYYY",5],0,"year"),z(0,["YYYYYY",6,!0],0,"year"),F("year","y"),R("year",1),W("Y",zt),W("YY",Pt,Tt),W("YYYY",jt,Ct),W("YYYYY",Rt,Mt),W("YYYYYY",Rt,Mt),U(["YYYYY","YYYYYY"],0),U("YYYY",(function(e,t){t[0]=2===e.length?l.parseTwoDigitYear(e):O(e)})),U("YY",(function(e,t){t[0]=l.parseTwoDigitYear(e)})),U("Y",(function(e,t){t[0]=parseInt(e,10)})),l.parseTwoDigitYear=function(e){return O(e)+(68<O(e)?1900:2e3)};var Vt,Ut=Q("FullYear",!0);Vt=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},z("M",["MM",2],"Mo",(function(){return this.month()+1})),z("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),z("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),F("month","M"),R("month",8),W("M",Pt),W("MM",Pt,Tt),W("MMM",(function(e,t){return t.monthsShortRegex(e)})),W("MMMM",(function(e,t){return t.monthsRegex(e)})),U(["M","MM"],(function(e,t){t[1]=O(e)-1})),U(["MMM","MMMM"],(function(e,t,n,i){var r=n._locale.monthsParse(e,i,n._strict);null==r?g(n).invalidMonth=e:t[1]=r}));var Gt=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,qt=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];z("w",["ww",2],"wo","week"),z("W",["WW",2],"Wo","isoWeek"),F("week","w"),F("isoWeek","W"),R("week",5),R("isoWeek",5),W("w",Pt),W("ww",Pt,Tt),W("W",Pt),W("WW",Pt,Tt),G(["w","ww","W","WW"],(function(e,t,n,i){t[i.substr(0,1)]=O(e)})),z("d",0,"do","day"),z("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),z("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),z("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),z("e",0,0,"weekday"),z("E",0,0,"isoWeekday"),F("day","d"),F("weekday","e"),F("isoWeekday","E"),R("day",11),R("weekday",11),R("isoWeekday",11),W("d",Pt),W("e",Pt),W("E",Pt),W("dd",(function(e,t){return t.weekdaysMinRegex(e)})),W("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),W("dddd",(function(e,t){return t.weekdaysRegex(e)})),G(["dd","ddd","dddd"],(function(e,t,n,i){var r=n._locale.weekdaysParse(e,i,n._strict);null==r?g(n).invalidWeekday=e:t.d=r})),G(["d","e","E"],(function(e,t,n,i){t[i]=O(e)}));var $t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];z("H",["HH",2],0,"hour"),z("h",["hh",2],0,fe),z("k",["kk",2],0,(function(){return this.hours()||24})),z("hmm",0,0,(function(){return""+fe.apply(this)+A(this.minutes(),2)})),z("hmmss",0,0,(function(){return""+fe.apply(this)+A(this.minutes(),2)+A(this.seconds(),2)})),z("Hmm",0,0,(function(){return""+this.hours()+A(this.minutes(),2)})),z("Hmmss",0,0,(function(){return""+this.hours()+A(this.minutes(),2)+A(this.seconds(),2)})),pe("a",!0),pe("A",!1),F("hour","h"),R("hour",13),W("a",ve),W("A",ve),W("H",Pt),W("h",Pt),W("k",Pt),W("HH",Pt,Tt),W("hh",Pt,Tt),W("kk",Pt,Tt),W("hmm",Nt),W("hmmss",Ft),W("Hmm",Nt),W("Hmmss",Ft),U(["H","HH"],3),U(["k","kk"],(function(e,t){var n=O(e);t[3]=24===n?0:n})),U(["a","A"],(function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e})),U(["h","hh"],(function(e,t,n){t[3]=O(e),g(n).bigHour=!0})),U("hmm",(function(e,t,n){var i=e.length-2;t[3]=O(e.substr(0,i)),t[4]=O(e.substr(i)),g(n).bigHour=!0})),U("hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=O(e.substr(0,i)),t[4]=O(e.substr(i,2)),t[5]=O(e.substr(r)),g(n).bigHour=!0})),U("Hmm",(function(e,t){var n=e.length-2;t[3]=O(e.substr(0,n)),t[4]=O(e.substr(n))})),U("Hmmss",(function(e,t){var n=e.length-4,i=e.length-2;t[3]=O(e.substr(0,n)),t[4]=O(e.substr(n,2)),t[5]=O(e.substr(i))}));var Zt,Qt=Q("Hours",!0),Xt={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:qt,week:{dow:0,doy:6},weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekdaysShort:$t,meridiemParse:/[ap]\.?m?\.?/i},Kt={},Jt={},en=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tn=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,nn=/Z|[+-]\d\d(?::?\d\d)?/,rn=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],on=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],sn=/^\/?Date\((\-?\d+)/i,an=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,ln={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};l.createFromInputFallback=D("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),l.ISO_8601=function(){},l.RFC_2822=function(){};var un=D("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:_()})),dn=D("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:_()})),cn=["year","quarter","month","week","day","hour","minute","second","millisecond"];je("Z",":"),je("ZZ",""),W("Z",Yt),W("ZZ",Yt),U(["Z","ZZ"],(function(e,t,n){n._useUTC=!0,n._tzm=Re(Yt,e)}));var hn=/([\+\-]|\d\d)/gi;l.updateOffset=function(){};var fn=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,pn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;Ye.fn=Ne.prototype,Ye.invalid=function(){return Ye(NaN)};var vn=He(1,"add"),mn=He(-1,"subtract");l.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",l.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var yn=D("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));z(0,["gg",2],0,(function(){return this.weekYear()%100})),z(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),Xe("gggg","weekYear"),Xe("ggggg","weekYear"),Xe("GGGG","isoWeekYear"),Xe("GGGGG","isoWeekYear"),F("weekYear","gg"),F("isoWeekYear","GG"),R("weekYear",1),R("isoWeekYear",1),W("G",zt),W("g",zt),W("GG",Pt,Tt),W("gg",Pt,Tt),W("GGGG",jt,Ct),W("gggg",jt,Ct),W("GGGGG",Rt,Mt),W("ggggg",Rt,Mt),G(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,n,i){t[i.substr(0,2)]=O(e)})),G(["gg","GG"],(function(e,t,n,i){t[i]=l.parseTwoDigitYear(e)})),z("Q",0,"Qo","quarter"),F("quarter","Q"),R("quarter",7),W("Q",Et),U("Q",(function(e,t){t[1]=3*(O(e)-1)})),z("D",["DD",2],"Do","date"),F("date","D"),R("date",9),W("D",Pt),W("DD",Pt,Tt),W("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),U(["D","DD"],2),U("Do",(function(e,t){t[2]=O(e.match(Pt)[0])}));var gn=Q("Date",!0);z("DDD",["DDDD",3],"DDDo","dayOfYear"),F("dayOfYear","DDD"),R("dayOfYear",4),W("DDD",It),W("DDDD",Dt),U(["DDD","DDDD"],(function(e,t,n){n._dayOfYear=O(e)})),z("m",["mm",2],0,"minute"),F("minute","m"),R("minute",14),W("m",Pt),W("mm",Pt,Tt),U(["m","mm"],4);var bn=Q("Minutes",!1);z("s",["ss",2],0,"second"),F("second","s"),R("second",15),W("s",Pt),W("ss",Pt,Tt),U(["s","ss"],5);var _n,wn=Q("Seconds",!1);for(z("S",0,0,(function(){return~~(this.millisecond()/100)})),z(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),z(0,["SSS",3],0,"millisecond"),z(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),z(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),z(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),z(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),z(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),z(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),F("millisecond","ms"),R("millisecond",16),W("S",It,Et),W("SS",It,Tt),W("SSS",It,Dt),_n="SSSS";9>=_n.length;_n+="S")W(_n,At);for(_n="S";9>=_n.length;_n+="S")U(_n,et);var kn=Q("Milliseconds",!1);z("z",0,0,"zoneAbbr"),z("zz",0,0,"zoneName");var xn=k.prototype;xn.add=vn,xn.calendar=function(e,t){var n=e||Me(),i=Ae(n,this).startOf("day"),r=l.calendarFormat(this,i)||"sameElse",o=t&&(M(t[r])?t[r].call(this,n):t[r]);return this.format(o||this.localeData().calendar(r,this,Me(n)))},xn.clone=function(){return new k(this)},xn.diff=function(e,t,n){var i,r,o;return this.isValid()?(i=Ae(e,this)).isValid()?(r=6e4*(i.utcOffset()-this.utcOffset()),o="year"===(t=I(t))?Ue(this,i)/12:"month"===t?Ue(this,i):"quarter"===t?Ue(this,i)/3:"second"===t?(this-i)/1e3:"minute"===t?(this-i)/6e4:"hour"===t?(this-i)/36e5:"day"===t?(this-i-r)/864e5:"week"===t?(this-i-r)/6048e5:this-i,n?o:S(o)):NaN:NaN},xn.endOf=function(e){var t;if(void 0===(e=I(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Qe:Ze;return"year"===e?t=n(this.year()+1,0,1)-1:"quarter"===e?t=n(this.year(),this.month()-this.month()%3+3,1)-1:"month"===e?t=n(this.year(),this.month()+1,1)-1:"week"===e?t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1:"isoWeek"===e?t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1:"day"===e||"date"===e?t=n(this.year(),this.month(),this.date()+1)-1:"hour"===e?(t=this._d.valueOf(),t+=36e5-$e(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1):"minute"===e?(t=this._d.valueOf(),t+=6e4-$e(t,6e4)-1):"second"===e&&(t=this._d.valueOf(),t+=1e3-$e(t,1e3)-1),this._d.setTime(t),l.updateOffset(this,!0),this},xn.format=function(e){e||(e=this.isUtc()?l.defaultFormatUtc:l.defaultFormat);var t=Y(this,e);return this.localeData().postformat(t)},xn.from=function(e,t){return this.isValid()&&(x(e)&&e.isValid()||Me(e).isValid())?Ye({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},xn.fromNow=function(e){return this.from(Me(),e)},xn.to=function(e,t){return this.isValid()&&(x(e)&&e.isValid()||Me(e).isValid())?Ye({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},xn.toNow=function(e){return this.to(Me(),e)},xn.get=function(e){return M(this[e=I(e)])?this[e]():this},xn.invalidAt=function(){return g(this).overflow},xn.isAfter=function(e,t){var n=x(e)?e:Me(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},xn.isBefore=function(e,t){var n=x(e)?e:Me(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},xn.isBetween=function(e,t,n,i){var r=x(e)?e:Me(e),o=x(t)?t:Me(t);return!!(this.isValid()&&r.isValid()&&o.isValid())&&(("("===(i=i||"()")[0]?this.isAfter(r,n):!this.isBefore(r,n))&&(")"===i[1]?this.isBefore(o,n):!this.isAfter(o,n)))},xn.isSame=function(e,t){var n,i=x(e)?e:Me(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},xn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},xn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},xn.isValid=function(){return b(this)},xn.lang=yn,xn.locale=Ge,xn.localeData=qe,xn.max=dn,xn.min=un,xn.parsingFlags=function(){return m({},g(this))},xn.set=function(e,t){if("object"==typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:wt[n]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=j(e)),i=0;i<n.length;i++)this[n[i].unit](e[n[i].unit]);else if(M(this[e=I(e)]))return this[e](t);return this},xn.startOf=function(e){var t;if(void 0===(e=I(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Qe:Ze;return"year"===e?t=n(this.year(),0,1):"quarter"===e?t=n(this.year(),this.month()-this.month()%3,1):"month"===e?t=n(this.year(),this.month(),1):"week"===e?t=n(this.year(),this.month(),this.date()-this.weekday()):"isoWeek"===e?t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)):"day"===e||"date"===e?t=n(this.year(),this.month(),this.date()):"hour"===e?(t=this._d.valueOf(),t-=$e(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)):"minute"===e?(t=this._d.valueOf(),t-=$e(t,6e4)):"second"===e&&(t=this._d.valueOf(),t-=$e(t,1e3)),this._d.setTime(t),l.updateOffset(this,!0),this},xn.subtract=mn,xn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},xn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},xn.toDate=function(){return new Date(this.valueOf())},xn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return 0>n.year()||9999<n.year()?Y(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):M(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",Y(n,"Z")):Y(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},xn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',i=0<=this.year()&&9999>=this.year()?"YYYY":"YYYYYY",r=t+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},xn.toJSON=function(){return this.isValid()?this.toISOString():null},xn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},xn.unix=function(){return s(this.valueOf()/1e3)},xn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},xn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},xn.year=Ut,xn.isLeapYear=function(){return Z(this.year())},xn.weekYear=function(e){return Ke.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},xn.isoWeekYear=function(e){return Ke.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},xn.quarter=xn.quarters=function(e){return null==e?a((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},xn.month=ne,xn.daysInMonth=function(){return J(this.year(),this.month())},xn.week=xn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},xn.isoWeek=xn.isoWeeks=function(e){var t=le(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},xn.weeksInYear=function(){var e=this.localeData()._week;return ue(this.year(),e.dow,e.doy)},xn.isoWeeksInYear=function(){return ue(this.year(),1,4)},xn.date=gn,xn.day=xn.days=function(e){if(!this.isValid())return null==e?NaN:this;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null==e?t:(e=function(e,t){return"string"==typeof e?isNaN(e)?"number"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10):e}(e,this.localeData()),this.add(e-t,"d"))},xn.weekday=function(e){if(!this.isValid())return null==e?NaN:this;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},xn.isoWeekday=function(e){if(!this.isValid())return null==e?NaN:this;if(null!=e){var t=function(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},xn.dayOfYear=function(e){var n=t((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?n:this.add(e-n,"d")},xn.hour=xn.hours=Qt,xn.minute=xn.minutes=bn,xn.second=xn.seconds=wn,xn.millisecond=xn.milliseconds=kn,xn.utcOffset=function(e,t,n){var i,o=this._offset||0;if(!this.isValid())return null==e?NaN:this;if(null!=e){if("string"!=typeof e)16>r(e)&&!n&&(e*=60);else if(null===(e=Re(Yt,e)))return this;return!this._isUTC&&t&&(i=ze(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,"m"),o!==e&&(!t||this._changeInProgress?Ve(this,Ye(e-o,"m"),1,!1):!this._changeInProgress&&(this._changeInProgress=!0,l.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?o:ze(this)},xn.utc=function(e){return this.utcOffset(0,e)},xn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(ze(this),"m")),this},xn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Re(Lt,this._i);null==e?this.utcOffset(0,!0):this.utcOffset(e)}return this},xn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Me(e).utcOffset():0,0==(this.utcOffset()-e)%60)},xn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},xn.isLocal=function(){return!!this.isValid()&&!this._isUTC},xn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},xn.isUtc=Le,xn.isUTC=Le,xn.zoneAbbr=function(){return this._isUTC?"UTC":""},xn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},xn.dates=D("dates accessor is deprecated. Use date instead.",gn),xn.months=D("months accessor is deprecated. Use month instead",ne),xn.years=D("years accessor is deprecated. Use year instead",Ut),xn.zone=D("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null==e?-this.utcOffset():("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this)})),xn.isDSTShifted=D("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!c(this._isDSTShifted))return this._isDSTShifted;var e={};if(w(e,this),(e=De(e))._a){var t=e._isUTC?y(e._a):Me(e._a);this._isDSTShifted=this.isValid()&&0<E(e._a,t.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted}));var Sn=N.prototype;Sn.calendar=function(e,t,n){var i=this._calendar[e]||this._calendar.sameElse;return M(i)?i.call(t,n):i},Sn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},Sn.invalidDate=function(){return this._invalidDate},Sn.ordinal=function(e){return this._ordinal.replace("%d",e)},Sn.preparse=tt,Sn.postformat=tt,Sn.relativeTime=function(e,t,n,i){var r=this._relativeTime[n];return M(r)?r(e,t,n,i):r.replace(/%d/i,e)},Sn.pastFuture=function(e,t){var n=this._relativeTime[0<e?"future":"past"];return M(n)?n(t):n.replace(/%s/i,t)},Sn.set=function(e){var t,n;for(n in e)M(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},Sn.months=function(e,t){return e?u(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Gt).test(t)?"format":"standalone"][e.month()]:u(this._months)?this._months:this._months.standalone},Sn.monthsShort=function(e,t){return e?u(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Gt.test(t)?"format":"standalone"][e.month()]:u(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},Sn.monthsParse=function(e,t,n){var i,r,o;if(this._monthsParseExact)return ee.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;12>i;i++){if(r=y([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[i].test(e))return i;if(n&&"MMM"===t&&this._shortMonthsParse[i].test(e))return i;if(!n&&this._monthsParse[i].test(e))return i}},Sn.monthsRegex=function(e){return this._monthsParseExact?(v(this,"_monthsRegex")||ie.call(this),e?this._monthsStrictRegex:this._monthsRegex):(v(this,"_monthsRegex")||(this._monthsRegex=Bt),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},Sn.monthsShortRegex=function(e){return this._monthsParseExact?(v(this,"_monthsRegex")||ie.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(v(this,"_monthsShortRegex")||(this._monthsShortRegex=Bt),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},Sn.week=function(e){return le(e,this._week.dow,this._week.doy).week},Sn.firstDayOfYear=function(){return this._week.doy},Sn.firstDayOfWeek=function(){return this._week.dow},Sn.weekdays=function(e,t){var n=u(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?de(n,this._week.dow):e?n[e.day()]:n},Sn.weekdaysMin=function(e){return!0===e?de(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},Sn.weekdaysShort=function(e){return!0===e?de(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},Sn.weekdaysParse=function(e,t,n){var i,r,o;if(this._weekdaysParseExact)return ce.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;7>i;i++){if(r=y([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[i].test(e))return i;if(n&&"ddd"===t&&this._shortWeekdaysParse[i].test(e))return i;if(n&&"dd"===t&&this._minWeekdaysParse[i].test(e))return i;if(!n&&this._weekdaysParse[i].test(e))return i}},Sn.weekdaysRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(v(this,"_weekdaysRegex")||(this._weekdaysRegex=Bt),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},Sn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(v(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Bt),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},Sn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(v(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Bt),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},Sn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},Sn.meridiem=function(e,t,n){return 11<e?n?"pm":"PM":n?"am":"AM"},ge("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===O(e%100/10)?"th":1==t?"st":2==t?"nd":3==t?"rd":"th")}}),l.lang=D("moment.lang is deprecated. Use moment.locale instead.",ge),l.langData=D("moment.langData is deprecated. Use moment.localeData instead.",_e);var On=r,En=ut("ms"),Tn=ut("s"),Dn=ut("m"),Cn=ut("h"),Mn=ut("d"),Pn=ut("w"),Nn=ut("M"),Fn=ut("Q"),In=ut("y"),jn=dt("milliseconds"),Rn=dt("seconds"),An=dt("minutes"),zn=dt("hours"),Ln=dt("days"),Yn=dt("months"),Bn=dt("years"),Wn=t,Hn={ss:44,s:45,m:45,h:22,d:26,M:11},Vn=r,Un=Ne.prototype;return Un.isValid=function(){return this._isValid},Un.abs=function(){var e=this._data;return this._milliseconds=On(this._milliseconds),this._days=On(this._days),this._months=On(this._months),e.milliseconds=On(e.milliseconds),e.seconds=On(e.seconds),e.minutes=On(e.minutes),e.hours=On(e.hours),e.months=On(e.months),e.years=On(e.years),this},Un.add=function(e,t){return ot(this,e,t,1)},Un.subtract=function(e,t){return ot(this,e,t,-1)},Un.as=function(e){if(!this.isValid())return NaN;var n,i,r=this._milliseconds;if("month"===(e=I(e))||"quarter"===e||"year"===e)switch(n=this._days+r/864e5,i=this._months+at(n),e){case"month":return i;case"quarter":return i/3;case"year":return i/12}else switch(n=this._days+t(lt(this._months)),e){case"week":return n/7+r/6048e5;case"day":return n+r/864e5;case"hour":return 24*n+r/36e5;case"minute":return 1440*n+r/6e4;case"second":return 86400*n+r/1e3;case"millisecond":return s(864e5*n)+r;default:throw new Error("Unknown unit "+e)}},Un.asMilliseconds=En,Un.asSeconds=Tn,Un.asMinutes=Dn,Un.asHours=Cn,Un.asDays=Mn,Un.asWeeks=Pn,Un.asMonths=Nn,Un.asQuarters=Fn,Un.asYears=In,Un.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*O(this._months/12):NaN},Un._bubble=function(){var e,t,n,i,r,o=this._milliseconds,s=this._days,a=this._months,l=this._data;return 0<=o&&0<=s&&0<=a||0>=o&&0>=s&&0>=a||(o+=864e5*st(lt(a)+s),s=0,a=0),l.milliseconds=o%1e3,e=S(o/1e3),l.seconds=e%60,t=S(e/60),l.minutes=t%60,n=S(t/60),l.hours=n%24,s+=S(n/24),a+=r=S(at(s)),s-=st(lt(r)),i=S(a/12),a%=12,l.days=s,l.months=a,l.years=i,this},Un.clone=function(){return Ye(this)},Un.get=function(e){return e=I(e),this.isValid()?this[e+"s"]():NaN},Un.milliseconds=jn,Un.seconds=Rn,Un.minutes=An,Un.hours=zn,Un.days=Ln,Un.weeks=function(){return S(this.days()/7)},Un.months=Yn,Un.years=Bn,Un.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=function(e,t,n){var i=Ye(e).abs(),r=Wn(i.as("s")),o=Wn(i.as("m")),s=Wn(i.as("h")),a=Wn(i.as("d")),l=Wn(i.as("M")),u=Wn(i.as("y")),d=r<=Hn.ss&&["s",r]||r<Hn.s&&["ss",r]||1>=o&&["m"]||o<Hn.m&&["mm",o]||1>=s&&["h"]||s<Hn.h&&["hh",s]||1>=a&&["d"]||a<Hn.d&&["dd",a]||1>=l&&["M"]||l<Hn.M&&["MM",l]||1>=u&&["y"]||["yy",u];return d[2]=t,d[3]=0<+e,d[4]=n,ct.apply(null,d)}(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)},Un.toISOString=ft,Un.toString=ft,Un.toJSON=ft,Un.locale=Ge,Un.localeData=qe,Un.toIsoString=D("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",ft),Un.lang=yn,z("X",0,0,"unix"),z("x",0,0,"valueOf"),W("x",zt),W("X",/[+-]?\d+(\.\d{1,3})?/),U("X",(function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))})),U("x",(function(e,t,n){n._d=new Date(O(e))})),l.version="2.24.0",function(e){pt=e}(Me),l.fn=xn,l.min=function(){var e=[].slice.call(arguments,0);return Pe("isBefore",e)},l.max=function(){var e=[].slice.call(arguments,0);return Pe("isAfter",e)},l.now=function(){return Date.now?Date.now():+new Date},l.utc=y,l.unix=function(e){return Me(1e3*e)},l.months=function(e,t){return it(e,t,"months")},l.isDate=f,l.locale=ge,l.invalid=_,l.duration=Ye,l.isMoment=x,l.weekdays=function(e,t,n){return rt(e,t,n,"weekdays")},l.parseZone=function(){return Me.apply(null,arguments).parseZone()},l.localeData=_e,l.isDuration=Fe,l.monthsShort=function(e,t){return it(e,t,"monthsShort")},l.weekdaysMin=function(e,t,n){return rt(e,t,n,"weekdaysMin")},l.defineLocale=be,l.updateLocale=function(e,t){if(null!=t){var n,i,r=Xt;null!=(i=ye(e))&&(r=i._config),(n=new N(t=P(r,t))).parentLocale=Kt[e],Kt[e]=n,ge(e)}else null!=Kt[e]&&(null==Kt[e].parentLocale?null!=Kt[e]&&delete Kt[e]:Kt[e]=Kt[e].parentLocale);return Kt[e]},l.locales=function(){return bt(Kt)},l.weekdaysShort=function(e,t,n){return rt(e,t,n,"weekdaysShort")},l.normalizeUnits=I,l.relativeTimeRounding=function(e){return void 0===e?Wn:"function"==typeof e&&(Wn=e,!0)},l.relativeTimeThreshold=function(e,t){return void 0!==Hn[e]&&(void 0===t?Hn[e]:(Hn[e]=t,"s"===e&&(Hn.ss=t-1),!0))},l.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return-6>n?"sameElse":-1>n?"lastWeek":0>n?"lastDay":1>n?"sameDay":2>n?"nextDay":7>n?"nextWeek":"sameElse"},l.prototype=xn,l.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},l}))})),jn=[],Rn=0;256>Rn;Rn++)jn[Rn]=(Rn+256).toString(16).substr(1);function An(e,t){var n=t||0,i=jn;return i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]}for(var zn=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e}}var t=Array(16);return function(){for(var e,n=0;16>n;n++)0==(3&n)&&(e=4294967296*Math.random()),t[n]=255&e>>>((3&n)<<3);return t}}(),Ln=[],Yn=0;256>Yn;Yn++)Ln[Yn]=(Yn+256).toString(16).substr(1);var Bn=zn();Bn[0],Bn[1],Bn[2],Bn[3],Bn[4],Bn[5],Bn[6],Bn[7];function Wn(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=1<arguments.length?arguments[1]:void 0,n=2<arguments.length?arguments[2]:void 0,i=t&&n||0;"string"==typeof e&&(t="binary"===e?Array(16):void 0,e={});var r=e.random||(e.rng||zn)();if(r[6]=64|15&r[6],r[8]=128|63&r[8],t)for(var o=0;16>o;o++)t[i+o]=r[o];return t||An(r)}var Hn=/^\/?Date\((-?\d+)/i,Vn=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,Un=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,Gn=/^rgb\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *\)$/i,qn=/^rgba\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *([01]|0?\.\d+) *\)$/i;function $n(e){return e instanceof Number||"number"==typeof e}function Zn(e){if(e)for(;!0===e.hasChildNodes();){var t=e.firstChild;t&&(Zn(t),e.removeChild(t))}}function Qn(e){return e instanceof String||"string"==typeof e}function Xn(e){return"object"===tt(e)&&null!==e}function Kn(e){if(e instanceof Date)return!0;if(Qn(e)){if(Hn.exec(e))return!0;if(!isNaN(Date.parse(e)))return!0}return!1}function Jn(e){return In.isMoment(e)}function ei(e,t,n,i){var r=!1;!0===i&&(r=null===t[n]&&void 0!==e[n]),r?delete e[n]:e[n]=t[n]}function ti(e,t){var n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];for(var i in e)if(void 0!==t[i])if(null===t[i]||"object"!==tt(t[i]))ei(e,t,i,n);else{var r=e[i],o=t[i];Xn(r)&&Xn(o)&&ti(r,o,n)}}var ni=Object.assign;function ii(e,t){if(!Array.isArray(e))throw new Error("Array with property names expected as first argument");for(var n=arguments.length,i=Array(2<n?n-2:0),r=2;r<n;r++)i[r-2]=arguments[r];for(var o,s=0,a=i;s<a.length;s++){o=a[s];for(var l,u=0;u<e.length;u++)l=e[u],o&&Object.prototype.hasOwnProperty.call(o,l)&&(t[l]=o[l])}return t}function ri(e,t,n){var i=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3];if(Array.isArray(n))throw new TypeError("Arrays are not supported by deepExtend");for(var r,o=0;o<e.length;o++)if(r=e[o],Object.prototype.hasOwnProperty.call(n,r))if(n[r]&&n[r].constructor===Object)void 0===t[r]&&(t[r]={}),t[r].constructor===Object?si(t[r],n[r],!1,i):ei(t,n,r,i);else{if(Array.isArray(n[r]))throw new TypeError("Arrays are not supported by deepExtend");ei(t,n,r,i)}return t}function oi(e,t,n){var i=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3];if(Array.isArray(n))throw new TypeError("Arrays are not supported by deepExtend");for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)&&-1===e.indexOf(r))if(n[r]&&n[r].constructor===Object)void 0===t[r]&&(t[r]={}),t[r].constructor===Object?si(t[r],n[r]):ei(t,n,r,i);else if(Array.isArray(n[r])){t[r]=[];for(var o=0;o<n[r].length;o++)t[r].push(n[r][o])}else ei(t,n,r,i);return t}function si(e,t){var n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],i=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3];for(var r in t)(Object.prototype.hasOwnProperty.call(t,r)||!0===n)&&(t[r]&&Object.getPrototypeOf(t[r])===Object.prototype?void 0===e[r]?e[r]=si({},t[r],n):e[r]&&Object.getPrototypeOf(e[r])===Object.prototype?si(e[r],t[r],n):ei(e,t,r,i):Array.isArray(t[r])?e[r]=t[r].slice():ei(e,t,r,i));return e}function ai(e,t){if(e.length!==t.length)return!1;for(var n=0,i=e.length;n<i;n++)if(e[n]!=t[n])return!1;return!0}function li(e,t){var n;if(void 0!==e){if(null===e)return null;if(!t)return e;if("string"!=typeof t&&!(t instanceof String))throw new Error("Type must be a string");switch(t){case"boolean":case"Boolean":return!!e;case"number":case"Number":return Qn(e)&&!isNaN(Date.parse(e))?In(e).valueOf():+e.valueOf();case"string":case"String":return e+"";case"Date":if($n(e))return new Date(e);if(e instanceof Date)return new Date(e.valueOf());if(Jn(e))return new Date(e.valueOf());if(Qn(e))return(n=Hn.exec(e))?new Date(+n[1]):In(new Date(e)).toDate();throw new Error("Cannot convert object of type "+ui(e)+" to type Date");case"Moment":if($n(e))return In(e);if(e instanceof Date)return In(e.valueOf());if(Jn(e))return In(e);if(Qn(e))return n=Hn.exec(e),In(n?+n[1]:e);throw new Error("Cannot convert object of type "+ui(e)+" to type Date");case"ISODate":if($n(e))return new Date(e);if(e instanceof Date)return e.toISOString();if(Jn(e))return e.toDate().toISOString();if(Qn(e))return(n=Hn.exec(e))?new Date(+n[1]).toISOString():In(e).format();throw new Error("Cannot convert object of type "+ui(e)+" to type ISODate");case"ASPDate":if($n(e))return"/Date("+e+")/";if(e instanceof Date||Jn(e))return"/Date("+e.valueOf()+")/";if(Qn(e))return"/Date("+((n=Hn.exec(e))?new Date(+n[1]).valueOf():new Date(e).valueOf())+")/";throw new Error("Cannot convert object of type "+ui(e)+" to type ASPDate");default:throw new Error("Unknown type ".concat(t))}}}function ui(e){var t=tt(e);return"object"===t?null===e?"null":e instanceof Boolean?"Boolean":e instanceof Number?"Number":e instanceof String?"String":Array.isArray(e)?"Array":e instanceof Date?"Date":"Object":"number"===t?"Number":"boolean"===t?"Boolean":"string"===t?"String":void 0===t?"undefined":t}function di(e,t){return[].concat(rt(e),[t])}function ci(e){return e.slice()}function hi(e){return e.getBoundingClientRect().left}function fi(e){return e.getBoundingClientRect().right}function pi(e){return e.getBoundingClientRect().top}function vi(e,t){var n=e.className.split(" "),i=t.split(" ");n=n.concat(i.filter((function(e){return 0>n.indexOf(e)}))),e.className=n.join(" ")}function mi(e,t){var n=e.className.split(" "),i=t.split(" ");n=n.filter((function(e){return 0>i.indexOf(e)})),e.className=n.join(" ")}function yi(e,t){if(Array.isArray(e))for(var n=e.length,i=0;i<n;i++)t(e[i],i,e);else for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t(e[r],r,e)}var gi=Object.values;function bi(e,t,n){return e[t]!==n&&(e[t]=n,!0)}function _i(e){var t=!1;return function(){t||(t=!0,requestAnimationFrame((function(){t=!1,e()})))}}function wi(e,t,n,i){e.addEventListener?(void 0===i&&(i=!1),"mousewheel"===t&&0<=navigator.userAgent.indexOf("Firefox")&&(t="DOMMouseScroll"),e.addEventListener(t,n,i)):e.attachEvent("on"+t,n)}function ki(e,t,n,i){e.removeEventListener?(void 0===i&&(i=!1),"mousewheel"===t&&0<=navigator.userAgent.indexOf("Firefox")&&(t="DOMMouseScroll"),e.removeEventListener(t,n,i)):e.detachEvent("on"+t,n)}function xi(e){e||(e=window.event),e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)}function Si(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:window.event,t=null;return e&&(e.target?t=e.target:e.srcElement&&(t=e.srcElement)),t instanceof Element&&(null==t.nodeType||3!=t.nodeType||(t=t.parentNode)instanceof Element)?t:null}function Oi(e,t){for(var n=e;n;){if(n===t)return!0;if(!n.parentNode)return!1;n=n.parentNode}return!1}var Ei={asBoolean:function(e,t){return"function"==typeof e&&(e=e()),null==e?t||null:0!=e},asNumber:function(e,t){return"function"==typeof e&&(e=e()),null==e?t||null:+e||t||null},asString:function(e,t){return"function"==typeof e&&(e=e()),null==e?t||null:e+""},asSize:function(e,t){return"function"==typeof e&&(e=e()),Qn(e)?e:$n(e)?e+"px":t||null},asElement:function(e,t){return"function"==typeof e&&(e=e()),e||t||null}};function Ti(e){var t;switch(e.length){case 3:case 4:return(t=Un.exec(e))?{r:parseInt(t[1]+t[1],16),g:parseInt(t[2]+t[2],16),b:parseInt(t[3]+t[3],16)}:null;case 6:case 7:return(t=Vn.exec(e))?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null;default:return null}}function Di(e,t){if(-1!==e.indexOf("rgba"))return e;if(-1!==e.indexOf("rgb")){var n=e.substr(e.indexOf("(")+1).replace(")","").split(",");return"rgba("+n[0]+","+n[1]+","+n[2]+","+t+")"}var i=Ti(e);return null==i?e:"rgba("+i.r+","+i.g+","+i.b+","+t+")"}function Ci(e,t,n){return"#"+(16777216+(e<<16)+(t<<8)+n).toString(16).slice(1)}function Mi(e,t){var n=Math.min;if(Qn(e)){var i=e;if(Yi(i)){var r=i.substr(4).substr(0,i.length-5).split(",").map((function(e){return parseInt(e)}));i=Ci(r[0],r[1],r[2])}if(!0===Li(i)){var o=zi(i),s={h:o.h,s:.8*o.s,v:n(1,1.02*o.v)},a={h:o.h,s:n(1,1.25*o.s),v:.8*o.v},l=Ai(a.h,a.s,a.v),u=Ai(s.h,s.s,s.v);return{background:i,border:l,highlight:{background:u,border:l},hover:{background:u,border:l}}}return{background:i,border:i,highlight:{background:i,border:i},hover:{background:i,border:i}}}return t?{background:e.background||t.background,border:e.border||t.border,highlight:Qn(e.highlight)?{border:e.highlight,background:e.highlight}:{background:e.highlight&&e.highlight.background||t.highlight.background,border:e.highlight&&e.highlight.border||t.highlight.border},hover:Qn(e.hover)?{border:e.hover,background:e.hover}:{border:e.hover&&e.hover.border||t.hover.border,background:e.hover&&e.hover.background||t.hover.background}}:{background:e.background||void 0,border:e.border||void 0,highlight:Qn(e.highlight)?{border:e.highlight,background:e.highlight}:{background:e.highlight&&e.highlight.background||void 0,border:e.highlight&&e.highlight.border||void 0},hover:Qn(e.hover)?{border:e.hover,background:e.hover}:{border:e.hover&&e.hover.border||void 0,background:e.hover&&e.hover.background||void 0}}}function Pi(e,t,n){var i=Math.max,r=Math.min,o=r(e/=255,r(t/=255,n/=255)),s=i(e,i(t,n));return o===s?{h:0,s:0,v:o}:{h:60*((e===o?3:n===o?1:5)-(e===o?t-n:n===o?e-t:n-e)/(s-o))/360,s:(s-o)/s,v:s}}var Ni=function(e){var t={};return e.split(";").forEach((function(e){if(""!=e.trim()){var n=e.split(":"),i=n[0].trim(),r=n[1].trim();t[i]=r}})),t},Fi=function(e){return Object.keys(e).map((function(t){return t+": "+e[t]})).join("; ")};function Ii(e,t){var n=function(e){for(var t,n=1;n<arguments.length;n++)t=null==arguments[n]?{}:arguments[n],n%2?it(t,!0).forEach((function(n){nt(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):it(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}));return e}({},Ni(e.style.cssText),{},Ni(t));e.style.cssText=Fi(n)}function ji(e,t){var n=Ni(e.style.cssText),i=Ni(t);for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&delete n[r];e.style.cssText=Fi(n)}function Ri(e,t,n){var i,r,o,s=Math.floor,a=s(6*e),l=6*e-a,u=n*(1-t),d=n*(1-l*t),c=n*(1-(1-l)*t);switch(a%6){case 0:i=n,r=c,o=u;break;case 1:i=d,r=n,o=u;break;case 2:i=u,r=n,o=c;break;case 3:i=u,r=d,o=n;break;case 4:i=c,r=u,o=n;break;case 5:i=n,r=u,o=d}return{r:s(255*i),g:s(255*r),b:s(255*o)}}function Ai(e,t,n){var i=Ri(e,t,n);return Ci(i.r,i.g,i.b)}function zi(e){var t=Ti(e);if(!t)throw new TypeError("'".concat(e,"' is not a valid color."));return Pi(t.r,t.g,t.b)}function Li(e){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e)}function Yi(e){return Gn.test(e)}function Bi(e){return qn.test(e)}function Wi(e,t){if(null!==t&&"object"===tt(t)){for(var n=Object.create(t),i=0;i<e.length;i++)Object.prototype.hasOwnProperty.call(t,e[i])&&"object"==tt(t[e[i]])&&(n[e[i]]=Hi(t[e[i]]));return n}return null}function Hi(e){if(null===e||"object"!==tt(e))return null;if(e instanceof Element)return e;var t=Object.create(e);for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&"object"==tt(e[n])&&(t[n]=Hi(e[n]));return t}function Vi(e,t){for(var n=0;n<e.length;n++){var i=e[n],r=void 0;for(r=n;0<r&&0>t(i,e[r-1]);r--)e[r]=e[r-1];e[r]=i}return e}function Ui(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},r=function(e){return null!=e},o=function(e){return null!==e&&"object"===tt(e)};if(!o(e))throw new Error("Parameter mergeTarget must be an object");if(!o(t))throw new Error("Parameter options must be an object");if(!r(n))throw new Error("Parameter option must have a value");if(!o(i))throw new Error("Parameter globalOptions must be an object");var s=function(e,t,n){o(e[n])||(e[n]={});var i=t[n],r=e[n];for(var s in i)Object.prototype.hasOwnProperty.call(i,s)&&(r[s]=i[s])},a=t[n],l=o(i)&&!function(e){for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}(i),u=l?i[n]:void 0,d=u?u.enabled:void 0;if(void 0!==a){if("boolean"==typeof a)return o(e[n])||(e[n]={}),void(e[n].enabled=a);if(null===a&&!o(e[n])){if(!r(u))return;e[n]=Object.create(u)}if(o(a)){var c=!0;void 0===a.enabled?void 0!==d&&(c=u.enabled):c=a.enabled,s(e,t,n),e[n].enabled=c}}}function Gi(e,t,n,i){for(var r=0,o=0,s=e.length-1;o<=s&&r<1e4;){var a=Math.floor((o+s)/2),l=e[a],u=t(void 0===i?l[n]:l[n][i]);if(0==u)return a;-1==u?o=a+1:s=a-1,r++}return-1}function qi(e,t,n,i,r){var o,s,a,l,u=Math.max,d=Math.min,c=Math.floor,h=0,f=0,p=e.length-1;for(r=null==r?function(e,t){return e==t?0:e<t?-1:1}:r;f<=p&&1e4>h;){if(o=e[u(0,(l=c(.5*(p+f)))-1)][n],s=e[l][n],a=e[d(e.length-1,l+1)][n],0==r(s,t))return l;if(0>r(o,t)&&0<r(s,t))return"before"==i?u(0,l-1):l;if(0>r(s,t)&&0<r(a,t))return"before"==i?l:d(e.length-1,l+1);0>r(s,t)?f=l+1:p=l-1,h++}return-1}var $i={linear:function(e){return e},easeInQuad:function(e){return e*e},easeOutQuad:function(e){return e*(2-e)},easeInOutQuad:function(e){return.5>e?2*e*e:(4-2*e)*e-1},easeInCubic:function(e){return e*e*e},easeOutCubic:function(e){return--e*e*e+1},easeInOutCubic:function(e){return.5>e?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1},easeInQuart:function(e){return e*e*e*e},easeOutQuart:function(e){return 1- --e*e*e*e},easeInOutQuart:function(e){return.5>e?8*e*e*e*e:1-8*--e*e*e*e},easeInQuint:function(e){return e*e*e*e*e},easeOutQuint:function(e){return 1+--e*e*e*e*e},easeInOutQuint:function(e){return.5>e?16*e*e*e*e*e:1+16*--e*e*e*e*e}};function Zi(){var e=document.createElement("p");e.style.width="100%",e.style.height="200px";var t=document.createElement("div");t.style.position="absolute",t.style.top="0px",t.style.left="0px",t.style.visibility="hidden",t.style.width="200px",t.style.height="150px",t.style.overflow="hidden",t.appendChild(e),document.body.appendChild(t);var n=e.offsetWidth;t.style.overflow="scroll";var i=e.offsetWidth;return n==i&&(i=t.clientWidth),document.body.removeChild(t),n-i}function Qi(e,t){var n;Array.isArray(t)||(t=[t]);var i=!0,r=!1,o=void 0;try{for(var s,a,l=e[Symbol.iterator]();!(i=(s=l.next()).done);i=!0)if(a=s.value){n=a[t[0]];for(var u=1;u<t.length;u++)n&&(n=n[t[u]]);if(void 0!==n)break}}catch(e){r=!0,o=e}finally{try{i||null==l.return||l.return()}finally{if(r)throw o}}return n}var Xi=Object.freeze({isNumber:$n,recursiveDOMDelete:Zn,isString:Qn,isObject:Xn,isDate:Kn,isMoment:Jn,fillIfDefined:ti,extend:ni,selectiveExtend:ii,selectiveDeepExtend:ri,selectiveNotDeepExtend:oi,deepExtend:si,equalArray:ai,convert:li,getType:ui,copyAndExtendArray:di,copyArray:ci,getAbsoluteLeft:hi,getAbsoluteRight:fi,getAbsoluteTop:pi,addClassName:vi,removeClassName:mi,forEach:yi,toArray:gi,updateProperty:bi,throttle:_i,addEventListener:wi,removeEventListener:ki,preventDefault:xi,getTarget:Si,hasParent:Oi,option:Ei,hexToRGB:Ti,overrideOpacity:Di,RGBToHex:Ci,parseColor:Mi,RGBToHSV:Pi,addCssText:Ii,removeCssText:ji,HSVToRGB:Ri,HSVToHex:Ai,hexToHSV:zi,isValidHex:Li,isValidRGB:Yi,isValidRGBA:Bi,selectiveBridgeObject:Wi,bridgeObject:Hi,insertSort:Vi,mergeOptions:Ui,binarySearchCustom:Gi,binarySearchValue:qi,easingFunctions:$i,getScrollBarWidth:Zi,topMost:Qi,randomUUID:Wn}),Ki=Object.freeze({default:Xi,HSVToHex:Ai,HSVToRGB:Ri,RGBToHSV:Pi,RGBToHex:Ci,addClassName:vi,addCssText:Ii,addEventListener:wi,binarySearchCustom:Gi,binarySearchValue:qi,bridgeObject:Hi,convert:li,copyAndExtendArray:di,copyArray:ci,deepExtend:si,easingFunctions:$i,equalArray:ai,extend:ni,fillIfDefined:ti,forEach:yi,getAbsoluteLeft:hi,getAbsoluteRight:fi,getAbsoluteTop:pi,getScrollBarWidth:Zi,getTarget:Si,getType:ui,hasParent:Oi,hexToHSV:zi,hexToRGB:Ti,insertSort:Vi,isDate:Kn,isMoment:Jn,isNumber:$n,isObject:Xn,isString:Qn,isValidHex:Li,isValidRGB:Yi,isValidRGBA:Bi,mergeOptions:Ui,option:Ei,overrideOpacity:Di,parseColor:Mi,preventDefault:xi,randomUUID:Wn,recursiveDOMDelete:Zn,removeClassName:mi,removeCssText:ji,removeEventListener:ki,selectiveBridgeObject:Wi,selectiveDeepExtend:ri,selectiveExtend:ii,selectiveNotDeepExtend:oi,throttle:_i,toArray:gi,topMost:Qi,updateProperty:bi});var Ji=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e};function er(e,t){return e(t={exports:{}},t.exports),t.exports}var tr=er((function(e){function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(i){return e.exports=n="function"==typeof Symbol&&"symbol"===t(Symbol.iterator)?function(e){return t(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":t(e)},n(i)}e.exports=n}));var nr=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};function ir(e,t){for(var n,i=0;i<t.length;i++)(n=t[i]).enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}var rr=function(e,t,n){return t&&ir(e.prototype,t),n&&ir(e,n),e};var or=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e};var sr=function(e,t){return!t||"object"!==tr(t)&&"function"!=typeof t?or(e):t},ar=er((function(e){function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},t(n)}e.exports=t})),lr=er((function(e){function t(n,i){return e.exports=t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},t(n,i)}e.exports=t}));for(var ur=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&lr(e,t)},dr=[],cr=0;256>cr;cr++)dr[cr]=(cr+256).toString(16).substr(1);function hr(e,t){var n=t||0,i=dr;return i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]}for(var fr=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e}}var t=Array(16);return function(){for(var e,n=0;16>n;n++)0==(3&n)&&(e=4294967296*Math.random()),t[n]=255&e>>>((3&n)<<3);return t}}(),pr=[],vr=0;256>vr;vr++)pr[vr]=(vr+256).toString(16).substr(1);var mr=fr();mr[0],mr[1],mr[2],mr[3],mr[4],mr[5],mr[6],mr[7];function yr(e){return(yr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}"undefined"==typeof globalThis?"undefined"==typeof window?void 0===e&&("undefined"==typeof self||self):window:globalThis;for(var gr=function(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e){var t=Math.round,n=Math.pow,i=Math.max,r=Math.abs,o=Math.min,s=Math.floor,a=Math.ceil;!function(t,n){e.exports=n()}(0,(function(){function l(){return pt.apply(null,arguments)}function u(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function d(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function c(e){return void 0===e}function h(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function f(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function p(e,t){var n,i=[];for(n=0;n<e.length;++n)i.push(t(e[n],n));return i}function v(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function m(e,t){for(var n in t)v(t,n)&&(e[n]=t[n]);return v(t,"toString")&&(e.toString=t.toString),v(t,"valueOf")&&(e.valueOf=t.valueOf),e}function y(e,t,n,i){return Ce(e,t,n,i,!0).utc()}function g(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function b(e){if(null==e._isValid){var t=g(e),n=vt.call(t.parsedDateParts,(function(e){return null!=e})),i=!isNaN(e._d.getTime())&&0>t.overflow&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n);if(e._strict&&(i=i&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return i;e._isValid=i}return e._isValid}function _(e){var t=y(NaN);return null==e?g(t).userInvalidated=!0:m(g(t),e),t}function w(e,t){var n,i,r;if(c(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),c(t._i)||(e._i=t._i),c(t._f)||(e._f=t._f),c(t._l)||(e._l=t._l),c(t._strict)||(e._strict=t._strict),c(t._tzm)||(e._tzm=t._tzm),c(t._isUTC)||(e._isUTC=t._isUTC),c(t._offset)||(e._offset=t._offset),c(t._pf)||(e._pf=g(t)),c(t._locale)||(e._locale=t._locale),0<mt.length)for(n=0;n<mt.length;n++)c(r=t[i=mt[n]])||(e[i]=r);return e}function k(e){w(this,e),this._d=new Date(null==e._d?NaN:e._d.getTime()),this.isValid()||(this._d=new Date(NaN)),!1===yt&&(yt=!0,l.updateOffset(this),yt=!1)}function x(e){return e instanceof k||null!=e&&null!=e._isAMomentObject}function S(e){return 0>e?a(e)||0:s(e)}function O(e){var t=+e,n=0;return 0!=t&&isFinite(t)&&(n=S(t)),n}function E(e,t,n){var i,s=o(e.length,t.length),a=r(e.length-t.length),l=0;for(i=0;i<s;i++)(n&&e[i]!==t[i]||!n&&O(e[i])!==O(t[i]))&&l++;return l+a}function T(e){!1===l.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function D(e,t){var n=!0;return m((function(){if(null!=l.deprecationHandler&&l.deprecationHandler(null,e),n){for(var i,r=[],o=0;o<arguments.length;o++){if(i="","object"==typeof arguments[o]){for(var s in i+="\n["+o+"] ",arguments[0])i+=s+": "+arguments[0][s]+", ";i=i.slice(0,-2)}else i=arguments[o];r.push(i)}T(e+"\nArguments: "+Array.prototype.slice.call(r).join("")+"\n"+(new Error).stack),n=!1}return t.apply(this,arguments)}),t)}function C(e,t){null!=l.deprecationHandler&&l.deprecationHandler(e,t),gt[e]||(T(t),gt[e]=!0)}function M(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function P(e,t){var n,i=m({},e);for(n in t)v(t,n)&&(d(e[n])&&d(t[n])?(i[n]={},m(i[n],e[n]),m(i[n],t[n])):null==t[n]?delete i[n]:i[n]=t[n]);for(n in e)v(e,n)&&!v(t,n)&&d(e[n])&&(i[n]=m({},i[n]));return i}function N(e){null!=e&&this.set(e)}function F(e,t){var n=e.toLowerCase();_t[n]=_t[n+"s"]=_t[t]=e}function I(e){return"string"==typeof e?_t[e]||_t[e.toLowerCase()]:void 0}function j(e){var t,n,i={};for(n in e)v(e,n)&&((t=I(n))&&(i[t]=e[n]));return i}function R(e,t){wt[e]=t}function A(e,t,o){var s=""+r(e);return(0<=e?o?"+":"":"-")+n(10,i(0,t-s.length)).toString().substr(1)+s}function z(e,t,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),e&&(Ot[e]=r),t&&(Ot[t[0]]=function(){return A(r.apply(this,arguments),t[1],t[2])}),n&&(Ot[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function L(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function Y(e,t){return e.isValid()?(t=B(t,e.localeData()),St[t]=St[t]||function(e){var t,n,i=e.match(kt);for(t=0,n=i.length;t<n;t++)i[t]=Ot[i[t]]?Ot[i[t]]:L(i[t]);return function(t){var r,o="";for(r=0;r<n;r++)o+=M(i[r])?i[r].call(t,e):i[r];return o}}(t),St[t](e)):e.localeData().invalidDate()}function B(e,t){function n(e){return t.longDateFormat(e)||e}var i=5;for(xt.lastIndex=0;0<=i&&xt.test(e);)e=e.replace(xt,n),xt.lastIndex=0,i-=1;return e}function W(e,t,n){Wt[e]=M(t)?t:function(e){return e&&n?n:t}}function H(e,t){return v(Wt,e)?Wt[e](t._strict,t._locale):new RegExp(function(e){return V(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,n,i,r){return t||n||i||r})))}(e))}function V(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function U(e,t){var n,i=t;for("string"==typeof e&&(e=[e]),h(t)&&(i=function(e,n){n[t]=O(e)}),n=0;n<e.length;n++)Ht[e[n]]=i}function G(e,t){U(e,(function(e,n,i,r){i._w=i._w||{},t(e,i._w,i,r)}))}function q(e,t,n){null!=t&&v(Ht,e)&&Ht[e](t,n._a,n,e)}function $(e){return Z(e)?366:365}function Z(e){return 0==e%4&&0!=e%100||0==e%400}function Q(e,t){return function(n){return null==n?X(this,e):(K(this,e,n),l.updateOffset(this,t),this)}}function X(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function K(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&Z(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),J(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function J(e,t){if(isNaN(e)||isNaN(t))return NaN;var n=function(e,t){return(e%t+t)%t}(t,12);return e+=(t-n)/12,1===n?Z(e)?29:28:31-n%7%2}function ee(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;12>i;++i)o=y([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===t?-1===(r=Vt.call(this._shortMonthsParse,s))?null:r:-1===(r=Vt.call(this._longMonthsParse,s))?null:r:"MMM"===t?-1!==(r=Vt.call(this._shortMonthsParse,s))?r:-1===(r=Vt.call(this._longMonthsParse,s))?null:r:-1!==(r=Vt.call(this._longMonthsParse,s))?r:-1===(r=Vt.call(this._shortMonthsParse,s))?null:r}function te(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=O(t);else if(!h(t=e.localeData().monthsParse(t)))return e;return n=o(e.date(),J(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function ne(e){return null==e?X(this,"Month"):(te(this,e),l.updateOffset(this,!0),this)}function ie(){function e(e,t){return t.length-e.length}var t,n,i=[],r=[],o=[];for(t=0;12>t;t++)n=y([2e3,t]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(e),r.sort(e),o.sort(e),t=0;12>t;t++)i[t]=V(i[t]),r[t]=V(r[t]);for(t=0;24>t;t++)o[t]=V(o[t]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function re(e,t,n,i,r,o,s){var a;return 100>e&&0<=e?(a=new Date(e+400,t,n,i,r,o,s),isFinite(a.getFullYear())&&a.setFullYear(e)):a=new Date(e,t,n,i,r,o,s),a}function oe(e){var t;if(100>e&&0<=e){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function se(e,t,n){var i=7+t-n;return-((7+oe(e,0,i).getUTCDay()-t)%7)+i-1}function ae(e,t,n,i,r){var o,s,a=1+7*(t-1)+(7+n-i)%7+se(e,i,r);return 0>=a?s=$(o=e-1)+a:a>$(e)?(o=e+1,s=a-$(e)):(o=e,s=a),{year:o,dayOfYear:s}}function le(e,t,n){var i,r,o=se(e.year(),t,n),a=s((e.dayOfYear()-o-1)/7)+1;return 1>a?i=a+ue(r=e.year()-1,t,n):a>ue(e.year(),t,n)?(i=a-ue(e.year(),t,n),r=e.year()+1):(r=e.year(),i=a),{week:i,year:r}}function ue(e,t,n){var i=se(e,t,n),r=se(e+1,t,n);return($(e)-i+r)/7}function de(e,t){return e.slice(t,7).concat(e.slice(0,t))}function ce(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;7>i;++i)o=y([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===t?-1===(r=Vt.call(this._weekdaysParse,s))?null:r:"ddd"===t?-1===(r=Vt.call(this._shortWeekdaysParse,s))?null:r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:"dddd"===t?-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1!==(r=Vt.call(this._shortWeekdaysParse,s))?r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:"ddd"===t?-1!==(r=Vt.call(this._shortWeekdaysParse,s))?r:-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:-1!==(r=Vt.call(this._minWeekdaysParse,s))?r:-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1===(r=Vt.call(this._shortWeekdaysParse,s))?null:r}function he(){function e(e,t){return t.length-e.length}var t,n,i,r,o,s=[],a=[],l=[],u=[];for(t=0;7>t;t++)n=y([2e3,1]).day(t),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),s.push(i),a.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(s.sort(e),a.sort(e),l.sort(e),u.sort(e),t=0;7>t;t++)a[t]=V(a[t]),l[t]=V(l[t]),u[t]=V(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+s.join("|")+")","i")}function fe(){return this.hours()%12||12}function pe(e,t){z(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function ve(e,t){return t._meridiemParse}function me(e){return e?e.toLowerCase().replace("_","-"):e}function ye(t){var n=null;if(!Kt[t]&&e&&e.exports)try{n=Zt._abbr,function(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}(),ge(n)}catch(t){}return Kt[t]}function ge(e,t){var n;return e&&((n=c(t)?_e(e):be(e,t))?Zt=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Zt._abbr}function be(e,t){if(null!==t){var n,i=Xt;if(t.abbr=e,null!=Kt[e])C("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=Kt[e]._config;else if(null!=t.parentLocale)if(null!=Kt[t.parentLocale])i=Kt[t.parentLocale]._config;else{if(null==(n=ye(t.parentLocale)))return Jt[t.parentLocale]||(Jt[t.parentLocale]=[]),Jt[t.parentLocale].push({name:e,config:t}),null;i=n._config}return Kt[e]=new N(P(i,t)),Jt[e]&&Jt[e].forEach((function(e){be(e.name,e.config)})),ge(e),Kt[e]}return delete Kt[e],null}function _e(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Zt;if(!u(e)){if(t=ye(e))return t;e=[e]}return function(e){for(var t,n,i,r,o=0;o<e.length;){for(t=(r=me(e[o]).split("-")).length,n=(n=me(e[o+1]))?n.split("-"):null;0<t;){if(i=ye(r.slice(0,t).join("-")))return i;if(n&&n.length>=t&&E(r,n,!0)>=t-1)break;t--}o++}return Zt}(e)}function we(e){var t,n=e._a;return n&&-2===g(e).overflow&&(t=0>n[1]||11<n[1]?1:1>n[2]||n[2]>J(n[0],n[1])?2:0>n[3]||24<n[3]||24===n[3]&&(0!==n[4]||0!==n[5]||0!==n[6])?3:0>n[4]||59<n[4]?4:0>n[5]||59<n[5]?5:0>n[6]||999<n[6]?6:-1,g(e)._overflowDayOfYear&&(0>t||2<t)&&(t=2),g(e)._overflowWeeks&&-1===t&&(t=7),g(e)._overflowWeekday&&-1===t&&(t=8),g(e).overflow=t),e}function ke(e,t,n){return null==e?null==t?n:t:e}function xe(e){var t,n,i,r,o,s=[];if(!e._d){for(i=function(e){var t=new Date(l.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[2]&&null==e._a[1]&&function(e){var t,n,i,r,o,s,a,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)o=1,s=4,n=ke(t.GG,e._a[0],le(Me(),1,4).year),i=ke(t.W,1),(1>(r=ke(t.E,1))||7<r)&&(l=!0);else{o=e._locale._week.dow,s=e._locale._week.doy;var u=le(Me(),o,s);n=ke(t.gg,e._a[0],u.year),i=ke(t.w,u.week),null==t.d?null==t.e?r=o:(r=t.e+o,(0>t.e||6<t.e)&&(l=!0)):(0>(r=t.d)||6<r)&&(l=!0)}1>i||i>ue(n,o,s)?g(e)._overflowWeeks=!0:null==l?(a=ae(n,i,r,o,s),e._a[0]=a.year,e._dayOfYear=a.dayOfYear):g(e)._overflowWeekday=!0}(e),null!=e._dayOfYear&&(o=ke(e._a[0],i[0]),(e._dayOfYear>$(o)||0===e._dayOfYear)&&(g(e)._overflowDayOfYear=!0),n=oe(o,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),t=0;3>t&&null==e._a[t];++t)e._a[t]=s[t]=i[t];for(;7>t;t++)e._a[t]=s[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?oe:re).apply(null,s),r=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&void 0!==e._w.d&&e._w.d!==r&&(g(e).weekdayMismatch=!0)}}function Se(e){var t,n,i,r,o,s,a=e._i,l=en.exec(a)||tn.exec(a);if(l){for(g(e).iso=!0,t=0,n=rn.length;t<n;t++)if(rn[t][1].exec(l[1])){r=rn[t][0],i=!1!==rn[t][2];break}if(null==r)return void(e._isValid=!1);if(l[3]){for(t=0,n=on.length;t<n;t++)if(on[t][1].exec(l[3])){o=(l[2]||" ")+on[t][0];break}if(null==o)return void(e._isValid=!1)}if(!i&&null!=o)return void(e._isValid=!1);if(l[4]){if(!nn.exec(l[4]))return void(e._isValid=!1);s="Z"}e._f=r+(o||"")+(s||""),Te(e)}else e._isValid=!1}function Oe(e){var t=parseInt(e,10);return 49>=t?2e3+t:999>=t?1900+t:t}function Ee(e){var t=an.exec(function(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}(e._i));if(t){var n=function(e,t,n,i,r,o){var s=[Oe(e),qt.indexOf(t),parseInt(n,10),parseInt(i,10),parseInt(r,10)];return o&&s.push(parseInt(o,10)),s}(t[4],t[3],t[2],t[5],t[6],t[7]);if(!function(e,t,n){return!e||$t.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(g(n).weekdayMismatch=!0,n._isValid=!1,!1)}(t[1],n,e))return;e._a=n,e._tzm=function(e,t,n){if(e)return ln[e];if(t)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(t[8],t[9],t[10]),e._d=oe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),g(e).rfc2822=!0}else e._isValid=!1}function Te(e){if(e._f!==l.ISO_8601)if(e._f!==l.RFC_2822){e._a=[],g(e).empty=!0;var t,n,i,r,o,s=""+e._i,a=s.length,u=0;for(i=B(e._f,e._locale).match(kt)||[],t=0;t<i.length;t++)r=i[t],(n=(s.match(H(r,e))||[])[0])&&(0<(o=s.substr(0,s.indexOf(n))).length&&g(e).unusedInput.push(o),s=s.slice(s.indexOf(n)+n.length),u+=n.length),Ot[r]?(n?g(e).empty=!1:g(e).unusedTokens.push(r),q(r,n,e)):e._strict&&!n&&g(e).unusedTokens.push(r);g(e).charsLeftOver=a-u,0<s.length&&g(e).unusedInput.push(s),12>=e._a[3]&&!0===g(e).bigHour&&0<e._a[3]&&(g(e).bigHour=void 0),g(e).parsedDateParts=e._a.slice(0),g(e).meridiem=e._meridiem,e._a[3]=function(e,t,n){var i;return null==n?t:null==e.meridiemHour?null==e.isPM?t:((i=e.isPM(n))&&12>t&&(t+=12),i||12!==t||(t=0),t):e.meridiemHour(t,n)}(e._locale,e._a[3],e._meridiem),xe(e),we(e)}else Ee(e);else Se(e)}function De(e){var t=e._i,n=e._f;return e._locale=e._locale||_e(e._l),null===t||void 0===n&&""===t?_({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),x(t)?new k(we(t)):(f(t)?e._d=t:u(n)?function(e){var t,n,i,r,o;if(0===e._f.length)return g(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<e._f.length;r++)o=0,t=w({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[r],Te(t),b(t)&&(o+=g(t).charsLeftOver,o+=10*g(t).unusedTokens.length,g(t).score=o,(null==i||o<i)&&(i=o,n=t));m(e,n||t)}(e):n?Te(e):function(e){var t=e._i;c(t)?e._d=new Date(l.now()):f(t)?e._d=new Date(t.valueOf()):"string"==typeof t?function(e){var t=sn.exec(e._i);null===t?(Se(e),!1===e._isValid&&(delete e._isValid,Ee(e),!1===e._isValid&&(delete e._isValid,l.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):u(t)?(e._a=p(t.slice(0),(function(e){return parseInt(e,10)})),xe(e)):d(t)?function(e){if(!e._d){var t=j(e._i);e._a=p([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),xe(e)}}(e):h(t)?e._d=new Date(t):l.createFromInputFallback(e)}(e),b(e)||(e._d=null),e))}function Ce(e,t,n,i,r){var o={};return(!0===n||!1===n)&&(i=n,n=void 0),(d(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||u(e)&&0===e.length)&&(e=void 0),o._isAMomentObject=!0,o._useUTC=o._isUTC=r,o._l=n,o._i=e,o._f=t,o._strict=i,function(e){var t=new k(we(De(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}(o)}function Me(e,t,n,i){return Ce(e,t,n,i,!1)}function Pe(e,t){var n,i;if(1===t.length&&u(t[0])&&(t=t[0]),!t.length)return Me();for(n=t[0],i=1;i<t.length;++i)(!t[i].isValid()||t[i][e](n))&&(n=t[i]);return n}function Ne(e){var t=j(e),n=t.year||0,i=t.quarter||0,r=t.month||0,o=t.week||t.isoWeek||0,s=t.day||0,a=t.hour||0,l=t.minute||0,u=t.second||0,d=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===Vt.call(cn,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,i=0;i<cn.length;++i)if(e[cn[i]]){if(n)return!1;parseFloat(e[cn[i]])!==O(e[cn[i]])&&(n=!0)}return!0}(t),this._milliseconds=+d+1e3*u+6e4*l+1e3*a*60*60,this._days=+s+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=_e(),this._bubble()}function Fe(e){return e instanceof Ne}function Ie(e){return 0>e?-1*t(-1*e):t(e)}function je(e,t){z(e,0,0,(function(){var e=this.utcOffset(),n="+";return 0>e&&(e=-e,n="-"),n+A(~~(e/60),2)+t+A(~~e%60,2)}))}function Re(e,t){var n=(t||"").match(e);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(hn)||["-",0,0],r=60*i[1]+O(i[2]);return 0===r?0:"+"===i[0]?r:-r}function Ae(e,t){var n,i;return t._isUTC?(n=t.clone(),i=(x(e)||f(e)?e.valueOf():Me(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+i),l.updateOffset(n,!1),n):Me(e).local()}function ze(e){return 15*-t(e._d.getTimezoneOffset()/15)}function Le(){return!!this.isValid()&&this._isUTC&&0===this._offset}function Ye(e,t){var n,i,r,o=e,s=null;return Fe(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:h(e)?(o={},t?o[t]=e:o.milliseconds=e):(s=fn.exec(e))?(n="-"===s[1]?-1:1,o={y:0,d:O(s[2])*n,h:O(s[3])*n,m:O(s[4])*n,s:O(s[5])*n,ms:O(Ie(1e3*s[6]))*n}):(s=pn.exec(e))?(n="-"===s[1]?-1:1,o={y:Be(s[2],n),M:Be(s[3],n),w:Be(s[4],n),d:Be(s[5],n),h:Be(s[6],n),m:Be(s[7],n),s:Be(s[8],n)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(r=function(e,t){var n;return e.isValid()&&t.isValid()?(t=Ae(t,e),e.isBefore(t)?n=We(e,t):((n=We(t,e)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(Me(o.from),Me(o.to)),(o={}).ms=r.milliseconds,o.M=r.months),i=new Ne(o),Fe(e)&&v(e,"_locale")&&(i._locale=e._locale),i}function Be(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function We(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function He(e,t){return function(n,i){var r;return null===i||isNaN(+i)||(C(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),Ve(this,Ye(n="string"==typeof n?+n:n,i),e),this}}function Ve(e,t,n,i){var r=t._milliseconds,o=Ie(t._days),s=Ie(t._months);e.isValid()&&(i=null==i||i,s&&te(e,X(e,"Month")+s*n),o&&K(e,"Date",X(e,"Date")+o*n),r&&e._d.setTime(e._d.valueOf()+r*n),i&&l.updateOffset(e,o||s))}function Ue(e,t){var n,i=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(i,"months");return 0>t-r?n=(t-r)/(r-e.clone().add(i-1,"months")):n=(t-r)/(e.clone().add(i+1,"months")-r),-(i+n)||0}function Ge(e){var t;return void 0===e?this._locale._abbr:(null!=(t=_e(e))&&(this._locale=t),this)}function qe(){return this._locale}function $e(e,t){return(e%t+t)%t}function Ze(e,t,n){return 100>e&&0<=e?new Date(e+400,t,n)-126227808e5:new Date(e,t,n).valueOf()}function Qe(e,t,n){return 100>e&&0<=e?Date.UTC(e+400,t,n)-126227808e5:Date.UTC(e,t,n)}function Xe(e,t){z(0,[e,e.length],0,t)}function Ke(e,t,n,i,r){var o;return null==e?le(this,i,r).year:(t>(o=ue(e,i,r))&&(t=o),Je.call(this,e,t,n,i,r))}function Je(e,t,n,i,r){var o=ae(e,t,n,i,r),s=oe(o.year,0,o.dayOfYear);return this.year(s.getUTCFullYear()),this.month(s.getUTCMonth()),this.date(s.getUTCDate()),this}function et(e,t){t[6]=O(1e3*("0."+e))}function tt(e){return e}function nt(e,t,n,i){var r=_e(),o=y().set(i,t);return r[n](o,e)}function it(e,t,n){if(h(e)&&(t=e,e=void 0),e=e||"",null!=t)return nt(e,t,n,"month");var i,r=[];for(i=0;12>i;i++)r[i]=nt(e,i,n,"month");return r}function rt(e,t,n,i){"boolean"==typeof e?(h(t)&&(n=t,t=void 0),t=t||""):(n=t=e,e=!1,h(t)&&(n=t,t=void 0),t=t||"");var r=_e(),o=e?r._week.dow:0;if(null!=n)return nt(t,(n+o)%7,i,"day");var s,a=[];for(s=0;7>s;s++)a[s]=nt(t,(s+o)%7,i,"day");return a}function ot(e,t,n,i){var r=Ye(t,n);return e._milliseconds+=i*r._milliseconds,e._days+=i*r._days,e._months+=i*r._months,e._bubble()}function st(e){return 0>e?s(e):a(e)}function at(e){return 4800*e/146097}function lt(e){return 146097*e/4800}function ut(e){return function(){return this.as(e)}}function dt(e){return function(){return this.isValid()?this._data[e]:NaN}}function ct(e,t,n,i,r){return r.relativeTime(t||1,!!n,e,i)}function ht(e){return(0<e)-(0>e)||+e}function ft(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Vn(this._milliseconds)/1e3,i=Vn(this._days),r=Vn(this._months);e=S(n/60),t=S(e/60),n%=60,e%=60;var o=S(r/12),s=r%=12,a=i,l=t,u=e,d=n?n.toFixed(3).replace(/\.?0+$/,""):"",c=this.asSeconds();if(!c)return"P0D";var h=0>c?"-":"",f=ht(this._months)===ht(c)?"":"-",p=ht(this._days)===ht(c)?"":"-",v=ht(this._milliseconds)===ht(c)?"":"-";return h+"P"+(o?f+o+"Y":"")+(s?f+s+"M":"")+(a?p+a+"D":"")+(l||u||d?"T":"")+(l?v+l+"H":"")+(u?v+u+"M":"")+(d?v+d+"S":"")}var pt,vt;vt=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,i=0;i<n;i++)if(i in t&&e.call(this,t[i],i,t))return!0;return!1};var mt=l.momentProperties=[],yt=!1,gt={};l.suppressDeprecationWarnings=!1,l.deprecationHandler=null;var bt=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)v(e,t)&&n.push(t);return n},_t={},wt={},kt=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,xt=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,St={},Ot={},Et=/\d/,Tt=/\d\d/,Dt=/\d{3}/,Ct=/\d{4}/,Mt=/[+-]?\d{6}/,Pt=/\d\d?/,Nt=/\d\d\d\d?/,Ft=/\d\d\d\d\d\d?/,It=/\d{1,3}/,jt=/\d{1,4}/,Rt=/[+-]?\d{1,6}/,At=/\d+/,zt=/[+-]?\d+/,Lt=/Z|[+-]\d\d:?\d\d/gi,Yt=/Z|[+-]\d\d(?::?\d\d)?/gi,Bt=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Wt={},Ht={};z("Y",0,0,(function(){var e=this.year();return 9999>=e?""+e:"+"+e})),z(0,["YY",2],0,(function(){return this.year()%100})),z(0,["YYYY",4],0,"year"),z(0,["YYYYY",5],0,"year"),z(0,["YYYYYY",6,!0],0,"year"),F("year","y"),R("year",1),W("Y",zt),W("YY",Pt,Tt),W("YYYY",jt,Ct),W("YYYYY",Rt,Mt),W("YYYYYY",Rt,Mt),U(["YYYYY","YYYYYY"],0),U("YYYY",(function(e,t){t[0]=2===e.length?l.parseTwoDigitYear(e):O(e)})),U("YY",(function(e,t){t[0]=l.parseTwoDigitYear(e)})),U("Y",(function(e,t){t[0]=parseInt(e,10)})),l.parseTwoDigitYear=function(e){return O(e)+(68<O(e)?1900:2e3)};var Vt,Ut=Q("FullYear",!0);Vt=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},z("M",["MM",2],"Mo",(function(){return this.month()+1})),z("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),z("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),F("month","M"),R("month",8),W("M",Pt),W("MM",Pt,Tt),W("MMM",(function(e,t){return t.monthsShortRegex(e)})),W("MMMM",(function(e,t){return t.monthsRegex(e)})),U(["M","MM"],(function(e,t){t[1]=O(e)-1})),U(["MMM","MMMM"],(function(e,t,n,i){var r=n._locale.monthsParse(e,i,n._strict);null==r?g(n).invalidMonth=e:t[1]=r}));var Gt=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,qt=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];z("w",["ww",2],"wo","week"),z("W",["WW",2],"Wo","isoWeek"),F("week","w"),F("isoWeek","W"),R("week",5),R("isoWeek",5),W("w",Pt),W("ww",Pt,Tt),W("W",Pt),W("WW",Pt,Tt),G(["w","ww","W","WW"],(function(e,t,n,i){t[i.substr(0,1)]=O(e)})),z("d",0,"do","day"),z("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),z("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),z("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),z("e",0,0,"weekday"),z("E",0,0,"isoWeekday"),F("day","d"),F("weekday","e"),F("isoWeekday","E"),R("day",11),R("weekday",11),R("isoWeekday",11),W("d",Pt),W("e",Pt),W("E",Pt),W("dd",(function(e,t){return t.weekdaysMinRegex(e)})),W("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),W("dddd",(function(e,t){return t.weekdaysRegex(e)})),G(["dd","ddd","dddd"],(function(e,t,n,i){var r=n._locale.weekdaysParse(e,i,n._strict);null==r?g(n).invalidWeekday=e:t.d=r})),G(["d","e","E"],(function(e,t,n,i){t[i]=O(e)}));var $t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];z("H",["HH",2],0,"hour"),z("h",["hh",2],0,fe),z("k",["kk",2],0,(function(){return this.hours()||24})),z("hmm",0,0,(function(){return""+fe.apply(this)+A(this.minutes(),2)})),z("hmmss",0,0,(function(){return""+fe.apply(this)+A(this.minutes(),2)+A(this.seconds(),2)})),z("Hmm",0,0,(function(){return""+this.hours()+A(this.minutes(),2)})),z("Hmmss",0,0,(function(){return""+this.hours()+A(this.minutes(),2)+A(this.seconds(),2)})),pe("a",!0),pe("A",!1),F("hour","h"),R("hour",13),W("a",ve),W("A",ve),W("H",Pt),W("h",Pt),W("k",Pt),W("HH",Pt,Tt),W("hh",Pt,Tt),W("kk",Pt,Tt),W("hmm",Nt),W("hmmss",Ft),W("Hmm",Nt),W("Hmmss",Ft),U(["H","HH"],3),U(["k","kk"],(function(e,t){var n=O(e);t[3]=24===n?0:n})),U(["a","A"],(function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e})),U(["h","hh"],(function(e,t,n){t[3]=O(e),g(n).bigHour=!0})),U("hmm",(function(e,t,n){var i=e.length-2;t[3]=O(e.substr(0,i)),t[4]=O(e.substr(i)),g(n).bigHour=!0})),U("hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=O(e.substr(0,i)),t[4]=O(e.substr(i,2)),t[5]=O(e.substr(r)),g(n).bigHour=!0})),U("Hmm",(function(e,t){var n=e.length-2;t[3]=O(e.substr(0,n)),t[4]=O(e.substr(n))})),U("Hmmss",(function(e,t){var n=e.length-4,i=e.length-2;t[3]=O(e.substr(0,n)),t[4]=O(e.substr(n,2)),t[5]=O(e.substr(i))}));var Zt,Qt=Q("Hours",!0),Xt={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:qt,week:{dow:0,doy:6},weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekdaysShort:$t,meridiemParse:/[ap]\.?m?\.?/i},Kt={},Jt={},en=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tn=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,nn=/Z|[+-]\d\d(?::?\d\d)?/,rn=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],on=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],sn=/^\/?Date\((\-?\d+)/i,an=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,ln={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};l.createFromInputFallback=D("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),l.ISO_8601=function(){},l.RFC_2822=function(){};var un=D("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:_()})),dn=D("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:_()})),cn=["year","quarter","month","week","day","hour","minute","second","millisecond"];je("Z",":"),je("ZZ",""),W("Z",Yt),W("ZZ",Yt),U(["Z","ZZ"],(function(e,t,n){n._useUTC=!0,n._tzm=Re(Yt,e)}));var hn=/([\+\-]|\d\d)/gi;l.updateOffset=function(){};var fn=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,pn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;Ye.fn=Ne.prototype,Ye.invalid=function(){return Ye(NaN)};var vn=He(1,"add"),mn=He(-1,"subtract");l.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",l.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var yn=D("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));z(0,["gg",2],0,(function(){return this.weekYear()%100})),z(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),Xe("gggg","weekYear"),Xe("ggggg","weekYear"),Xe("GGGG","isoWeekYear"),Xe("GGGGG","isoWeekYear"),F("weekYear","gg"),F("isoWeekYear","GG"),R("weekYear",1),R("isoWeekYear",1),W("G",zt),W("g",zt),W("GG",Pt,Tt),W("gg",Pt,Tt),W("GGGG",jt,Ct),W("gggg",jt,Ct),W("GGGGG",Rt,Mt),W("ggggg",Rt,Mt),G(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,n,i){t[i.substr(0,2)]=O(e)})),G(["gg","GG"],(function(e,t,n,i){t[i]=l.parseTwoDigitYear(e)})),z("Q",0,"Qo","quarter"),F("quarter","Q"),R("quarter",7),W("Q",Et),U("Q",(function(e,t){t[1]=3*(O(e)-1)})),z("D",["DD",2],"Do","date"),F("date","D"),R("date",9),W("D",Pt),W("DD",Pt,Tt),W("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),U(["D","DD"],2),U("Do",(function(e,t){t[2]=O(e.match(Pt)[0])}));var gn=Q("Date",!0);z("DDD",["DDDD",3],"DDDo","dayOfYear"),F("dayOfYear","DDD"),R("dayOfYear",4),W("DDD",It),W("DDDD",Dt),U(["DDD","DDDD"],(function(e,t,n){n._dayOfYear=O(e)})),z("m",["mm",2],0,"minute"),F("minute","m"),R("minute",14),W("m",Pt),W("mm",Pt,Tt),U(["m","mm"],4);var bn=Q("Minutes",!1);z("s",["ss",2],0,"second"),F("second","s"),R("second",15),W("s",Pt),W("ss",Pt,Tt),U(["s","ss"],5);var _n,wn=Q("Seconds",!1);for(z("S",0,0,(function(){return~~(this.millisecond()/100)})),z(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),z(0,["SSS",3],0,"millisecond"),z(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),z(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),z(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),z(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),z(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),z(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),F("millisecond","ms"),R("millisecond",16),W("S",It,Et),W("SS",It,Tt),W("SSS",It,Dt),_n="SSSS";9>=_n.length;_n+="S")W(_n,At);for(_n="S";9>=_n.length;_n+="S")U(_n,et);var kn=Q("Milliseconds",!1);z("z",0,0,"zoneAbbr"),z("zz",0,0,"zoneName");var xn=k.prototype;xn.add=vn,xn.calendar=function(e,t){var n=e||Me(),i=Ae(n,this).startOf("day"),r=l.calendarFormat(this,i)||"sameElse",o=t&&(M(t[r])?t[r].call(this,n):t[r]);return this.format(o||this.localeData().calendar(r,this,Me(n)))},xn.clone=function(){return new k(this)},xn.diff=function(e,t,n){var i,r,o;return this.isValid()?(i=Ae(e,this)).isValid()?(r=6e4*(i.utcOffset()-this.utcOffset()),o="year"===(t=I(t))?Ue(this,i)/12:"month"===t?Ue(this,i):"quarter"===t?Ue(this,i)/3:"second"===t?(this-i)/1e3:"minute"===t?(this-i)/6e4:"hour"===t?(this-i)/36e5:"day"===t?(this-i-r)/864e5:"week"===t?(this-i-r)/6048e5:this-i,n?o:S(o)):NaN:NaN},xn.endOf=function(e){var t;if(void 0===(e=I(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Qe:Ze;return"year"===e?t=n(this.year()+1,0,1)-1:"quarter"===e?t=n(this.year(),this.month()-this.month()%3+3,1)-1:"month"===e?t=n(this.year(),this.month()+1,1)-1:"week"===e?t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1:"isoWeek"===e?t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1:"day"===e||"date"===e?t=n(this.year(),this.month(),this.date()+1)-1:"hour"===e?(t=this._d.valueOf(),t+=36e5-$e(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1):"minute"===e?(t=this._d.valueOf(),t+=6e4-$e(t,6e4)-1):"second"===e&&(t=this._d.valueOf(),t+=1e3-$e(t,1e3)-1),this._d.setTime(t),l.updateOffset(this,!0),this},xn.format=function(e){e||(e=this.isUtc()?l.defaultFormatUtc:l.defaultFormat);var t=Y(this,e);return this.localeData().postformat(t)},xn.from=function(e,t){return this.isValid()&&(x(e)&&e.isValid()||Me(e).isValid())?Ye({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},xn.fromNow=function(e){return this.from(Me(),e)},xn.to=function(e,t){return this.isValid()&&(x(e)&&e.isValid()||Me(e).isValid())?Ye({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},xn.toNow=function(e){return this.to(Me(),e)},xn.get=function(e){return M(this[e=I(e)])?this[e]():this},xn.invalidAt=function(){return g(this).overflow},xn.isAfter=function(e,t){var n=x(e)?e:Me(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},xn.isBefore=function(e,t){var n=x(e)?e:Me(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},xn.isBetween=function(e,t,n,i){var r=x(e)?e:Me(e),o=x(t)?t:Me(t);return!!(this.isValid()&&r.isValid()&&o.isValid())&&(("("===(i=i||"()")[0]?this.isAfter(r,n):!this.isBefore(r,n))&&(")"===i[1]?this.isBefore(o,n):!this.isAfter(o,n)))},xn.isSame=function(e,t){var n,i=x(e)?e:Me(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},xn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},xn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},xn.isValid=function(){return b(this)},xn.lang=yn,xn.locale=Ge,xn.localeData=qe,xn.max=dn,xn.min=un,xn.parsingFlags=function(){return m({},g(this))},xn.set=function(e,t){if("object"==typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:wt[n]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=j(e)),i=0;i<n.length;i++)this[n[i].unit](e[n[i].unit]);else if(M(this[e=I(e)]))return this[e](t);return this},xn.startOf=function(e){var t;if(void 0===(e=I(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Qe:Ze;return"year"===e?t=n(this.year(),0,1):"quarter"===e?t=n(this.year(),this.month()-this.month()%3,1):"month"===e?t=n(this.year(),this.month(),1):"week"===e?t=n(this.year(),this.month(),this.date()-this.weekday()):"isoWeek"===e?t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)):"day"===e||"date"===e?t=n(this.year(),this.month(),this.date()):"hour"===e?(t=this._d.valueOf(),t-=$e(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)):"minute"===e?(t=this._d.valueOf(),t-=$e(t,6e4)):"second"===e&&(t=this._d.valueOf(),t-=$e(t,1e3)),this._d.setTime(t),l.updateOffset(this,!0),this},xn.subtract=mn,xn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},xn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},xn.toDate=function(){return new Date(this.valueOf())},xn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return 0>n.year()||9999<n.year()?Y(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):M(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",Y(n,"Z")):Y(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},xn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',i=0<=this.year()&&9999>=this.year()?"YYYY":"YYYYYY",r=t+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},xn.toJSON=function(){return this.isValid()?this.toISOString():null},xn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},xn.unix=function(){return s(this.valueOf()/1e3)},xn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},xn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},xn.year=Ut,xn.isLeapYear=function(){return Z(this.year())},xn.weekYear=function(e){return Ke.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},xn.isoWeekYear=function(e){return Ke.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},xn.quarter=xn.quarters=function(e){return null==e?a((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},xn.month=ne,xn.daysInMonth=function(){return J(this.year(),this.month())},xn.week=xn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},xn.isoWeek=xn.isoWeeks=function(e){var t=le(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},xn.weeksInYear=function(){var e=this.localeData()._week;return ue(this.year(),e.dow,e.doy)},xn.isoWeeksInYear=function(){return ue(this.year(),1,4)},xn.date=gn,xn.day=xn.days=function(e){if(!this.isValid())return null==e?NaN:this;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null==e?t:(e=function(e,t){return"string"==typeof e?isNaN(e)?"number"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10):e}(e,this.localeData()),this.add(e-t,"d"))},xn.weekday=function(e){if(!this.isValid())return null==e?NaN:this;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},xn.isoWeekday=function(e){if(!this.isValid())return null==e?NaN:this;if(null!=e){var t=function(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},xn.dayOfYear=function(e){var n=t((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?n:this.add(e-n,"d")},xn.hour=xn.hours=Qt,xn.minute=xn.minutes=bn,xn.second=xn.seconds=wn,xn.millisecond=xn.milliseconds=kn,xn.utcOffset=function(e,t,n){var i,o=this._offset||0;if(!this.isValid())return null==e?NaN:this;if(null!=e){if("string"!=typeof e)16>r(e)&&!n&&(e*=60);else if(null===(e=Re(Yt,e)))return this;return!this._isUTC&&t&&(i=ze(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,"m"),o!==e&&(!t||this._changeInProgress?Ve(this,Ye(e-o,"m"),1,!1):!this._changeInProgress&&(this._changeInProgress=!0,l.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?o:ze(this)},xn.utc=function(e){return this.utcOffset(0,e)},xn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(ze(this),"m")),this},xn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Re(Lt,this._i);null==e?this.utcOffset(0,!0):this.utcOffset(e)}return this},xn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Me(e).utcOffset():0,0==(this.utcOffset()-e)%60)},xn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},xn.isLocal=function(){return!!this.isValid()&&!this._isUTC},xn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},xn.isUtc=Le,xn.isUTC=Le,xn.zoneAbbr=function(){return this._isUTC?"UTC":""},xn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},xn.dates=D("dates accessor is deprecated. Use date instead.",gn),xn.months=D("months accessor is deprecated. Use month instead",ne),xn.years=D("years accessor is deprecated. Use year instead",Ut),xn.zone=D("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null==e?-this.utcOffset():("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this)})),xn.isDSTShifted=D("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!c(this._isDSTShifted))return this._isDSTShifted;var e={};if(w(e,this),(e=De(e))._a){var t=e._isUTC?y(e._a):Me(e._a);this._isDSTShifted=this.isValid()&&0<E(e._a,t.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted}));var Sn=N.prototype;Sn.calendar=function(e,t,n){var i=this._calendar[e]||this._calendar.sameElse;return M(i)?i.call(t,n):i},Sn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},Sn.invalidDate=function(){return this._invalidDate},Sn.ordinal=function(e){return this._ordinal.replace("%d",e)},Sn.preparse=tt,Sn.postformat=tt,Sn.relativeTime=function(e,t,n,i){var r=this._relativeTime[n];return M(r)?r(e,t,n,i):r.replace(/%d/i,e)},Sn.pastFuture=function(e,t){var n=this._relativeTime[0<e?"future":"past"];return M(n)?n(t):n.replace(/%s/i,t)},Sn.set=function(e){var t,n;for(n in e)M(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},Sn.months=function(e,t){return e?u(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Gt).test(t)?"format":"standalone"][e.month()]:u(this._months)?this._months:this._months.standalone},Sn.monthsShort=function(e,t){return e?u(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Gt.test(t)?"format":"standalone"][e.month()]:u(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},Sn.monthsParse=function(e,t,n){var i,r,o;if(this._monthsParseExact)return ee.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;12>i;i++){if(r=y([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[i].test(e))return i;if(n&&"MMM"===t&&this._shortMonthsParse[i].test(e))return i;if(!n&&this._monthsParse[i].test(e))return i}},Sn.monthsRegex=function(e){return this._monthsParseExact?(v(this,"_monthsRegex")||ie.call(this),e?this._monthsStrictRegex:this._monthsRegex):(v(this,"_monthsRegex")||(this._monthsRegex=Bt),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},Sn.monthsShortRegex=function(e){return this._monthsParseExact?(v(this,"_monthsRegex")||ie.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(v(this,"_monthsShortRegex")||(this._monthsShortRegex=Bt),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},Sn.week=function(e){return le(e,this._week.dow,this._week.doy).week},Sn.firstDayOfYear=function(){return this._week.doy},Sn.firstDayOfWeek=function(){return this._week.dow},Sn.weekdays=function(e,t){var n=u(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?de(n,this._week.dow):e?n[e.day()]:n},Sn.weekdaysMin=function(e){return!0===e?de(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},Sn.weekdaysShort=function(e){return!0===e?de(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},Sn.weekdaysParse=function(e,t,n){var i,r,o;if(this._weekdaysParseExact)return ce.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;7>i;i++){if(r=y([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[i].test(e))return i;if(n&&"ddd"===t&&this._shortWeekdaysParse[i].test(e))return i;if(n&&"dd"===t&&this._minWeekdaysParse[i].test(e))return i;if(!n&&this._weekdaysParse[i].test(e))return i}},Sn.weekdaysRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(v(this,"_weekdaysRegex")||(this._weekdaysRegex=Bt),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},Sn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(v(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Bt),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},Sn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(v(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Bt),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},Sn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},Sn.meridiem=function(e,t,n){return 11<e?n?"pm":"PM":n?"am":"AM"},ge("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===O(e%100/10)?"th":1==t?"st":2==t?"nd":3==t?"rd":"th")}}),l.lang=D("moment.lang is deprecated. Use moment.locale instead.",ge),l.langData=D("moment.langData is deprecated. Use moment.localeData instead.",_e);var On=r,En=ut("ms"),Tn=ut("s"),Dn=ut("m"),Cn=ut("h"),Mn=ut("d"),Pn=ut("w"),Nn=ut("M"),Fn=ut("Q"),In=ut("y"),jn=dt("milliseconds"),Rn=dt("seconds"),An=dt("minutes"),zn=dt("hours"),Ln=dt("days"),Yn=dt("months"),Bn=dt("years"),Wn=t,Hn={ss:44,s:45,m:45,h:22,d:26,M:11},Vn=r,Un=Ne.prototype;return Un.isValid=function(){return this._isValid},Un.abs=function(){var e=this._data;return this._milliseconds=On(this._milliseconds),this._days=On(this._days),this._months=On(this._months),e.milliseconds=On(e.milliseconds),e.seconds=On(e.seconds),e.minutes=On(e.minutes),e.hours=On(e.hours),e.months=On(e.months),e.years=On(e.years),this},Un.add=function(e,t){return ot(this,e,t,1)},Un.subtract=function(e,t){return ot(this,e,t,-1)},Un.as=function(e){if(!this.isValid())return NaN;var n,i,r=this._milliseconds;if("month"===(e=I(e))||"quarter"===e||"year"===e)switch(n=this._days+r/864e5,i=this._months+at(n),e){case"month":return i;case"quarter":return i/3;case"year":return i/12}else switch(n=this._days+t(lt(this._months)),e){case"week":return n/7+r/6048e5;case"day":return n+r/864e5;case"hour":return 24*n+r/36e5;case"minute":return 1440*n+r/6e4;case"second":return 86400*n+r/1e3;case"millisecond":return s(864e5*n)+r;default:throw new Error("Unknown unit "+e)}},Un.asMilliseconds=En,Un.asSeconds=Tn,Un.asMinutes=Dn,Un.asHours=Cn,Un.asDays=Mn,Un.asWeeks=Pn,Un.asMonths=Nn,Un.asQuarters=Fn,Un.asYears=In,Un.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*O(this._months/12):NaN},Un._bubble=function(){var e,t,n,i,r,o=this._milliseconds,s=this._days,a=this._months,l=this._data;return 0<=o&&0<=s&&0<=a||0>=o&&0>=s&&0>=a||(o+=864e5*st(lt(a)+s),s=0,a=0),l.milliseconds=o%1e3,e=S(o/1e3),l.seconds=e%60,t=S(e/60),l.minutes=t%60,n=S(t/60),l.hours=n%24,s+=S(n/24),a+=r=S(at(s)),s-=st(lt(r)),i=S(a/12),a%=12,l.days=s,l.months=a,l.years=i,this},Un.clone=function(){return Ye(this)},Un.get=function(e){return e=I(e),this.isValid()?this[e+"s"]():NaN},Un.milliseconds=jn,Un.seconds=Rn,Un.minutes=An,Un.hours=zn,Un.days=Ln,Un.weeks=function(){return S(this.days()/7)},Un.months=Yn,Un.years=Bn,Un.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=function(e,t,n){var i=Ye(e).abs(),r=Wn(i.as("s")),o=Wn(i.as("m")),s=Wn(i.as("h")),a=Wn(i.as("d")),l=Wn(i.as("M")),u=Wn(i.as("y")),d=r<=Hn.ss&&["s",r]||r<Hn.s&&["ss",r]||1>=o&&["m"]||o<Hn.m&&["mm",o]||1>=s&&["h"]||s<Hn.h&&["hh",s]||1>=a&&["d"]||a<Hn.d&&["dd",a]||1>=l&&["M"]||l<Hn.M&&["MM",l]||1>=u&&["y"]||["yy",u];return d[2]=t,d[3]=0<+e,d[4]=n,ct.apply(null,d)}(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)},Un.toISOString=ft,Un.toString=ft,Un.toJSON=ft,Un.locale=Ge,Un.localeData=qe,Un.toIsoString=D("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",ft),Un.lang=yn,z("X",0,0,"unix"),z("x",0,0,"valueOf"),W("x",zt),W("X",/[+-]?\d+(\.\d{1,3})?/),U("X",(function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))})),U("x",(function(e,t,n){n._d=new Date(O(e))})),l.version="2.24.0",function(e){pt=e}(Me),l.fn=xn,l.min=function(){var e=[].slice.call(arguments,0);return Pe("isBefore",e)},l.max=function(){var e=[].slice.call(arguments,0);return Pe("isAfter",e)},l.now=function(){return Date.now?Date.now():+new Date},l.utc=y,l.unix=function(e){return Me(1e3*e)},l.months=function(e,t){return it(e,t,"months")},l.isDate=f,l.locale=ge,l.invalid=_,l.duration=Ye,l.isMoment=x,l.weekdays=function(e,t,n){return rt(e,t,n,"weekdays")},l.parseZone=function(){return Me.apply(null,arguments).parseZone()},l.localeData=_e,l.isDuration=Fe,l.monthsShort=function(e,t){return it(e,t,"monthsShort")},l.weekdaysMin=function(e,t,n){return rt(e,t,n,"weekdaysMin")},l.defineLocale=be,l.updateLocale=function(e,t){if(null!=t){var n,i,r=Xt;null!=(i=ye(e))&&(r=i._config),(n=new N(t=P(r,t))).parentLocale=Kt[e],Kt[e]=n,ge(e)}else null!=Kt[e]&&(null==Kt[e].parentLocale?null!=Kt[e]&&delete Kt[e]:Kt[e]=Kt[e].parentLocale);return Kt[e]},l.locales=function(){return bt(Kt)},l.weekdaysShort=function(e,t,n){return rt(e,t,n,"weekdaysShort")},l.normalizeUnits=I,l.relativeTimeRounding=function(e){return void 0===e?Wn:"function"==typeof e&&(Wn=e,!0)},l.relativeTimeThreshold=function(e,t){return void 0!==Hn[e]&&(void 0===t?Hn[e]:(Hn[e]=t,"s"===e&&(Hn.ss=t-1),!0))},l.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return-6>n?"sameElse":-1>n?"lastWeek":0>n?"lastDay":1>n?"sameDay":2>n?"nextDay":7>n?"nextWeek":"sameElse"},l.prototype=xn,l.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},l}))})),br=[],_r=0;256>_r;_r++)br[_r]=(_r+256).toString(16).substr(1);for(var wr=function(){if("undefined"!=typeof crypto&&crypto.getRandomValues){var e=new Uint8Array(16);return function(){return crypto.getRandomValues(e),e}}var t=Array(16);return function(){for(var e,n=0;16>n;n++)0==(3&n)&&(e=4294967296*Math.random()),t[n]=255&e>>>((3&n)<<3);return t}}(),kr=[],xr=0;256>xr;xr++)kr[xr]=(xr+256).toString(16).substr(1);var Sr=wr(),Or=(Sr[0],Sr[1],Sr[2],Sr[3],Sr[4],Sr[5],Sr[6],Sr[7],/^\/?Date\((-?\d+)/i);function Er(e){return e instanceof Number||"number"==typeof e}function Tr(e){return e instanceof String||"string"==typeof e}function Dr(e){return gr.isMoment(e)}function Cr(e,t){var n;if(void 0!==e){if(null===e)return null;if(!t)return e;if("string"!=typeof t&&!(t instanceof String))throw new Error("Type must be a string");switch(t){case"boolean":case"Boolean":return!!e;case"number":case"Number":return Tr(e)&&!isNaN(Date.parse(e))?gr(e).valueOf():+e.valueOf();case"string":case"String":return e+"";case"Date":if(Er(e))return new Date(e);if(e instanceof Date)return new Date(e.valueOf());if(Dr(e))return new Date(e.valueOf());if(Tr(e))return(n=Or.exec(e))?new Date(+n[1]):gr(new Date(e)).toDate();throw new Error("Cannot convert object of type "+Mr(e)+" to type Date");case"Moment":if(Er(e))return gr(e);if(e instanceof Date)return gr(e.valueOf());if(Dr(e))return gr(e);if(Tr(e))return n=Or.exec(e),gr(n?+n[1]:e);throw new Error("Cannot convert object of type "+Mr(e)+" to type Date");case"ISODate":if(Er(e))return new Date(e);if(e instanceof Date)return e.toISOString();if(Dr(e))return e.toDate().toISOString();if(Tr(e))return(n=Or.exec(e))?new Date(+n[1]).toISOString():gr(e).format();throw new Error("Cannot convert object of type "+Mr(e)+" to type ISODate");case"ASPDate":if(Er(e))return"/Date("+e+")/";if(e instanceof Date)return"/Date("+e.valueOf()+")/";if(Tr(e))return"/Date("+((n=Or.exec(e))?new Date(+n[1]).valueOf():new Date(e).valueOf())+")/";throw new Error("Cannot convert object of type "+Mr(e)+" to type ASPDate");default:throw new Error("Unknown type ".concat(t))}}}function Mr(e){var t=yr(e);return"object"===t?null===e?"null":e instanceof Boolean?"Boolean":e instanceof Number?"Number":e instanceof String?"String":Array.isArray(e)?"Array":e instanceof Date?"Date":"Object":"number"===t?"Number":"boolean"===t?"Boolean":"string"===t?"String":void 0===t?"undefined":t}function Pr(e){return"string"==typeof e||"number"==typeof e}var Nr=function(){function e(t){nr(this,e),this._queue=[],this._timeout=null,this._extended=null,this.delay=null,this.max=1/0,this.setOptions(t)}return rr(e,[{key:"setOptions",value:function(e){e&&void 0!==e.delay&&(this.delay=e.delay),e&&void 0!==e.max&&(this.max=e.max),this._flushIfNeeded()}},{key:"destroy",value:function(){if(this.flush(),this._extended){for(var e,t=this._extended.object,n=this._extended.methods,i=0;i<n.length;i++)(e=n[i]).original?t[e.name]=e.original:delete t[e.name];this._extended=null}}},{key:"replace",value:function(e,t){var n=this,i=e[t];if(!i)throw new Error("Method "+t+" undefined");e[t]=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];n.queue({args:t,fn:i,context:this})}}},{key:"queue",value:function(e){"function"==typeof e?this._queue.push({fn:e}):this._queue.push(e),this._flushIfNeeded()}},{key:"_flushIfNeeded",value:function(){var e=this;this._queue.length>this.max&&this.flush(),null!=this._timeout&&(clearTimeout(this._timeout),this._timeout=null),0<this.queue.length&&"number"==typeof this.delay&&(this._timeout=setTimeout((function(){e.flush()}),this.delay))}},{key:"flush",value:function(){this._queue.splice(0).forEach((function(e){e.fn.apply(e.context||e.fn,e.args||[])}))}}],[{key:"extend",value:function(t,n){var i=new e(n);if(void 0!==t.flush)throw new Error("Target object already has a property flush");t.flush=function(){i.flush()};var r=[{name:"flush",original:void 0}];if(n&&n.replace)for(var o,s=0;s<n.replace.length;s++)o=n.replace[s],r.push({name:o,original:t[o]}),i.replace(t,o);return i._extended={object:t,methods:r},i}}]),e}();var Fr=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}};var Ir=function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)};var jr=function(){throw new TypeError("Invalid attempt to spread non-iterable instance")};var Rr=function(e){return Fr(e)||Ir(e)||jr()},Ar=function(){function e(){nr(this,e),this._subscribers={"*":[],add:[],remove:[],update:[]},this.subscribe=e.prototype.on,this.unsubscribe=e.prototype.off}return rr(e,[{key:"_trigger",value:function(e,t,n){if("*"===e)throw new Error("Cannot trigger event *");for(var i,r=[].concat(Rr(this._subscribers[e]),Rr(this._subscribers["*"])),o=0,s=r.length;o<s;o++)(i=r[o]).callback&&i.callback(e,t,null==n?null:n)}},{key:"on",value:function(e,t){this._subscribers[e].push({callback:t})}},{key:"off",value:function(e,t){this._subscribers[e]=this._subscribers[e].filter((function(e){return e.callback!==t}))}}]),e}();function zr(e,t){var n=Object.keys(e);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(e)),t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n}var Lr=function(e){function t(e,n){var i;if(nr(this,t),i=sr(this,ar(t).call(this)),e&&!Array.isArray(e)&&(n=e,e=[]),i._options=n||{},i._data=Object.create({}),i.length=0,i._idProp=i._options.fieldId||"id",i._type={},i._options.type)for(var r=Object.keys(i._options.type),o=0,s=r.length;o<s;o++){var a=r[o],l=i._options.type[a];i._type[a]="Date"==l||"ISODate"==l||"ASPDate"==l?"Date":l}return e&&e.length&&i.add(e),i.setOptions(n),i}return ur(t,e),rr(t,[{key:"setOptions",value:function(e){e&&void 0!==e.queue&&(!1===e.queue?this._queue&&(this._queue.destroy(),delete this._queue):(!this._queue&&(this._queue=Nr.extend(this,{replace:["add","update","remove"]})),e.queue&&"object"===tr(e.queue)&&this._queue.setOptions(e.queue)))}},{key:"add",value:function(e,t){var n,i=[];if(Array.isArray(e))for(var r=0,o=e.length;r<o;r++)n=this._addItem(e[r]),i.push(n);else{if(!e||"object"!==tr(e))throw new Error("Unknown dataType");n=this._addItem(e),i.push(n)}return i.length&&this._trigger("add",{items:i},t),i}},{key:"update",value:function(e,t){var n=this,i=[],r=[],o=[],s=[],a=this._idProp,l=function(e){var t=e[a];if(null!=t&&n._data[t]){var l=e,u=Object.assign({},n._data[t]),d=n._updateItem(l);r.push(d),s.push(l),o.push(u)}else{var c=n._addItem(e);i.push(c)}};if(Array.isArray(e))for(var u=0,d=e.length;u<d;u++)e[u]&&"object"===tr(e[u])?l(e[u]):console.warn("Ignoring input item, which is not an object at index "+u);else{if(!e||"object"!==tr(e))throw new Error("Unknown dataType");l(e)}return i.length&&this._trigger("add",{items:i},t),r.length&&this._trigger("update",{items:r,oldData:o,data:s},t),i.concat(r)}},{key:"get",value:function(e,t){var n=void 0,i=void 0,r=void 0;Pr(e)?(n=e,r=t):Array.isArray(e)?(i=e,r=t):r=e;var o=r&&"Object"===r.returnType?"Object":"Array",s=r&&r.type||this._options.type,a=r&&r.filter,l=[],u=null,d=null,c=null;if(null!=n)(u=this._getItem(n,s))&&a&&!a(u)&&(u=null);else if(null!=i)for(var h=0,f=i.length;h<f;h++)null!=(u=this._getItem(i[h],s))&&(!a||a(u))&&l.push(u);else for(var p=0,v=(d=Object.keys(this._data)).length;p<v;p++)c=d[p],null!=(u=this._getItem(c,s))&&(!a||a(u))&&l.push(u);if(r&&r.order&&null==n&&this._sort(l,r.order),r&&r.fields){var m=r.fields;if(null!=n&&null!=u)u=this._filterFields(u,m);else for(var y=0,g=l.length;y<g;y++)l[y]=this._filterFields(l[y],m)}if("Object"==o){for(var b={},_=0,w=l.length;_<w;_++){var k=l[_];b[k[this._idProp]]=k}return b}return null==n?l:u}},{key:"getIds",value:function(e){var t,n,i=this._data,r=e&&e.filter,o=e&&e.order,s=e&&e.type||this._options.type,a=Object.keys(i),l=[];if(r)if(o){n=[];for(var u,d=0,c=a.length;d<c;d++)u=a[d],r(t=this._getItem(u,s))&&n.push(t);this._sort(n,o);for(var h=0,f=n.length;h<f;h++)l.push(n[h][this._idProp])}else for(var p,v=0,m=a.length;v<m;v++)p=a[v],r(t=this._getItem(p,s))&&l.push(t[this._idProp]);else if(o){n=[];for(var y,g=0,b=a.length;g<b;g++)y=a[g],n.push(i[y]);this._sort(n,o);for(var _=0,w=n.length;_<w;_++)l.push(n[_][this._idProp])}else for(var k=0,x=a.length;k<x;k++)t=i[a[k]],l.push(t[this._idProp]);return l}},{key:"getDataSet",value:function(){return this}},{key:"forEach",value:function(e,t){var n=t&&t.filter,i=t&&t.type||this._options.type,r=this._data,o=Object.keys(r);if(t&&t.order)for(var s=this.get(t),a=0,l=s.length;a<l;a++){var u=s[a];e(u,u[this._idProp])}else for(var d=0,c=o.length;d<c;d++){var h=o[d],f=this._getItem(h,i);(!n||n(f))&&e(f,h)}}},{key:"map",value:function(e,t){for(var n=t&&t.filter,i=t&&t.type||this._options.type,r=[],o=this._data,s=Object.keys(o),a=0,l=s.length;a<l;a++){var u=s[a],d=this._getItem(u,i);(!n||n(d))&&r.push(e(d,u))}return t&&t.order&&this._sort(r,t.order),r}},{key:"_filterFields",value:function(e,t){return e?(Array.isArray(t)?t:Object.keys(t)).reduce((function(t,n){return t[n]=e[n],t}),{}):e}},{key:"_sort",value:function(e,t){if("string"==typeof t){var n=t;e.sort((function(e,t){var i=e[n],r=t[n];return i>r?1:i<r?-1:0}))}else{if("function"!=typeof t)throw new TypeError("Order must be a function or a string");e.sort(t)}}},{key:"remove",value:function(e,t){for(var n,i=[],r=[],o=Array.isArray(e)?e:[e],s=0,a=o.length;s<a;s++)if(n=this._remove(o[s])){var l=n[this._idProp];null!=l&&(i.push(l),r.push(n))}return i.length&&this._trigger("remove",{items:i,oldData:r},t),i}},{key:"_remove",value:function(e){var t;if(Pr(e)?t=e:e&&"object"===tr(e)&&(t=e[this._idProp]),null!=t&&this._data[t]){var n=this._data[t];return delete this._data[t],--this.length,n}return null}},{key:"clear",value:function(e){for(var t=Object.keys(this._data),n=[],i=0,r=t.length;i<r;i++)n.push(this._data[t[i]]);return this._data={},this.length=0,this._trigger("remove",{items:t,oldData:n},e),t}},{key:"max",value:function(e){for(var t=this._data,n=Object.keys(t),i=null,r=null,o=0,s=n.length;o<s;o++){var a=t[n[o]],l=a[e];null!=l&&(null==r||l>r)&&(i=a,r=l)}return i}},{key:"min",value:function(e){for(var t=this._data,n=Object.keys(t),i=null,r=null,o=0,s=n.length;o<s;o++){var a=t[n[o]],l=a[e];null!=l&&(null==r||l<r)&&(i=a,r=l)}return i}},{key:"distinct",value:function(e){for(var t=this._data,n=Object.keys(t),i=[],r=this._options.type&&this._options.type[e]||null,o=0,s=0,a=n.length;s<a;s++){for(var l=t[n[s]][e],u=!1,d=0;d<o;d++)if(i[d]==l){u=!0;break}u||void 0===l||(i[o]=l,o++)}if(r)for(var c=0,h=i.length;c<h;c++)i[c]=Cr(i[c],r);return i}},{key:"_addItem",value:function(e){var t=e[this._idProp];if(null==t)t=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=1<arguments.length?arguments[1]:void 0,n=2<arguments.length?arguments[2]:void 0,i=t&&n||0;"string"==typeof e&&(t="binary"===e?Array(16):void 0,e={});var r=e.random||(e.rng||fr)();if(r[6]=64|15&r[6],r[8]=128|63&r[8],t)for(var o=0;16>o;o++)t[i+o]=r[o];return t||hr(r)}(),e[this._idProp]=t;else if(this._data[t])throw new Error("Cannot add item: item with id "+t+" already exists");for(var n={},i=Object.keys(e),r=0,o=i.length;r<o;r++){var s=i[r],a=this._type[s];n[s]=Cr(e[s],a)}return this._data[t]=n,this.length++,t}},{key:"_getItem",value:function(e,t){var n=this._data[e];if(!n)return null;var i,r=Object.keys(n);if(t){i={};for(var o=0,s=r.length;o<s;o++){var a=r[o],l=n[a];i[a]=Cr(l,t[a])}}else i=function(e){for(var t,n=1;n<arguments.length;n++)t=null==arguments[n]?{}:arguments[n],n%2?zr(t,!0).forEach((function(n){Ji(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):zr(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}));return e}({},n);return null==i[this._idProp]&&(i[this._idProp]=n.id),i}},{key:"_updateItem",value:function(e){var t=e[this._idProp];if(null==t)throw new Error("Cannot update item: item has no id (item: "+JSON.stringify(e)+")");var n=this._data[t];if(!n)throw new Error("Cannot update item: no item with id "+t+" found");for(var i=Object.keys(e),r=0,o=i.length;r<o;r++){var s=i[r],a=this._type[s];n[s]=Cr(e[s],a)}return t}}]),t}(Ar),Yr=function(e){function t(e,n){var i;return nr(this,t),(i=sr(this,ar(t).call(this))).length=0,i._ids={},i._options=n||{},i.listener=i._onEvent.bind(or(i)),i.setData(e),i}return ur(t,e),rr(t,[{key:"setData",value:function(e){if(this._data){this._data.off&&this._data.off("*",this.listener);var t=this._data.getIds({filter:this._options.filter}),n=this._data.get(t);this._ids={},this.length=0,this._trigger("remove",{items:t,oldData:n})}if(null!=e){this._data=e;for(var i,r=this._data.getIds({filter:this._options.filter}),o=0,s=r.length;o<s;o++)i=r[o],this._ids[i]=!0;this.length=r.length,this._trigger("add",{items:r})}else this._data=new Lr;this._data.on&&this._data.on("*",this.listener)}},{key:"refresh",value:function(){for(var e,t=this._data.getIds({filter:this._options.filter}),n=Object.keys(this._ids),i={},r=[],o=[],s=[],a=0,l=t.length;a<l;a++)i[e=t[a]]=!0,this._ids[e]||(r.push(e),this._ids[e]=!0);for(var u=0,d=n.length;u<d;u++){var c=n[u],h=this._data.get(c);null==h?console.error("If you see this, report it please."):!i[c]&&(o.push(c),s.push(h),delete this._ids[c])}this.length+=r.length-o.length,r.length&&this._trigger("add",{items:r}),o.length&&this._trigger("remove",{items:o,oldData:s})}},{key:"get",value:function(e,t){if(null==this._data)return null;var n,i=null;Pr(e)||Array.isArray(e)?(i=e,n=t):n=e;var r=Object.assign({},this._options,n),o=this._options.filter,s=n&&n.filter;return o&&s&&(r.filter=function(e){return o(e)&&s(e)}),null==i?this._data.get(r):this._data.get(i,r)}},{key:"getIds",value:function(e){if(this._data.length){var t,n=this._options.filter,i=null==e?null:e.filter;return t=i?n?function(e){return n(e)&&i(e)}:i:n,this._data.getIds({filter:t,order:e&&e.order})}return[]}},{key:"forEach",value:function(e,t){if(this._data){var n,i=this._options.filter,r=t&&t.filter;n=r?i?function(e){return i(e)&&r(e)}:r:i,this._data.forEach(e,{filter:n,order:t&&t.order})}}},{key:"map",value:function(e,t){if(this._data){var n,i=this._options.filter,r=t&&t.filter;return n=r?i?function(e){return i(e)&&r(e)}:r:i,this._data.map(e,{filter:n,order:t&&t.order})}return[]}},{key:"getDataSet",value:function(){return this._data.getDataSet()}},{key:"_onEvent",value:function(e,t,n){if(t&&t.items&&this._data){var i=t.items,r=[],o=[],s=[],a=[],l=[],u=[];switch(e){case"add":for(var d=0,c=i.length;d<c;d++){var h=i[d];this.get(h)&&(this._ids[h]=!0,r.push(h))}break;case"update":for(var f=0,p=i.length;f<p;f++){var v=i[f];this.get(v)?this._ids[v]?(o.push(v),l.push(t.data[f]),a.push(t.oldData[f])):(this._ids[v]=!0,r.push(v)):this._ids[v]&&(delete this._ids[v],s.push(v),u.push(t.oldData[f]))}break;case"remove":for(var m,y=0,g=i.length;y<g;y++)m=i[y],this._ids[m]&&(delete this._ids[m],s.push(m),u.push(t.oldData[y]))}this.length+=r.length-s.length,r.length&&this._trigger("add",{items:r},n),o.length&&this._trigger("update",{items:o,oldData:a,data:l},n),s.length&&this._trigger("remove",{items:s,oldData:u},n)}}}]),t}(Ar),Br={DataSet:Lr,DataView:Yr,Queue:Nr},Wr=Object.freeze({default:Br,DataSet:Lr,DataView:Yr,Queue:Nr});"undefined"!=typeof CanvasRenderingContext2D&&(CanvasRenderingContext2D.prototype.circle=function(e,t,n){this.beginPath(),this.arc(e,t,n,0,2*Math.PI,!1),this.closePath()},CanvasRenderingContext2D.prototype.square=function(e,t,n){this.beginPath(),this.rect(e-n,t-n,2*n,2*n),this.closePath()},CanvasRenderingContext2D.prototype.triangle=function(e,t,n){var i=Math.sqrt;this.beginPath(),t+=.275*(n*=1.15);var r=2*n,o=r/2,s=i(3)/6*r,a=i(r*r-o*o);this.moveTo(e,t-(a-s)),this.lineTo(e+o,t+s),this.lineTo(e-o,t+s),this.lineTo(e,t-(a-s)),this.closePath()},CanvasRenderingContext2D.prototype.triangleDown=function(e,t,n){var i=Math.sqrt;this.beginPath(),t-=.275*(n*=1.15);var r=2*n,o=r/2,s=i(3)/6*r,a=i(r*r-o*o);this.moveTo(e,t+(a-s)),this.lineTo(e+o,t-s),this.lineTo(e-o,t-s),this.lineTo(e,t+(a-s)),this.closePath()},CanvasRenderingContext2D.prototype.star=function(e,t,n){var i=Math.cos,r=Math.sin,o=Math.PI;this.beginPath(),t+=.1*(n*=.82);for(var s,a=0;10>a;a++)s=0==a%2?1.3*n:.5*n,this.lineTo(e+s*r(2*a*o/10),t-s*i(2*a*o/10));this.closePath()},CanvasRenderingContext2D.prototype.diamond=function(e,t,n){this.beginPath(),this.lineTo(e,t+n),this.lineTo(e+n,t),this.lineTo(e,t-n),this.lineTo(e-n,t),this.closePath()},CanvasRenderingContext2D.prototype.roundRect=function(e,t,n,i,r){var o=Math.PI/180;0>n-2*r&&(r=n/2),0>i-2*r&&(r=i/2),this.beginPath(),this.moveTo(e+r,t),this.lineTo(e+n-r,t),this.arc(e+n-r,t+r,r,270*o,360*o,!1),this.lineTo(e+n,t+i-r),this.arc(e+n-r,t+i-r,r,0,90*o,!1),this.lineTo(e+r,t+i),this.arc(e+r,t+i-r,r,90*o,180*o,!1),this.lineTo(e,t+r),this.arc(e+r,t+r,r,180*o,270*o,!1),this.closePath()},CanvasRenderingContext2D.prototype.ellipse_vis=function(e,t,n,i){var r=.5522848,o=n/2*r,s=i/2*r,a=e+n,l=t+i,u=e+n/2,d=t+i/2;this.beginPath(),this.moveTo(e,d),this.bezierCurveTo(e,d-s,u-o,t,u,t),this.bezierCurveTo(u+o,t,a,d-s,a,d),this.bezierCurveTo(a,d+s,u+o,l,u,l),this.bezierCurveTo(u-o,l,e,d+s,e,d),this.closePath()},CanvasRenderingContext2D.prototype.database=function(e,t,n,i){var r=i*(1/3),o=.5522848,s=n/2*o,a=r/2*o,l=e+n,u=t+r,d=e+n/2,c=t+r/2,h=t+(i-r/2),f=t+i;this.beginPath(),this.moveTo(l,c),this.bezierCurveTo(l,c+a,d+s,u,d,u),this.bezierCurveTo(d-s,u,e,c+a,e,c),this.bezierCurveTo(e,c-a,d-s,t,d,t),this.bezierCurveTo(d+s,t,l,c-a,l,c),this.lineTo(l,h),this.bezierCurveTo(l,h+a,d+s,f,d,f),this.bezierCurveTo(d-s,f,e,h+a,e,h),this.lineTo(e,c)},CanvasRenderingContext2D.prototype.dashedLine=function(e,t,n,i,r){var o=Math.sqrt;this.beginPath(),this.moveTo(e,t);for(var s=r.length,a=n-e,l=i-t,u=l/a,d=o(a*a+l*l),c=0,h=!0,f=0,p=+r[0];.1<=d;)(p=+r[c++%s])>d&&(p=d),f=o(p*p/(1+u*u)),e+=f=0>a?-f:f,t+=u*f,!0===h?this.lineTo(e,t):this.moveTo(e,t),d-=p,h=!h},CanvasRenderingContext2D.prototype.hexagon=function(e,t,n){this.beginPath();var i=2*Math.PI/6;this.moveTo(e+n,t);for(var r=1;r<6;r++)this.lineTo(e+n*Math.cos(i*r),t+n*Math.sin(i*r));this.closePath()});"undefined"==typeof globalThis?"undefined"==typeof window?void 0===e&&("undefined"==typeof self||self):window:globalThis;function Hr(e,t){return e(t={exports:{}},t.exports),t.exports}var Vr=Hr((function(e){function t(e){if(e)return function(e){for(var n in t.prototype)e[n]=t.prototype[n];return e}(e)}e.exports=t,t.prototype.on=t.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},t.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},t.prototype.off=t.prototype.removeListener=t.prototype.removeAllListeners=t.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var i,r=0;r<n.length;r++)if((i=n[r])===t||i.fn===t){n.splice(r,1);break}return 0===n.length&&delete this._callbacks["$"+e],this},t.prototype.emit=function(e){this._callbacks=this._callbacks||{};for(var t=Array(arguments.length-1),n=this._callbacks["$"+e],i=1;i<arguments.length;i++)t[i-1]=arguments[i];if(n){i=0;for(var r=(n=n.slice(0)).length;i<r;++i)n[i].apply(this,t)}return this},t.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},t.prototype.hasListeners=function(e){return!!this.listeners(e).length}}));function Ur(e){return Jr=e,function(){var e={};if(eo=0,to=Jr.charAt(0),po(),"strict"===no&&(e.strict=!0,po()),("graph"===no||"digraph"===no)&&(e.type=no,po()),io===Qr&&(e.id=no,po()),"{"!=no)throw _o("Angle bracket { expected");if(po(),vo(e),"}"!=no)throw _o("Angle bracket } expected");if(po(),""!==no)throw _o("End of file expected");return po(),delete e.node,delete e.edge,delete e.graph,e}()}var Gr={fontsize:"font.size",fontcolor:"font.color",labelfontcolor:"font.color",fontname:"font.face",color:["color.border","color.background"],fillcolor:"color.background",tooltip:"title",labeltooltip:"title"},qr=Object.create(Gr);qr.color="color.color",qr.style="dashes";var $r=0,Zr=1,Qr=2,Xr=3,Kr={"{":!0,"}":!0,"[":!0,"]":!0,";":!0,"=":!0,",":!0,"->":!0,"--":!0},Jr="",eo=0,to="",no="",io=$r;function ro(){eo++,to=Jr.charAt(eo)}function oo(){return Jr.charAt(eo+1)}var so=/[a-zA-Z_0-9.:#]/;function ao(e){return so.test(e)}function lo(e,t){if(e||(e={}),t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function uo(e,t,n){for(var i=t.split("."),r=e;i.length;){var o=i.shift();i.length?(!r[o]&&(r[o]={}),r=r[o]):r[o]=n}}function co(e,t){for(var n,i,r=null,o=[e],s=e;s.parent;)o.push(s.parent),s=s.parent;if(s.nodes)for(n=0,i=s.nodes.length;n<i;n++)if(t.id===s.nodes[n].id){r=s.nodes[n];break}for(r||(r={id:t.id},e.node&&(r.attr=lo(r.attr,e.node))),n=o.length-1;0<=n;n--){var a=o[n];a.nodes||(a.nodes=[]),-1===a.nodes.indexOf(r)&&a.nodes.push(r)}t.attr&&(r.attr=lo(r.attr,t.attr))}function ho(e,t){if(e.edges||(e.edges=[]),e.edges.push(t),e.edge){var n=lo({},e.edge);t.attr=lo(n,t.attr)}}function fo(e,t,n,i,r){var o={from:t,to:n,type:i};return e.edge&&(o.attr=lo({},e.edge)),o.attr=lo(o.attr||{},r),null!=r&&r.hasOwnProperty("arrows")&&null!=r.arrows&&(o.arrows={to:{enabled:!0,type:r.arrows.type}},r.arrows=null),o}function po(){for(io=$r,no="";" "===to||"\t"===to||"\n"===to||"\r"===to;)ro();do{var e=!1;if("#"===to){for(var t=eo-1;" "===Jr.charAt(t)||"\t"===Jr.charAt(t);)t--;if("\n"===Jr.charAt(t)||""===Jr.charAt(t)){for(;""!=to&&"\n"!=to;)ro();e=!0}}if("/"===to&&"/"===oo()){for(;""!=to&&"\n"!=to;)ro();e=!0}if("/"===to&&"*"===oo()){for(;""!=to;){if("*"===to&&"/"===oo()){ro(),ro();break}ro()}e=!0}for(;" "===to||"\t"===to||"\n"===to||"\r"===to;)ro()}while(e);if(""!==to){var n=to+oo();if(Kr[n])return io=Zr,no=n,ro(),void ro();if(Kr[to])return io=Zr,no=to,void ro();if(ao(to)||"-"===to){for(no+=to,ro();ao(to);)no+=to,ro();return"false"===no?no=!1:"true"===no?no=!0:!isNaN(+no)&&(no=+no),void(io=Qr)}if('"'===to){for(ro();""!=to&&('"'!=to||'"'===to&&'"'===oo());)'"'===to?(no+=to,ro()):"\\"===to&&"n"===oo()?(no+="\n",ro()):no+=to,ro();if('"'!=to)throw _o('End of string " expected');return ro(),void(io=Qr)}for(io=Xr;""!=to;)no+=to,ro();throw new SyntaxError('Syntax error in part "'+wo(no,30)+'"')}io=Zr}function vo(e){for(;""!==no&&"}"!=no;)mo(e),";"===no&&po()}function mo(e){var t=yo(e);if(t)go(e,t);else if(!function(e){return"node"===no?(po(),e.node=bo(),"node"):"edge"===no?(po(),e.edge=bo(),"edge"):"graph"===no?(po(),e.graph=bo(),"graph"):null}(e)){if(io!=Qr)throw _o("Identifier expected");var n=no;if(po(),"="===no){if(po(),io!=Qr)throw _o("Identifier expected");e[n]=no,po()}else!function(e,t){var n={id:t},i=bo();i&&(n.attr=i),co(e,n),go(e,t)}(e,n)}}function yo(e){var t=null;if("subgraph"===no&&((t={}).type="subgraph",po(),io===Qr&&(t.id=no,po())),"{"===no){if(po(),t||(t={}),t.parent=e,t.node=e.node,t.edge=e.edge,t.graph=e.graph,vo(t),"}"!=no)throw _o("Angle bracket } expected");po(),delete t.node,delete t.edge,delete t.graph,delete t.parent,e.subgraphs||(e.subgraphs=[]),e.subgraphs.push(t)}return t}function go(e,t){for(;"->"===no||"--"===no;){var n,i=no;po();var r=yo(e);if(r)n=r;else{if(io!=Qr)throw _o("Identifier or subgraph expected");co(e,{id:n=no}),po()}ho(e,fo(e,t,n,i,bo())),t=n}}function bo(){for(var e,t=null,n={dashed:!0,solid:!1,dotted:[1,5]},i={dot:"circle",box:"box",crow:"crow",curve:"curve",icurve:"inv_curve",normal:"triangle",inv:"inv_triangle",diamond:"diamond",tee:"bar",vee:"vee"},r=[],o=[];"["===no;){for(po(),t={};""!==no&&"]"!=no;){if(io!=Qr)throw _o("Attribute name expected");var s=no;if(po(),"="!=no)throw _o("Equal sign = expected");if(po(),io!=Qr)throw _o("Attribute value expected");var a=no;"style"===s&&(a=n[a]),"arrowhead"===s&&(s="arrows",a={to:{enabled:!0,type:i[a]}}),"arrowtail"===s&&(s="arrows",a={from:{enabled:!0,type:i[a]}}),r.push({attr:t,name:s,value:a}),o.push(s),po(),","==no&&po()}if("]"!=no)throw _o("Bracket ] expected");po()}if(o.includes("dir")){var l={arrows:{}};for(e=0;e<r.length;e++)if("arrows"!==r[e].name)"dir"===r[e].name&&(l.dir=e);else if(null!=r[e].value.to)l.arrows.to=e;else{if(null==r[e].value.from)throw _o("Invalid value of arrows");l.arrows.from=e}var u,d,c=r[l.dir].value;if(!o.includes("arrows"))if("both"===c)r.push({attr:r[l.dir].attr,name:"arrows",value:{to:{enabled:!0}}}),l.arrows.to=r.length-1,r.push({attr:r[l.dir].attr,name:"arrows",value:{from:{enabled:!0}}}),l.arrows.from=r.length-1;else if("forward"===c)r.push({attr:r[l.dir].attr,name:"arrows",value:{to:{enabled:!0}}}),l.arrows.to=r.length-1;else if("back"===c)r.push({attr:r[l.dir].attr,name:"arrows",value:{from:{enabled:!0}}}),l.arrows.from=r.length-1;else{if("none"!==c)throw _o('Invalid dir type "'+c+'"');r.push({attr:r[l.dir].attr,name:"arrows",value:""}),l.arrows.to=r.length-1}if("both"===c)l.arrows.to&&l.arrows.from?(d=r[l.arrows.to].value.to.type,u=r[l.arrows.from].value.from.type,r[l.arrows.to]={attr:r[l.arrows.to].attr,name:r[l.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}},r.splice(l.arrows.from,1)):l.arrows.to?(d=r[l.arrows.to].value.to.type,u="arrow",r[l.arrows.to]={attr:r[l.arrows.to].attr,name:r[l.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}}):l.arrows.from&&(d="arrow",u=r[l.arrows.from].value.from.type,r[l.arrows.from]={attr:r[l.arrows.from].attr,name:r[l.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}});else if("back"===c)l.arrows.to&&l.arrows.from?(d="",u=r[l.arrows.from].value.from.type,r[l.arrows.from]={attr:r[l.arrows.from].attr,name:r[l.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}}):l.arrows.to?(d="",u="arrow",l.arrows.from=l.arrows.to,r[l.arrows.from]={attr:r[l.arrows.from].attr,name:r[l.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}}):l.arrows.from&&(d="",u=r[l.arrows.from].value.from.type,r[l.arrows.to]={attr:r[l.arrows.from].attr,name:r[l.arrows.from].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}}),r[l.arrows.from]={attr:r[l.arrows.from].attr,name:r[l.arrows.from].name,value:{from:{enabled:!0,type:r[l.arrows.from].value.from.type}}};else if("none"===c){var h;r[h=l.arrows.to?l.arrows.to:l.arrows.from]={attr:r[h].attr,name:r[h].name,value:""}}else{if("forward"!==c)throw _o('Invalid dir type "'+c+'"');l.arrows.to&&l.arrows.from?(d=r[l.arrows.to].value.to.type,u="",r[l.arrows.to]={attr:r[l.arrows.to].attr,name:r[l.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}}):l.arrows.to?(d=r[l.arrows.to].value.to.type,u="",r[l.arrows.to]={attr:r[l.arrows.to].attr,name:r[l.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}}):l.arrows.from&&(d="arrow",u="",l.arrows.to=l.arrows.from,r[l.arrows.to]={attr:r[l.arrows.to].attr,name:r[l.arrows.to].name,value:{to:{enabled:!0,type:d},from:{enabled:!0,type:u}}}),r[l.arrows.to]={attr:r[l.arrows.to].attr,name:r[l.arrows.to].name,value:{to:{enabled:!0,type:r[l.arrows.to].value.to.type}}}}r.splice(l.dir,1)}var f;if(o.includes("penwidth")){var p=[];for(f=r.length,e=0;e<f;e++)"width"!==r[e].name&&("penwidth"===r[e].name&&(r[e].name="width"),p.push(r[e]));r=p}for(f=r.length,e=0;e<f;e++)uo(r[e].attr,r[e].name,r[e].value);return t}function _o(e){return new SyntaxError(e+', got "'+wo(no,30)+'" (char '+eo+")")}function wo(e,t){return e.length<=t?e:e.substr(0,27)+"..."}function ko(e,t,n){for(var i,r=t.split("."),o=r.pop(),s=e,a=0;a<r.length;a++)(i=r[a])in s||(s[i]={}),s=s[i];return s[o]=n,e}function xo(e,t){var n={};for(var i in e)if(e.hasOwnProperty(i)){var r=t[i];Array.isArray(r)?r.forEach((function(t){ko(n,t,e[i])})):ko(n,"string"==typeof r?r:i,e[i])}return n}var So=Ur,Oo=function(e){var t=Ur(e),n={nodes:[],edges:[],options:{}};if(t.nodes&&t.nodes.forEach((function(e){var t={id:e.id,label:(e.label||e.id)+""};lo(t,xo(e.attr,Gr)),t.image&&(t.shape="image"),n.nodes.push(t)})),t.edges){var i=function(e){var t={from:e.from,to:e.to};return lo(t,xo(e.attr,qr)),null==t.arrows&&"->"===e.type&&(t.arrows="to"),t};t.edges.forEach((function(e){var t,r;t=e.from instanceof Object?e.from.nodes:{id:e.from},r=e.to instanceof Object?e.to.nodes:{id:e.to},e.from instanceof Object&&e.from.edges&&e.from.edges.forEach((function(e){var t=i(e);n.edges.push(t)})),function(e,t,n){Array.isArray(e)?e.forEach((function(e){Array.isArray(t)?t.forEach((function(t){n(e,t)})):n(e,t)})):Array.isArray(t)?t.forEach((function(t){n(e,t)})):n(e,t)}(t,r,(function(t,r){var o=fo(n,t.id,r.id,e.type,e.attr),s=i(o);n.edges.push(s)})),e.to instanceof Object&&e.to.edges&&e.to.edges.forEach((function(e){var t=i(e);n.edges.push(t)}))}))}return t.attr&&(n.options=t.attr),n},Eo={parseDOT:So,DOTToGraph:Oo},To=Object.freeze({default:Eo,__moduleExports:Eo,parseDOT:So,DOTToGraph:Oo});function Do(e,t){var n={edges:{inheritColor:!1},nodes:{fixed:!1,parseColor:!1}};null!=t&&(null!=t.fixed&&(n.nodes.fixed=t.fixed),null!=t.parseColor&&(n.nodes.parseColor=t.parseColor),null!=t.inheritColor&&(n.edges.inheritColor=t.inheritColor));var i=e.edges.map((function(e){var t={from:e.source,id:e.id,to:e.target};return null!=e.attributes&&(t.attributes=e.attributes),null!=e.label&&(t.label=e.label),null!=e.attributes&&null!=e.attributes.title&&(t.title=e.attributes.title),"Directed"===e.type&&(t.arrows="to"),e.color&&!1===n.edges.inheritColor&&(t.color=e.color),t}));return{nodes:e.nodes.map((function(e){var t={id:e.id,fixed:n.nodes.fixed&&null!=e.x&&null!=e.y};return null!=e.attributes&&(t.attributes=e.attributes),null!=e.label&&(t.label=e.label),null!=e.size&&(t.size=e.size),null!=e.attributes&&null!=e.attributes.title&&(t.title=e.attributes.title),null!=e.title&&(t.title=e.title),null!=e.x&&(t.x=e.x),null!=e.y&&(t.y=e.y),null!=e.color&&(!0===n.nodes.parseColor?t.color=e.color:t.color={background:e.color,border:e.color,highlight:{background:e.color,border:e.color},hover:{background:e.color,border:e.color}}),t})),edges:i}}var Co=Object.freeze({parseGephi:Do}),Mo=Object.freeze({}),Po=Hr((function(e){e.exports=function(e){var t,n=String.fromCharCode,i=e&&e.preventDefault||!1,r=e&&e.container||window,o={},s={keydown:{},keyup:{}},a={};for(t=97;122>=t;t++)a[n(t)]={code:t-97+65,shift:!1};for(t=65;90>=t;t++)a[n(t)]={code:t,shift:!0};for(t=0;9>=t;t++)a[""+t]={code:48+t,shift:!1};for(t=1;12>=t;t++)a["F"+t]={code:111+t,shift:!1};for(t=0;9>=t;t++)a["num"+t]={code:96+t,shift:!1};a["num*"]={code:106,shift:!1},a["num+"]={code:107,shift:!1},a["num-"]={code:109,shift:!1},a["num/"]={code:111,shift:!1},a["num."]={code:110,shift:!1},a.left={code:37,shift:!1},a.up={code:38,shift:!1},a.right={code:39,shift:!1},a.down={code:40,shift:!1},a.space={code:32,shift:!1},a.enter={code:13,shift:!1},a.shift={code:16,shift:void 0},a.esc={code:27,shift:!1},a.backspace={code:8,shift:!1},a.tab={code:9,shift:!1},a.ctrl={code:17,shift:!1},a.alt={code:18,shift:!1},a.delete={code:46,shift:!1},a.pageup={code:33,shift:!1},a.pagedown={code:34,shift:!1},a["="]={code:187,shift:!1},a["-"]={code:189,shift:!1},a["]"]={code:221,shift:!1},a["["]={code:219,shift:!1};var l=function(e){d(e,"keydown")},u=function(e){d(e,"keyup")},d=function(e,t){if(void 0!==s[t][e.keyCode]){for(var n=s[t][e.keyCode],r=0;r<n.length;r++)void 0===n[r].shift?n[r].fn(e):1==n[r].shift&&1==e.shiftKey?n[r].fn(e):0==n[r].shift&&0==e.shiftKey&&n[r].fn(e);1==i&&e.preventDefault()}};return o.bind=function(e,t,n){if(void 0===n&&(n="keydown"),void 0===a[e])throw new Error("unsupported key: "+e);void 0===s[n][a[e].code]&&(s[n][a[e].code]=[]),s[n][a[e].code].push({fn:t,shift:a[e].shift})},o.bindAll=function(e,t){for(var n in void 0===t&&(t="keydown"),a)a.hasOwnProperty(n)&&o.bind(n,e,t)},o.getKey=function(e){for(var t in a)if(a.hasOwnProperty(t)){if(1==e.shiftKey&&1==a[t].shift&&e.keyCode==a[t].code)return t;if(0==e.shiftKey&&0==a[t].shift&&e.keyCode==a[t].code)return t;if(e.keyCode==a[t].code&&"shift"==t)return t}return"unknown key, currently not supported"},o.unbind=function(e,t,n){if(void 0===n&&(n="keydown"),void 0===a[e])throw new Error("unsupported key: "+e);if(void 0!==t){var i=[],r=s[n][a[e].code];if(void 0!==r)for(var o=0;o<r.length;o++)(r[o].fn!=t||r[o].shift!=a[e].shift)&&i.push(s[n][a[e].code][o]);s[n][a[e].code]=i}else s[n][a[e].code]=[]},o.reset=function(){s={keydown:{},keyup:{}}},o.destroy=function(){s={keydown:{},keyup:{}},r.removeEventListener("keydown",l,!0),r.removeEventListener("keyup",u,!0)},r.addEventListener("keydown",l,!0),r.addEventListener("keyup",u,!0),o}})),No=Object.freeze({default:Po,__moduleExports:Po});function Fo(){return(Fo=Object.assign||function(e){for(var t,n=1;n<arguments.length;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)}function Io(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function jo(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var Ro="function"==typeof Object.assign?Object.assign:function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t,n=Object(e),i=1;i<arguments.length;i++)if(null!=(t=arguments[i]))for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r]);return n},Ao=["","webkit","Moz","MS","ms","o"],zo="undefined"==typeof document?{style:{}}:document.createElement("div"),Lo=Math.round,Yo=Math.abs,Bo=Date.now;function Wo(e,t){for(var n,i,r=t[0].toUpperCase()+t.slice(1),o=0;o<Ao.length;){if((i=(n=Ao[o])?n+r:t)in e)return i;o++}}var Ho="undefined"==typeof window?{}:window,Vo=Wo(zo.style,"touchAction"),Uo=void 0!==Vo;var Go=function(){if(!Uo)return!1;var e={},t=Ho.CSS&&Ho.CSS.supports;return["auto","manipulation","pan-y","pan-x","pan-x pan-y","none"].forEach((function(n){return e[n]=!t||Ho.CSS.supports("touch-action",n)})),e}(),qo="ontouchstart"in Ho,$o=void 0!==Wo(Ho,"PointerEvent"),Zo=qo&&/mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),Qo=["x","y"],Xo=["clientX","clientY"];function Ko(e,t,n){if(e)if(e.forEach)e.forEach(t,n);else if(void 0!==e.length)for(i=0;i<e.length;)t.call(n,e[i],i,e),i++;else for(var i in e)e.hasOwnProperty(i)&&t.call(n,e[i],i,e)}function Jo(e,t){return"function"==typeof e?e.apply(t&&t[0]||void 0,t):e}function es(e,t){return-1<e.indexOf(t)}var ts=function(){function e(e,t){this.manager=e,this.set(t)}var t=e.prototype;return t.set=function(e){"compute"===e&&(e=this.compute()),Uo&&this.manager.element.style&&Go[e]&&(this.manager.element.style[Vo]=e),this.actions=e.toLowerCase().trim()},t.update=function(){this.set(this.manager.options.touchAction)},t.compute=function(){var e=[];return Ko(this.manager.recognizers,(function(t){Jo(t.options.enable,[t])&&(e=e.concat(t.getTouchAction()))})),function(e){if(es(e,"none"))return"none";var t=es(e,"pan-x"),n=es(e,"pan-y");return t&&n?"none":t||n?t?"pan-x":"pan-y":es(e,"manipulation")?"manipulation":"auto"}(e.join(" "))},t.preventDefaults=function(e){var t=e.srcEvent,n=e.offsetDirection;if(!this.manager.session.prevented){var i=this.actions,r=es(i,"none")&&!Go.none,o=es(i,"pan-y")&&!Go["pan-y"],s=es(i,"pan-x")&&!Go["pan-x"];if(r){var a=1===e.pointers.length,l=2>e.distance,u=250>e.deltaTime;if(a&&l&&u)return}return s&&o?void 0:r||o&&6&n||s&&24&n?this.preventSrc(t):void 0}t.preventDefault()},t.preventSrc=function(e){this.manager.session.prevented=!0,e.preventDefault()},e}();function ns(e,t){for(;e;){if(e===t)return!0;e=e.parentNode}return!1}function is(e){var t=e.length;if(1===t)return{x:Lo(e[0].clientX),y:Lo(e[0].clientY)};for(var n=0,i=0,r=0;r<t;)n+=e[r].clientX,i+=e[r].clientY,r++;return{x:Lo(n/t),y:Lo(i/t)}}function rs(e){for(var t=[],n=0;n<e.pointers.length;)t[n]={clientX:Lo(e.pointers[n].clientX),clientY:Lo(e.pointers[n].clientY)},n++;return{timeStamp:Bo(),pointers:t,center:is(t),deltaX:e.deltaX,deltaY:e.deltaY}}function os(e,t,n){n||(n=Qo);var i=t[n[0]]-e[n[0]],r=t[n[1]]-e[n[1]];return Math.sqrt(i*i+r*r)}function ss(e,t,n){n||(n=Qo);var i=t[n[0]]-e[n[0]],r=t[n[1]]-e[n[1]];return 180*Math.atan2(r,i)/Math.PI}function as(e,t){return e===t?1:Yo(e)>=Yo(t)?0>e?2:4:0>t?8:16}function ls(e,t,n){return{x:t/e||0,y:n/e||0}}function us(e,t){var n=e.session,i=t.pointers,r=i.length;n.firstInput||(n.firstInput=rs(t)),1<r&&!n.firstMultiple?n.firstMultiple=rs(t):1===r&&(n.firstMultiple=!1);var o=n.firstInput,s=n.firstMultiple,a=s?s.center:o.center,l=t.center=is(i);t.timeStamp=Bo(),t.deltaTime=t.timeStamp-o.timeStamp,t.angle=ss(a,l),t.distance=os(a,l),function(e,t){var n=t.center,i=e.offsetDelta||{},r=e.prevDelta||{},o=e.prevInput||{};(1===t.eventType||4===o.eventType)&&(r=e.prevDelta={x:o.deltaX||0,y:o.deltaY||0},i=e.offsetDelta={x:n.x,y:n.y}),t.deltaX=r.x+(n.x-i.x),t.deltaY=r.y+(n.y-i.y)}(n,t),t.offsetDirection=as(t.deltaX,t.deltaY);var u=ls(t.deltaTime,t.deltaX,t.deltaY);t.overallVelocityX=u.x,t.overallVelocityY=u.y,t.overallVelocity=Yo(u.x)>Yo(u.y)?u.x:u.y,t.scale=s?function(e,t){return os(t[0],t[1],Xo)/os(e[0],e[1],Xo)}(s.pointers,i):1,t.rotation=s?function(e,t){return ss(t[1],t[0],Xo)+ss(e[1],e[0],Xo)}(s.pointers,i):0,t.maxPointers=n.prevInput?t.pointers.length>n.prevInput.maxPointers?t.pointers.length:n.prevInput.maxPointers:t.pointers.length,function(e,t){var n,i,r,o,s=e.lastInterval||t,a=t.timeStamp-s.timeStamp;if(8!==t.eventType&&(a>25||void 0===s.velocity)){var l=t.deltaX-s.deltaX,u=t.deltaY-s.deltaY,d=ls(a,l,u);i=d.x,r=d.y,n=Yo(d.x)>Yo(d.y)?d.x:d.y,o=as(l,u),e.lastInterval=t}else n=s.velocity,i=s.velocityX,r=s.velocityY,o=s.direction;t.velocity=n,t.velocityX=i,t.velocityY=r,t.direction=o}(n,t);var d=e.element;ns(t.srcEvent.target,d)&&(d=t.srcEvent.target),t.target=d}function ds(e,t,n){var i=n.pointers.length,r=n.changedPointers.length,o=1&t&&0==i-r;n.isFirst=!!o,n.isFinal=!!(12&t&&0==i-r),o&&(e.session={}),n.eventType=t,us(e,n),e.emit("hammer.input",n),e.recognize(n),e.session.prevInput=n}function cs(e){return e.trim().split(/\s+/g)}function hs(e,t,n){Ko(cs(t),(function(t){e.addEventListener(t,n,!1)}))}function fs(e,t,n){Ko(cs(t),(function(t){e.removeEventListener(t,n,!1)}))}function ps(e){var t=e.ownerDocument||e;return t.defaultView||t.parentWindow||window}var vs=function(){function e(e,t){var n=this;this.manager=e,this.callback=t,this.element=e.element,this.target=e.options.inputTarget,this.domHandler=function(t){Jo(e.options.enable,[e])&&n.handler(t)},this.init()}var t=e.prototype;return t.handler=function(){},t.init=function(){this.evEl&&hs(this.element,this.evEl,this.domHandler),this.evTarget&&hs(this.target,this.evTarget,this.domHandler),this.evWin&&hs(ps(this.element),this.evWin,this.domHandler)},t.destroy=function(){this.evEl&&fs(this.element,this.evEl,this.domHandler),this.evTarget&&fs(this.target,this.evTarget,this.domHandler),this.evWin&&fs(ps(this.element),this.evWin,this.domHandler)},e}();function ms(e,t,n){if(e.indexOf&&!n)return e.indexOf(t);for(var i=0;i<e.length;){if(n&&e[i][n]==t||!n&&e[i]===t)return i;i++}return-1}var ys={pointerdown:1,pointermove:2,pointerup:4,pointercancel:8,pointerout:8},gs={2:"touch",3:"pen",4:"mouse",5:"kinect"},bs="pointerdown",_s="pointermove pointerup pointercancel";Ho.MSPointerEvent&&!Ho.PointerEvent&&(bs="MSPointerDown",_s="MSPointerMove MSPointerUp MSPointerCancel");var ws=function(e){function t(){var n,i=t.prototype;return i.evEl=bs,i.evWin=_s,(n=e.apply(this,arguments)||this).store=n.manager.session.pointerEvents=[],n}return Io(t,e),t.prototype.handler=function(e){var t=this.store,n=!1,i=e.type.toLowerCase().replace("ms",""),r=ys[i],o=gs[e.pointerType]||e.pointerType,s=ms(t,e.pointerId,"pointerId");1&r&&(0===e.button||"touch"===o)?0>s&&(t.push(e),s=t.length-1):12&r&&(n=!0),0>s||(t[s]=e,this.callback(this.manager,r,{pointers:t,changedPointers:[e],pointerType:o,srcEvent:e}),n&&t.splice(s,1))},t}(vs);function ks(e){return Array.prototype.slice.call(e,0)}function xs(e,t,n){for(var i,r=[],o=[],s=0;s<e.length;)0>ms(o,i=t?e[s][t]:e[s])&&r.push(e[s]),o[s]=i,s++;return n&&(r=t?r.sort((function(e,n){return e[t]>n[t]})):r.sort()),r}var Ss={touchstart:1,touchmove:2,touchend:4,touchcancel:8},Os=function(e){function t(){var n;return t.prototype.evTarget="touchstart touchmove touchend touchcancel",(n=e.apply(this,arguments)||this).targetIds={},n}return Io(t,e),t.prototype.handler=function(e){var t=Ss[e.type],n=Es.call(this,e,t);n&&this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:"touch",srcEvent:e})},t}(vs);function Es(e,t){var n=ks(e.touches),i=this.targetIds;if(3&t&&1===n.length)return i[n[0].identifier]=!0,[n,n];var r,o,s=ks(e.changedTouches),a=[],l=this.target;if(o=n.filter((function(e){return ns(e.target,l)})),1===t)for(r=0;r<o.length;)i[o[r].identifier]=!0,r++;for(r=0;r<s.length;)i[s[r].identifier]&&a.push(s[r]),12&t&&delete i[s[r].identifier],r++;return a.length?[xs(o.concat(a),"identifier",!0),a]:void 0}var Ts={mousedown:1,mousemove:2,mouseup:4},Ds=function(e){function t(){var n,i=t.prototype;return i.evEl="mousedown",i.evWin="mousemove mouseup",(n=e.apply(this,arguments)||this).pressed=!1,n}return Io(t,e),t.prototype.handler=function(e){var t=Ts[e.type];1&t&&0===e.button&&(this.pressed=!0),2&t&&1!==e.which&&(t=4),this.pressed&&(4&t&&(this.pressed=!1),this.callback(this.manager,t,{pointers:[e],changedPointers:[e],pointerType:"mouse",srcEvent:e}))},t}(vs);function Cs(e){var t=e.changedPointers[0];if(t.identifier===this.primaryTouch){var n={x:t.clientX,y:t.clientY},i=this.lastTouches;this.lastTouches.push(n);setTimeout((function(){var e=i.indexOf(n);-1<e&&i.splice(e,1)}),2500)}}function Ms(e,t){1&e?(this.primaryTouch=t.changedPointers[0].identifier,Cs.call(this,t)):12&e&&Cs.call(this,t)}function Ps(e){for(var t=Math.abs,n=e.srcEvent.clientX,i=e.srcEvent.clientY,r=0;r<this.lastTouches.length;r++){var o=this.lastTouches[r],s=t(n-o.x),a=t(i-o.y);if(s<=25&&a<=25)return!0}return!1}var Ns=function(e){function t(t,n){var i;return(i=e.call(this,t,n)||this).handler=function(e,t,n){var r="touch"===n.pointerType,o="mouse"===n.pointerType;if(!(o&&n.sourceCapabilities&&n.sourceCapabilities.firesTouchEvents)){if(r)Ms.call(jo(jo(i)),t,n);else if(o&&Ps.call(jo(jo(i)),n))return;i.callback(e,t,n)}},i.touch=new Os(i.manager,i.handler),i.mouse=new Ds(i.manager,i.handler),i.primaryTouch=null,i.lastTouches=[],i}return Io(t,e),t.prototype.destroy=function(){this.touch.destroy(),this.mouse.destroy()},t}(vs);function Fs(e,t,n){return!!Array.isArray(e)&&(Ko(e,n[t],n),!0)}var Is=1;function js(e,t){var n=t.manager;return n?n.get(e):e}function Rs(e){return 16&e?"cancel":8&e?"end":4&e?"move":2&e?"start":""}var As=function(){function e(e){void 0===e&&(e={}),this.options=Fo({enable:!0},e),this.id=Is++,this.manager=null,this.state=1,this.simultaneous={},this.requireFail=[]}var t=e.prototype;return t.set=function(e){return Ro(this.options,e),this.manager&&this.manager.touchAction.update(),this},t.recognizeWith=function(e){if(Fs(e,"recognizeWith",this))return this;var t=this.simultaneous;return t[(e=js(e,this)).id]||(t[e.id]=e,e.recognizeWith(this)),this},t.dropRecognizeWith=function(e){return Fs(e,"dropRecognizeWith",this)?this:(e=js(e,this),delete this.simultaneous[e.id],this)},t.requireFailure=function(e){if(Fs(e,"requireFailure",this))return this;var t=this.requireFail;return-1===ms(t,e=js(e,this))&&(t.push(e),e.requireFailure(this)),this},t.dropRequireFailure=function(e){if(Fs(e,"dropRequireFailure",this))return this;e=js(e,this);var t=ms(this.requireFail,e);return-1<t&&this.requireFail.splice(t,1),this},t.hasRequireFailures=function(){return 0<this.requireFail.length},t.canRecognizeWith=function(e){return!!this.simultaneous[e.id]},t.emit=function(e){function t(t){n.manager.emit(t,e)}var n=this,i=this.state;i<8&&t(n.options.event+Rs(i)),t(n.options.event),e.additionalEvent&&t(e.additionalEvent),i>=8&&t(n.options.event+Rs(i))},t.tryEmit=function(e){return this.canEmit()?this.emit(e):void(this.state=32)},t.canEmit=function(){for(var e=0;e<this.requireFail.length;){if(!(33&this.requireFail[e].state))return!1;e++}return!0},t.recognize=function(e){var t=Ro({},e);return Jo(this.options.enable,[this,t])?(56&this.state&&(this.state=1),this.state=this.process(t),void(30&this.state&&this.tryEmit(t))):(this.reset(),void(this.state=32))},t.process=function(){},t.getTouchAction=function(){},t.reset=function(){},e}(),zs={domEvents:!1,touchAction:"compute",enable:!0,inputTarget:null,inputClass:null,preset:[],cssProps:{userSelect:"none",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};function Ls(e,t){var n,i=e.element;i.style&&(Ko(e.options.cssProps,(function(r,o){n=Wo(i.style,o),t?(e.oldCssProps[n]=i.style[n],i.style[n]=r):i.style[n]=e.oldCssProps[n]||""})),t||(e.oldCssProps={}))}var Ys=function(){function e(e,t){var n=this;this.options=Ro({},zs,t||{}),this.options.inputTarget=this.options.inputTarget||e,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=e,this.input=function(e){var t=e.options.inputClass;return new(t||($o?ws:Zo?Os:qo?Ns:Ds))(e,ds)}(this),this.touchAction=new ts(this,this.options.touchAction),Ls(this,!0),Ko(this.options.recognizers,(function(e){var t=n.add(new e[0](e[1]));e[2]&&t.recognizeWith(e[2]),e[3]&&t.requireFailure(e[3])}),this)}var t=e.prototype;return t.set=function(e){return Ro(this.options,e),e.touchAction&&this.touchAction.update(),e.inputTarget&&(this.input.destroy(),this.input.target=e.inputTarget,this.input.init()),this},t.stop=function(e){this.session.stopped=e?2:1},t.recognize=function(e){var t=this.session;if(!t.stopped){this.touchAction.preventDefaults(e);var n,i=this.recognizers,r=t.curRecognizer;(!r||r&&8&r.state)&&(t.curRecognizer=null,r=null);for(var o=0;o<i.length;)n=i[o],2===t.stopped||r&&n!==r&&!n.canRecognizeWith(r)?n.reset():n.recognize(e),!r&&14&n.state&&(t.curRecognizer=n,r=n),o++}},t.get=function(e){if(e instanceof As)return e;for(var t=this.recognizers,n=0;n<t.length;n++)if(t[n].options.event===e)return t[n];return null},t.add=function(e){if(Fs(e,"add",this))return this;var t=this.get(e.options.event);return t&&this.remove(t),this.recognizers.push(e),e.manager=this,this.touchAction.update(),e},t.remove=function(e){if(Fs(e,"remove",this))return this;var t=this.get(e);if(e){var n=this.recognizers,i=ms(n,t);-1!==i&&(n.splice(i,1),this.touchAction.update())}return this},t.on=function(e,t){if(void 0===e||void 0===t)return this;var n=this.handlers;return Ko(cs(e),(function(e){n[e]=n[e]||[],n[e].push(t)})),this},t.off=function(e,t){if(void 0===e)return this;var n=this.handlers;return Ko(cs(e),(function(e){t?n[e]&&n[e].splice(ms(n[e],t),1):delete n[e]})),this},t.emit=function(e,t){this.options.domEvents&&function(e,t){var n=document.createEvent("Event");n.initEvent(e,!0,!0),n.gesture=t,t.target.dispatchEvent(n)}(e,t);var n=this.handlers[e]&&this.handlers[e].slice();if(n&&n.length){t.type=e,t.preventDefault=function(){t.srcEvent.preventDefault()};for(var i=0;i<n.length;)n[i](t),i++}},t.destroy=function(){this.element&&Ls(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null},e}(),Bs={touchstart:1,touchmove:2,touchend:4,touchcancel:8},Ws=function(e){function t(){var n,i=t.prototype;return i.evTarget="touchstart",i.evWin="touchstart touchmove touchend touchcancel",(n=e.apply(this,arguments)||this).started=!1,n}return Io(t,e),t.prototype.handler=function(e){var t=Bs[e.type];if(1===t&&(this.started=!0),this.started){var n=Hs.call(this,e,t);12&t&&0==n[0].length-n[1].length&&(this.started=!1),this.callback(this.manager,t,{pointers:n[0],changedPointers:n[1],pointerType:"touch",srcEvent:e})}},t}(vs);function Hs(e,t){var n=ks(e.touches),i=ks(e.changedTouches);return 12&t&&(n=xs(n.concat(i),"identifier",!0)),[n,i]}var Vs=function(e){function t(t){return void 0===t&&(t={}),e.call(this,Fo({pointers:1},t))||this}Io(t,e);var n=t.prototype;return n.attrTest=function(e){var t=this.options.pointers;return 0===t||e.pointers.length===t},n.process=function(e){var t=this.state,n=e.eventType,i=6&t,r=this.attrTest(e);return i&&(8&n||!r)?16|t:i||r?4&n?8|t:2&t?4|t:2:32},t}(As),Us=function(e){function t(t){var n;return void 0===t&&(t={}),(n=e.call(this,Fo({event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},t))||this).pTime=!1,n.pCenter=!1,n._timer=null,n._input=null,n.count=0,n}Io(t,e);var n=t.prototype;return n.getTouchAction=function(){return["manipulation"]},n.process=function(e){var t=this,n=this.options,i=e.pointers.length===n.pointers,r=e.distance<n.threshold,o=e.deltaTime<n.time;if(this.reset(),1&e.eventType&&0===this.count)return this.failTimeout();if(r&&o&&i){if(4!==e.eventType)return this.failTimeout();var s=!this.pTime||e.timeStamp-this.pTime<n.interval,a=!this.pCenter||os(this.pCenter,e.center)<n.posThreshold;if(this.pTime=e.timeStamp,this.pCenter=e.center,a&&s?this.count+=1:this.count=1,this._input=e,0==this.count%n.taps)return this.hasRequireFailures()?(this._timer=setTimeout((function(){t.state=8,t.tryEmit()}),n.interval),2):8}return 32},n.failTimeout=function(){var e=this;return this._timer=setTimeout((function(){e.state=32}),this.options.interval),32},n.reset=function(){clearTimeout(this._timer)},n.emit=function(){8===this.state&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))},t}(As);function Gs(e){return 16===e?"down":8===e?"up":2===e?"left":4===e?"right":""}var qs=function(e){var t=Math.abs;function n(t){var n;return void 0===t&&(t={}),(n=e.call(this,Fo({event:"pan",threshold:10,pointers:1,direction:30},t))||this).pX=null,n.pY=null,n}Io(n,e);var i=n.prototype;return i.getTouchAction=function(){var e=this.options.direction,t=[];return 6&e&&t.push("pan-y"),24&e&&t.push("pan-x"),t},i.directionTest=function(e){var n=this.options,i=!0,r=e.distance,o=e.direction,s=e.deltaX,a=e.deltaY;return o&n.direction||(6&n.direction?(o=0===s?1:0>s?2:4,i=s!==this.pX,r=t(e.deltaX)):(o=0===a?1:0>a?8:16,i=a!==this.pY,r=t(e.deltaY))),e.direction=o,i&&r>n.threshold&&o&n.direction},i.attrTest=function(e){return Vs.prototype.attrTest.call(this,e)&&(2&this.state||!(2&this.state)&&this.directionTest(e))},i.emit=function(t){this.pX=t.deltaX,this.pY=t.deltaY;var n=Gs(t.direction);n&&(t.additionalEvent=this.options.event+n),e.prototype.emit.call(this,t)},n}(Vs),$s=function(e){function t(t){return void 0===t&&(t={}),e.call(this,Fo({event:"swipe",threshold:10,velocity:.3,direction:30,pointers:1},t))||this}Io(t,e);var n=t.prototype;return n.getTouchAction=function(){return qs.prototype.getTouchAction.call(this)},n.attrTest=function(t){var n,i=this.options.direction;return 30&i?n=t.overallVelocity:6&i?n=t.overallVelocityX:24&i&&(n=t.overallVelocityY),e.prototype.attrTest.call(this,t)&&i&t.offsetDirection&&t.distance>this.options.threshold&&t.maxPointers===this.options.pointers&&Yo(n)>this.options.velocity&&4&t.eventType},n.emit=function(e){var t=Gs(e.offsetDirection);t&&this.manager.emit(this.options.event+t,e),this.manager.emit(this.options.event,e)},t}(Vs),Zs=function(e){var t=Math.abs;function n(t){return void 0===t&&(t={}),e.call(this,Fo({event:"pinch",threshold:0,pointers:2},t))||this}Io(n,e);var i=n.prototype;return i.getTouchAction=function(){return["none"]},i.attrTest=function(n){return e.prototype.attrTest.call(this,n)&&(t(n.scale-1)>this.options.threshold||2&this.state)},i.emit=function(t){if(1!==t.scale){var n=1>t.scale?"in":"out";t.additionalEvent=this.options.event+n}e.prototype.emit.call(this,t)},n}(Vs),Qs=function(e){var t=Math.abs;function n(t){return void 0===t&&(t={}),e.call(this,Fo({event:"rotate",threshold:0,pointers:2},t))||this}Io(n,e);var i=n.prototype;return i.getTouchAction=function(){return["none"]},i.attrTest=function(n){return e.prototype.attrTest.call(this,n)&&(t(n.rotation)>this.options.threshold||2&this.state)},n}(Vs),Xs=function(e){function t(t){var n;return void 0===t&&(t={}),(n=e.call(this,Fo({event:"press",pointers:1,time:251,threshold:9},t))||this)._timer=null,n._input=null,n}Io(t,e);var n=t.prototype;return n.getTouchAction=function(){return["auto"]},n.process=function(e){var t=this,n=this.options,i=e.pointers.length===n.pointers,r=e.distance<n.threshold,o=e.deltaTime>n.time;if(this._input=e,!r||!i||12&e.eventType&&!o)this.reset();else if(1&e.eventType)this.reset(),this._timer=setTimeout((function(){t.state=8,t.tryEmit()}),n.time);else if(4&e.eventType)return 8;return 32},n.reset=function(){clearTimeout(this._timer)},n.emit=function(e){8!==this.state||(e&&4&e.eventType?this.manager.emit(this.options.event+"up",e):(this._input.timeStamp=Bo(),this.manager.emit(this.options.event,this._input)))},t}(As);function Ks(e,t,n){return function(){var i=new Error("get-stack-trace"),r=i&&i.stack?i.stack.replace(/^[^\(]+?[\n$]/gm,"").replace(/^\s+at\s+/gm,"").replace(/^Object.<anonymous>\s*\(/gm,"{anonymous}()@"):"Unknown Stack Trace",o=window.console&&(window.console.warn||window.console.log);return o&&o.call(window.console,"DEPRECATED METHOD: "+t+"\n"+n+" AT \n",r),e.apply(this,arguments)}}var Js=Ks((function(e,t,n){for(var i=Object.keys(t),r=0;r<i.length;)(!n||n&&void 0===e[i[r]])&&(e[i[r]]=t[i[r]]),r++;return e}),"extend","Use `assign`."),ea=Ks((function(e,t){return Js(e,t,!0)}),"merge","Use `assign`.");function ta(e,t,n){var i,r=t.prototype;(i=e.prototype=Object.create(r)).constructor=e,i._super=r,n&&Ro(i,n)}function na(e,t){return function(){return e.apply(t,arguments)}}var ia=function(){var e=function(e,t){return void 0===t&&(t={}),new Ys(e,Fo({recognizers:[[Qs,{enable:!1}],[Zs,{enable:!1},["rotate"]],[$s,{direction:6}],[qs,{direction:6},["swipe"]],[Us],[Us,{event:"doubletap",taps:2},["tap"]],[Xs]]},t))};return e.VERSION="2.0.15",e.DIRECTION_ALL=30,e.DIRECTION_DOWN=16,e.DIRECTION_LEFT=2,e.DIRECTION_RIGHT=4,e.DIRECTION_UP=8,e.DIRECTION_HORIZONTAL=6,e.DIRECTION_VERTICAL=24,e.DIRECTION_NONE=1,e.DIRECTION_DOWN=16,e.INPUT_START=1,e.INPUT_MOVE=2,e.INPUT_END=4,e.INPUT_CANCEL=8,e.STATE_POSSIBLE=1,e.STATE_BEGAN=2,e.STATE_CHANGED=4,e.STATE_ENDED=8,e.STATE_RECOGNIZED=8,e.STATE_CANCELLED=16,e.STATE_FAILED=32,e.Manager=Ys,e.Input=vs,e.TouchAction=ts,e.TouchInput=Os,e.MouseInput=Ds,e.PointerEventInput=ws,e.TouchMouseInput=Ns,e.SingleTouchInput=Ws,e.Recognizer=As,e.AttrRecognizer=Vs,e.Tap=Us,e.Pan=qs,e.Swipe=$s,e.Pinch=Zs,e.Rotate=Qs,e.Press=Xs,e.on=hs,e.off=fs,e.each=Ko,e.merge=ea,e.extend=Js,e.bindFn=na,e.assign=Ro,e.inherit=ta,e.bindFn=na,e.prefixed=Wo,e.toArray=ks,e.inArray=ms,e.uniqueArray=xs,e.splitStr=cs,e.boolOrFn=Jo,e.hasParent=ns,e.addEventListeners=hs,e.removeEventListeners=fs,e.defaults=zs,e}(),ra=Hr((function(e){if("undefined"!=typeof window){var t=window.Hammer||ia;e.exports=t}else e.exports=function(){return function(){var e=function(){};return{on:e,off:e,destroy:e,emit:e,get:function(){return{set:e}}}}()}})),oa=Object.freeze({default:ra,__moduleExports:ra});function sa(e){this.active=!1,this.dom={container:e},this.dom.overlay=document.createElement("div"),this.dom.overlay.className="vis-overlay",this.dom.container.appendChild(this.dom.overlay),this.hammer=ra(this.dom.overlay),this.hammer.on("tap",this._onTapOverlay.bind(this));var t=this;["tap","doubletap","press","pinch","pan","panstart","panmove","panend"].forEach((function(e){t.hammer.on(e,(function(e){e.stopPropagation()}))})),document&&document.body&&(this.onClick=function(n){(function(e,t){for(;e;){if(e===t)return!0;e=e.parentNode}return!1})(n.target,e)||t.deactivate()},document.body.addEventListener("click",this.onClick)),void 0!==this.keycharm&&this.keycharm.destroy(),this.keycharm=Po(),this.escListener=this.deactivate.bind(this)}!function(e){e&&e.default}(Mo),Vr(sa.prototype),sa.current=null,sa.prototype.destroy=function(){this.deactivate(),this.dom.overlay.parentNode.removeChild(this.dom.overlay),this.onClick&&document.body.removeEventListener("click",this.onClick),void 0!==this.keycharm&&this.keycharm.destroy(),this.keycharm=null,this.hammer.destroy(),this.hammer=null},sa.prototype.activate=function(){sa.current&&sa.current.deactivate(),sa.current=this,this.active=!0,this.dom.overlay.style.display="none",Xi.addClassName(this.dom.container,"vis-active"),this.emit("change"),this.emit("activate"),this.keycharm.bind("esc",this.escListener)},sa.prototype.deactivate=function(){this.active=!1,this.dom.overlay.style.display="",Xi.removeClassName(this.dom.container,"vis-active"),this.keycharm.unbind("esc",this.escListener),this.emit("change"),this.emit("deactivate")},sa.prototype._onTapOverlay=function(e){this.activate(),e.stopPropagation()};var aa=sa,la=Hr((function(e,t){t.en={edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Node",addEdge:"Add Edge",editNode:"Edit Node",editEdge:"Edit Edge",addDescription:"Click in an empty space to place a new node.",edgeDescription:"Click on a node and drag the edge to another node to connect them.",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."},t.en_EN=t.en,t.en_US=t.en,t.de={edit:"Editieren",del:"Lösche Auswahl",back:"Zurück",addNode:"Knoten hinzufügen",addEdge:"Kante hinzufügen",editNode:"Knoten editieren",editEdge:"Kante editieren",addDescription:"Klicke auf eine freie Stelle, um einen neuen Knoten zu plazieren.",edgeDescription:"Klicke auf einen Knoten und ziehe die Kante zu einem anderen Knoten, um diese zu verbinden.",editEdgeDescription:"Klicke auf die Verbindungspunkte und ziehe diese auf einen Knoten, um sie zu verbinden.",createEdgeError:"Es ist nicht möglich, Kanten mit Clustern zu verbinden.",deleteClusterError:"Cluster können nicht gelöscht werden.",editClusterError:"Cluster können nicht editiert werden."},t.de_DE=t.de,t.es={edit:"Editar",del:"Eliminar selección",back:"Atrás",addNode:"Añadir nodo",addEdge:"Añadir arista",editNode:"Editar nodo",editEdge:"Editar arista",addDescription:"Haga clic en un lugar vacío para colocar un nuevo nodo.",edgeDescription:"Haga clic en un nodo y arrastre la arista hacia otro nodo para conectarlos.",editEdgeDescription:"Haga clic en un punto de control y arrastrelo a un nodo para conectarlo.",createEdgeError:"No se puede conectar una arista a un grupo.",deleteClusterError:"No es posible eliminar grupos.",editClusterError:"No es posible editar grupos."},t.es_ES=t.es,t.it={edit:"Modifica",del:"Cancella la selezione",back:"Indietro",addNode:"Aggiungi un nodo",addEdge:"Aggiungi un vertice",editNode:"Modifica il nodo",editEdge:"Modifica il vertice",addDescription:"Clicca per aggiungere un nuovo nodo",edgeDescription:"Clicca su un nodo e trascinalo ad un altro nodo per connetterli.",editEdgeDescription:"Clicca sui Punti di controllo e trascinali ad un nodo per connetterli.",createEdgeError:"Non si possono collegare vertici ad un cluster",deleteClusterError:"I cluster non possono essere cancellati",editClusterError:"I clusters non possono essere modificati."},t.it_IT=t.it,t.nl={edit:"Wijzigen",del:"Selectie verwijderen",back:"Terug",addNode:"Node toevoegen",addEdge:"Link toevoegen",editNode:"Node wijzigen",editEdge:"Link wijzigen",addDescription:"Klik op een leeg gebied om een nieuwe node te maken.",edgeDescription:"Klik op een node en sleep de link naar een andere node om ze te verbinden.",editEdgeDescription:"Klik op de verbindingspunten en sleep ze naar een node om daarmee te verbinden.",createEdgeError:"Kan geen link maken naar een cluster.",deleteClusterError:"Clusters kunnen niet worden verwijderd.",editClusterError:"Clusters kunnen niet worden aangepast."},t.nl_NL=t.nl,t.nl_BE=t.nl,t["pt-br"]={edit:"Editar",del:"Remover selecionado",back:"Voltar",addNode:"Adicionar nó",addEdge:"Adicionar aresta",editNode:"Editar nó",editEdge:"Editar aresta",addDescription:"Clique em um espaço em branco para adicionar um novo nó",edgeDescription:"Clique em um nó e arraste a aresta até outro nó para conectá-los",editEdgeDescription:"Clique nos pontos de controle e os arraste para um nó para conectá-los",createEdgeError:"Não foi possível linkar arestas a um cluster.",deleteClusterError:"Clusters não puderam ser removidos.",editClusterError:"Clusters não puderam ser editados."},t["pt-BR"]=t["pt-br"],t.pt_BR=t["pt-br"],t.pt_br=t["pt-br"],t.ru={edit:"Редактировать",del:"Удалить выбранное",back:"Назад",addNode:"Добавить узел",addEdge:"Добавить ребро",editNode:"Редактировать узел",editEdge:"Редактировать ребро",addDescription:"Кликните в свободное место, чтобы добавить новый узел.",edgeDescription:"Кликните на узел и протяните ребро к другому узлу, чтобы соединить их.",editEdgeDescription:"Кликните на контрольные точки и перетащите их в узел, чтобы подключиться к нему.",createEdgeError:"Невозможно соединить ребра в кластер.",deleteClusterError:"Кластеры не могут быть удалены",editClusterError:"Кластеры недоступны для редактирования."},t.ru_RU=t.ru,t.cn={edit:"编辑",del:"删除选定",back:"返回",addNode:"添加节点",addEdge:"添加连接线",editNode:"编辑节点",editEdge:"编辑连接线",addDescription:"单击空白处放置新节点。",edgeDescription:"单击某个节点并将该连接线拖动到另一个节点以连接它们。",editEdgeDescription:"单击控制节点并将它们拖到节点上连接。",createEdgeError:"无法将连接线连接到群集。",deleteClusterError:"无法删除群集。",editClusterError:"无法编辑群集。"},t.zh_CN=t.cn,t.uk={edit:"Редагувати",del:"Видалити обране",back:"Назад",addNode:"Додати вузол",addEdge:"Додати край",editNode:"Редагувати вузол",editEdge:"Редагувати край",addDescription:"Kлікніть на вільне місце, щоб додати новий вузол.",edgeDescription:"Клікніть на вузол і перетягніть край до іншого вузла, щоб їх з'єднати.",editEdgeDescription:"Клікніть на контрольні точки і перетягніть їх у вузол, щоб підключитися до нього.",createEdgeError:"Не можливо об'єднати краї в групу.",deleteClusterError:"Групи не можуть бути видалені.",editClusterError:"Групи недоступні для редагування."},t.uk_UA=t.uk,t.fr={edit:"Editer",del:"Effacer la selection",back:"Retour",addNode:"Ajouter un noeud",addEdge:"Ajouter un lien",editNode:"Editer le noeud",editEdge:"Editer le lien",addDescription:"Cliquez dans un endroit vide pour placer un noeud.",edgeDescription:"Cliquez sur un noeud et glissez le lien vers un autre noeud pour les connecter.",editEdgeDescription:"Cliquez sur les points de contrôle et glissez-les pour connecter un noeud.",createEdgeError:"Impossible de créer un lien vers un cluster.",deleteClusterError:"Les clusters ne peuvent pas être éffacés.",editClusterError:"Les clusters ne peuvent pas être édites."},t.fr_FR=t.fr,t.cs={edit:"Upravit",del:"Smazat výběr",back:"Zpět",addNode:"Přidat vrchol",addEdge:"Přidat hranu",editNode:"Upravit vrchol",editEdge:"Upravit hranu",addDescription:"Kluknutím do prázdného prostoru můžete přidat nový vrchol.",edgeDescription:"Přetažením z jednoho vrcholu do druhého můžete spojit tyto vrcholy novou hranou.",editEdgeDescription:"Přetažením kontrolního vrcholu hrany ji můžete připojit k jinému vrcholu.",createEdgeError:"Nelze připojit hranu ke shluku.",deleteClusterError:"Nelze mazat shluky.",editClusterError:"Nelze upravovat shluky."},t.cs_CZ=t.cs}));var ua=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};function da(e,t){for(var n,i=0;i<t.length;i++)(n=t[i]).enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}var ca=function(e,t,n){return t&&da(e.prototype,t),n&&da(e,n),e},ha=function(){var e=Math.floor;function t(){ua(this,t),this.NUM_ITERATIONS=4,this.image=new Image,this.canvas=document.createElement("canvas")}return ca(t,[{key:"init",value:function(){if(!this.initialized()){this.src=this.image.src;var t=this.image.width,n=this.image.height;this.width=t,this.height=n;var i=e(n/2),r=e(n/4),o=e(n/8),s=e(n/16),a=e(t/2),l=e(t/4),u=e(t/8),d=e(t/16);this.canvas.width=3*l,this.canvas.height=i,this.coordinates=[[0,0,a,i],[a,0,l,r],[a,r,u,o],[5*u,r,d,s]],this._fillMipMap()}}},{key:"initialized",value:function(){return void 0!==this.coordinates}},{key:"_fillMipMap",value:function(){var e=this.canvas.getContext("2d"),t=this.coordinates[0];e.drawImage(this.image,t[0],t[1],t[2],t[3]);for(var n=1;n<this.NUM_ITERATIONS;n++){var i=this.coordinates[n-1],r=this.coordinates[n];e.drawImage(this.canvas,i[0],i[1],i[2],i[3],r[0],r[1],r[2],r[3])}}},{key:"drawImageAtPosition",value:function(e,t,n,i,r,o){if(this.initialized())if(2<t){t*=.5;for(var s=0;2<t&&s<this.NUM_ITERATIONS;)t*=.5,s+=1;s>=this.NUM_ITERATIONS&&(s=this.NUM_ITERATIONS-1);var a=this.coordinates[s];e.drawImage(this.canvas,a[0],a[1],a[2],a[3],n,i,r,o)}else e.drawImage(this.image,n,i,r,o)}}]),t}(),fa=function(){function e(t){ua(this,e),this.images={},this.imageBroken={},this.callback=t}return ca(e,[{key:"_tryloadBrokenUrl",value:function(e,t,n){return void 0===e||void 0===n?void 0:void 0===t?void console.warn("No broken url image defined"):(n.image.onerror=function(){console.error("Could not load brokenImage:",t)},void(n.image.src=t))}},{key:"_redrawWithImage",value:function(e){this.callback&&this.callback(e)}},{key:"load",value:function(e,t){var n=this,i=this.images[e];if(i)return i;var r=new ha;return this.images[e]=r,r.image.onload=function(){n._fixImageCoordinates(r.image),r.init(),n._redrawWithImage(r)},r.image.onerror=function(){console.error("Could not load image:",e),n._tryloadBrokenUrl(e,t,r)},r.image.src=e,r}},{key:"_fixImageCoordinates",value:function(e){0===e.width&&(document.body.appendChild(e),e.width=e.offsetWidth,e.height=e.offsetHeight,document.body.removeChild(e))}}]),e}(),pa=function(){function e(){ua(this,e),this.clear(),this.defaultIndex=0,this.groupsArray=[],this.groupIndex=0,this.defaultGroups=[{border:"#2B7CE9",background:"#97C2FC",highlight:{border:"#2B7CE9",background:"#D2E5FF"},hover:{border:"#2B7CE9",background:"#D2E5FF"}},{border:"#FFA500",background:"#FFFF00",highlight:{border:"#FFA500",background:"#FFFFA3"},hover:{border:"#FFA500",background:"#FFFFA3"}},{border:"#FA0A10",background:"#FB7E81",highlight:{border:"#FA0A10",background:"#FFAFB1"},hover:{border:"#FA0A10",background:"#FFAFB1"}},{border:"#41A906",background:"#7BE141",highlight:{border:"#41A906",background:"#A1EC76"},hover:{border:"#41A906",background:"#A1EC76"}},{border:"#E129F0",background:"#EB7DF4",highlight:{border:"#E129F0",background:"#F0B3F5"},hover:{border:"#E129F0",background:"#F0B3F5"}},{border:"#7C29F0",background:"#AD85E4",highlight:{border:"#7C29F0",background:"#D3BDF0"},hover:{border:"#7C29F0",background:"#D3BDF0"}},{border:"#C37F00",background:"#FFA807",highlight:{border:"#C37F00",background:"#FFCA66"},hover:{border:"#C37F00",background:"#FFCA66"}},{border:"#4220FB",background:"#6E6EFD",highlight:{border:"#4220FB",background:"#9B9BFD"},hover:{border:"#4220FB",background:"#9B9BFD"}},{border:"#FD5A77",background:"#FFC0CB",highlight:{border:"#FD5A77",background:"#FFD1D9"},hover:{border:"#FD5A77",background:"#FFD1D9"}},{border:"#4AD63A",background:"#C2FABC",highlight:{border:"#4AD63A",background:"#E6FFE3"},hover:{border:"#4AD63A",background:"#E6FFE3"}},{border:"#990000",background:"#EE0000",highlight:{border:"#BB0000",background:"#FF3333"},hover:{border:"#BB0000",background:"#FF3333"}},{border:"#FF6000",background:"#FF6000",highlight:{border:"#FF6000",background:"#FF6000"},hover:{border:"#FF6000",background:"#FF6000"}},{border:"#97C2FC",background:"#2B7CE9",highlight:{border:"#D2E5FF",background:"#2B7CE9"},hover:{border:"#D2E5FF",background:"#2B7CE9"}},{border:"#399605",background:"#255C03",highlight:{border:"#399605",background:"#255C03"},hover:{border:"#399605",background:"#255C03"}},{border:"#B70054",background:"#FF007E",highlight:{border:"#B70054",background:"#FF007E"},hover:{border:"#B70054",background:"#FF007E"}},{border:"#AD85E4",background:"#7C29F0",highlight:{border:"#D3BDF0",background:"#7C29F0"},hover:{border:"#D3BDF0",background:"#7C29F0"}},{border:"#4557FA",background:"#000EA1",highlight:{border:"#6E6EFD",background:"#000EA1"},hover:{border:"#6E6EFD",background:"#000EA1"}},{border:"#FFC0CB",background:"#FD5A77",highlight:{border:"#FFD1D9",background:"#FD5A77"},hover:{border:"#FFD1D9",background:"#FD5A77"}},{border:"#C2FABC",background:"#74D66A",highlight:{border:"#E6FFE3",background:"#74D66A"},hover:{border:"#E6FFE3",background:"#74D66A"}},{border:"#EE0000",background:"#990000",highlight:{border:"#FF3333",background:"#BB0000"},hover:{border:"#FF3333",background:"#BB0000"}}],this.options={},this.defaultOptions={useDefaultGroups:!0},Xi.extend(this.options,this.defaultOptions)}return ca(e,[{key:"setOptions",value:function(e){var t=["useDefaultGroups"];if(void 0!==e)for(var n in e)if(e.hasOwnProperty(n)&&-1===t.indexOf(n)){var i=e[n];this.add(n,i)}}},{key:"clear",value:function(){this.groups={},this.groupsArray=[]}},{key:"get",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],n=this.groups[e];if(void 0===n&&t)if(!1===this.options.useDefaultGroups&&0<this.groupsArray.length){var i=this.groupIndex%this.groupsArray.length;this.groupIndex++,(n={}).color=this.groups[this.groupsArray[i]],this.groups[e]=n}else{var r=this.defaultIndex%this.defaultGroups.length;this.defaultIndex++,(n={}).color=this.defaultGroups[r],this.groups[e]=n}return n}},{key:"add",value:function(e,t){return this.groups[e]=t,this.groupsArray.push(e),t}}]),e}();var va=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e};var ma=function(e){if(Array.isArray(e))return e};var ya=function(e,t){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{i||null==a.return||a.return()}finally{if(r)throw o}}return n};var ga=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")};var ba=function(e,t){return ma(e)||ya(e,t)||ga()},_a=Hr((function(e){function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(i){return e.exports=n="function"==typeof Symbol&&"symbol"===t(Symbol.iterator)?function(e){return t(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":t(e)},n(i)}e.exports=n})),wa=function(){var e=Math.cos,t=Math.sin;function n(){ua(this,n)}return ca(n,null,[{key:"choosify",value:function(e,t){var n=["node","edge","label"],i=!0,r=Xi.topMost(t,"chosen");if("boolean"==typeof r)i=r;else if("object"===_a(r)){if(-1===n.indexOf(e))throw new Error("choosify: subOption '"+e+"' should be one of '"+n.join("', '")+"'");var o=Xi.topMost(t,["chosen",e]);("boolean"==typeof o||"function"==typeof o)&&(i=o)}return i}},{key:"pointInRect",value:function(n,i,r){if(0>=n.width||0>=n.height)return!1;if(void 0!==r){var o={x:i.x-r.x,y:i.y-r.y};if(0!==r.angle){var s=-r.angle;i={x:e(s)*o.x-t(s)*o.y,y:t(s)*o.x+e(s)*o.y}}else i=o}var a=n.x+n.width,l=n.y+n.width;return n.left<i.x&&a>i.x&&n.top<i.y&&l>i.y}},{key:"isValidLabel",value:function(e){return"string"==typeof e&&""!==e}}]),n}(),ka=function(){function e(t){ua(this,e),this.measureText=t,this.current=0,this.width=0,this.height=0,this.lines=[]}return ca(e,[{key:"_add",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"normal";void 0===this.lines[e]&&(this.lines[e]={width:0,height:0,blocks:[]});var i=t;(void 0===t||""===t)&&(i=" ");var r=this.measureText(i,n),o=Object.assign({},r.values);o.text=t,o.width=r.width,o.mod=n,(void 0===t||""===t)&&(o.width=0),this.lines[e].blocks.push(o),this.lines[e].width+=o.width}},{key:"curWidth",value:function(){var e=this.lines[this.current];return void 0===e?0:e.width}},{key:"append",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"normal";this._add(this.current,e,t)}},{key:"newLine",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"normal";this._add(this.current,e,t),this.current++}},{key:"determineLineHeights",value:function(){for(var e=0;e<this.lines.length;e++){var t=this.lines[e],n=0;if(void 0!==t.blocks)for(var i,r=0;r<t.blocks.length;r++)n<(i=t.blocks[r]).height&&(n=i.height);t.height=n}}},{key:"determineLabelSize",value:function(){for(var e,t=0,n=0,i=0;i<this.lines.length;i++)(e=this.lines[i]).width>t&&(t=e.width),n+=e.height;this.width=t,this.height=n}},{key:"removeEmptyBlocks",value:function(){for(var e,t=[],n=0;n<this.lines.length;n++)if(0!==(e=this.lines[n]).blocks.length){if(n==this.lines.length-1&&0===e.width)continue;var i={};Object.assign(i,e),i.blocks=[];for(var r,o=void 0,s=[],a=0;a<e.blocks.length;a++)0===(r=e.blocks[a]).width?void 0===o&&(o=r):s.push(r);0===s.length&&void 0!==o&&s.push(o),i.blocks=s,t.push(i)}return t}},{key:"finalize",value:function(){this.determineLineHeights(),this.determineLabelSize();var e=this.removeEmptyBlocks();return{width:this.width,height:this.height,lines:e}}}]),e}(),xa={"<b>":/<b>/,"<i>":/<i>/,"<code>":/<code>/,"</b>":/<\/b>/,"</i>":/<\/i>/,"</code>":/<\/code>/,"*":/\*/,_:/\_/,"`":/`/,afterBold:/[^\*]/,afterItal:/[^_]/,afterMono:/[^`]/},Sa=function(){function e(t){ua(this,e),this.text=t,this.bold=!1,this.ital=!1,this.mono=!1,this.spacing=!1,this.position=0,this.buffer="",this.modStack=[],this.blocks=[]}return ca(e,[{key:"mod",value:function(){return 0===this.modStack.length?"normal":this.modStack[0]}},{key:"modName",value:function(){return 0===this.modStack.length?"normal":"mono"===this.modStack[0]?"mono":this.bold&&this.ital?"boldital":this.bold?"bold":this.ital?"ital":void 0}},{key:"emitBlock",value:function(){this.spacing&&(this.add(" "),this.spacing=!1),0<this.buffer.length&&(this.blocks.push({text:this.buffer,mod:this.modName()}),this.buffer="")}},{key:"add",value:function(e){" "===e&&(this.spacing=!0),this.spacing&&(this.buffer+=" ",this.spacing=!1)," "!=e&&(this.buffer+=e)}},{key:"parseWS",value:function(e){return!!/[ \t]/.test(e)&&(this.mono?this.add(e):this.spacing=!0,!0)}},{key:"setTag",value:function(e){this.emitBlock(),this[e]=!0,this.modStack.unshift(e)}},{key:"unsetTag",value:function(e){this.emitBlock(),this[e]=!1,this.modStack.shift()}},{key:"parseStartTag",value:function(e,t){return!(this.mono||this[e]||!this.match(t)||(this.setTag(e),0))}},{key:"match",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],n=this.prepareRegExp(e),i=ba(n,2),r=i[0],o=i[1],s=r.test(this.text.substr(this.position,o));return s&&t&&(this.position+=o-1),s}},{key:"parseEndTag",value:function(e,t,n){var i=this.mod()===e;return!(!(i="mono"===e?i&&this.mono:i&&!this.mono)||!this.match(t)||(void 0===n?this.unsetTag(e):(this.position===this.text.length-1||this.match(n,!1))&&this.unsetTag(e),0))}},{key:"replace",value:function(e,t){return!!this.match(e)&&(this.add(t),this.position+=length-1,!0)}},{key:"prepareRegExp",value:function(e){var t,n;if(e instanceof RegExp)n=e,t=1;else{var i=xa[e];n=void 0===i?new RegExp(e):i,t=e.length}return[n,t]}}]),e}(),Oa=function(){function e(t,n,i,r){var o=this;ua(this,e),this.ctx=t,this.parent=n,this.selected=i,this.hover=r,this.lines=new ka((function(e,n){if(void 0===e)return 0;var s=o.parent.getFormattingValues(t,i,r,n),a=0;""!==e&&(a=o.ctx.measureText(e).width);return{width:a,values:s}}))}return ca(e,[{key:"process",value:function(e){if(!wa.isValidLabel(e))return this.lines.finalize();var t=this.parent.fontOptions,n=((e=(e=e.replace(/\r\n/g,"\n")).replace(/\r/g,"\n"))+"").split("\n"),i=n.length;if(t.multi){for(var r,o=0;o<i;o++)if(void 0!==(r=this.splitBlocks(n[o],t.multi))){if(0===r.length){this.lines.newLine("");continue}if(0<t.maxWdt)for(var s=0;s<r.length;s++){var a=r[s].mod,l=r[s].text;this.splitStringIntoLines(l,a,!0)}else for(var u=0;u<r.length;u++){var d=r[u].mod,c=r[u].text;this.lines.append(c,d)}this.lines.newLine()}}else if(0<t.maxWdt)for(var h=0;h<i;h++)this.splitStringIntoLines(n[h]);else for(var f=0;f<i;f++)this.lines.newLine(n[f]);return this.lines.finalize()}},{key:"decodeMarkupSystem",value:function(e){var t="none";return"markdown"===e||"md"===e?t="markdown":(!0===e||"html"===e)&&(t="html"),t}},{key:"splitHtmlBlocks",value:function(e){for(var t=new Sa(e),n=function(e){return!!/&/.test(e)&&(t.replace(t.text,"&lt;","<")||t.replace(t.text,"&amp;","&")||t.add("&"),!0)};t.position<t.text.length;){var i=t.text.charAt(t.position);t.parseWS(i)||/</.test(i)&&(t.parseStartTag("bold","<b>")||t.parseStartTag("ital","<i>")||t.parseStartTag("mono","<code>")||t.parseEndTag("bold","</b>")||t.parseEndTag("ital","</i>")||t.parseEndTag("mono","</code>"))||n(i)||t.add(i),t.position++}return t.emitBlock(),t.blocks}},{key:"splitMarkdownBlocks",value:function(e){for(var t=this,n=new Sa(e),i=!0,r=function(e){return!!/\\/.test(e)&&(n.position<t.text.length+1&&(n.position++,e=t.text.charAt(n.position),/ \t/.test(e)?n.spacing=!0:(n.add(e),i=!1)),!0)};n.position<n.text.length;){var o=n.text.charAt(n.position);n.parseWS(o)||r(o)||(i||n.spacing)&&(n.parseStartTag("bold","*")||n.parseStartTag("ital","_")||n.parseStartTag("mono","`"))||n.parseEndTag("bold","*","afterBold")||n.parseEndTag("ital","_","afterItal")||n.parseEndTag("mono","`","afterMono")||(n.add(o),i=!1),n.position++}return n.emitBlock(),n.blocks}},{key:"splitBlocks",value:function(e,t){var n=this.decodeMarkupSystem(t);return"none"===n?[{text:e,mod:"normal"}]:"markdown"===n?this.splitMarkdownBlocks(e):"html"===n?this.splitHtmlBlocks(e):void 0}},{key:"overMaxWidth",value:function(e){var t=this.ctx.measureText(e).width;return this.lines.curWidth()+t>this.parent.fontOptions.maxWdt}},{key:"getLongestFit",value:function(e){for(var t="",n=0;n<e.length;){var i=t+(""===t?"":" ")+e[n];if(this.overMaxWidth(i))break;t=i,n++}return n}},{key:"getLongestFitWord",value:function(e){for(var t=0;t<e.length&&!this.overMaxWidth(e.slice(0,t));)t++;return t}},{key:"splitStringIntoLines",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"normal",n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];this.parent.getFormattingValues(this.ctx,this.selected,this.hover,t);for(var i,r=(e=(e=e.replace(/^( +)/g,"$1\r")).replace(/([^\r][^ ]*)( +)/g,"$1\r$2\r")).split("\r");0<r.length;)if(0===(i=this.getLongestFit(r))){var o=r[0],s=this.getLongestFitWord(o);this.lines.newLine(o.slice(0,s),t),r[0]=o.slice(s)}else{var a=i;" "===r[i-1]?i--:" "===r[a]&&a++;var l=r.slice(0,i).join("");i==r.length&&n?this.lines.append(l,t):this.lines.newLine(l,t),r=r.slice(a)}}}]),e}(),Ea=["bold","ital","boldital","mono"],Ta=function(){var e=Math.max,t=Math.min;function n(e,t){var i=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];ua(this,n),this.body=e,this.pointToSelf=!1,this.baseSize=void 0,this.fontOptions={},this.setOptions(t),this.size={top:0,left:0,width:0,height:0,yLine:0},this.isEdgeLabel=i}return ca(n,[{key:"setOptions",value:function(e){if(this.elementOptions=e,this.initFontOptions(e.font),wa.isValidLabel(e.label)?this.labelDirty=!0:e.label=void 0,void 0!==e.font&&null!==e.font)if("string"==typeof e.font)this.baseSize=this.fontOptions.size;else if("object"===_a(e.font)){var t=e.font.size;void 0!==t&&(this.baseSize=t)}}},{key:"initFontOptions",value:function(e){var t=this;return Xi.forEach(Ea,(function(e){t.fontOptions[e]={}})),n.parseFontString(this.fontOptions,e)?void(this.fontOptions.vadjust=0):void Xi.forEach(e,(function(e,n){null!=e&&"object"!==_a(e)&&(t.fontOptions[n]=e)}))}},{key:"constrain",value:function(e){var t={constrainWidth:!1,maxWdt:-1,minWdt:-1,constrainHeight:!1,minHgt:-1,valign:"middle"},n=Xi.topMost(e,"widthConstraint");if("number"==typeof n)t.maxWdt=+n,t.minWdt=+n;else if("object"===_a(n)){var i=Xi.topMost(e,["widthConstraint","maximum"]);"number"==typeof i&&(t.maxWdt=+i);var r=Xi.topMost(e,["widthConstraint","minimum"]);"number"==typeof r&&(t.minWdt=+r)}var o=Xi.topMost(e,"heightConstraint");if("number"==typeof o)t.minHgt=+o;else if("object"===_a(o)){var s=Xi.topMost(e,["heightConstraint","minimum"]);"number"==typeof s&&(t.minHgt=+s);var a=Xi.topMost(e,["heightConstraint","valign"]);"string"==typeof a&&("top"===a||"bottom"===a)&&(t.valign=a)}return t}},{key:"update",value:function(e,t){this.setOptions(e,!0),this.propagateFonts(t),Xi.deepExtend(this.fontOptions,this.constrain(t)),this.fontOptions.chooser=wa.choosify("label",t)}},{key:"adjustSizes",value:function(e){var t=e?e.right+e.left:0;this.fontOptions.constrainWidth&&(this.fontOptions.maxWdt-=t,this.fontOptions.minWdt-=t);var n=e?e.top+e.bottom:0;this.fontOptions.constrainHeight&&(this.fontOptions.minHgt-=n)}},{key:"addFontOptionsToPile",value:function(e,t){for(var n=0;n<t.length;++n)this.addFontToPile(e,t[n])}},{key:"addFontToPile",value:function(e,t){if(void 0!==t&&void 0!==t.font&&null!==t.font){var n=t.font;e.push(n)}}},{key:"getBasicOptions",value:function(e){for(var t={},i=0;i<e.length;++i){var r=e[i],o={};n.parseFontString(o,r)&&(r=o),Xi.forEach(r,(function(e,n){void 0===e||t.hasOwnProperty(n)||(-1===Ea.indexOf(n)?t[n]=e:t[n]={})}))}return t}},{key:"getFontOption",value:function(e,t,i){for(var r,o,s=0;s<e.length;++s)if((o=e[s]).hasOwnProperty(t)){if(null==(r=o[t]))continue;var a={};if(n.parseFontString(a,r)&&(r=a),r.hasOwnProperty(i))return r[i]}if(this.fontOptions.hasOwnProperty(i))return this.fontOptions[i];throw new Error("Did not find value for multi-font for property: '"+i+"'")}},{key:"getFontOptions",value:function(e,t){for(var n,i={},r=["color","size","face","mod","vadjust"],o=0;o<r.length;++o)i[n=r[o]]=this.getFontOption(e,t,n);return i}},{key:"propagateFonts",value:function(e){var t=this,n=[];this.addFontOptionsToPile(n,e),this.fontOptions=this.getBasicOptions(n);for(var i=function(e){var i=Ea[e],r=t.fontOptions[i],o=t.getFontOptions(n,i);Xi.forEach(o,(function(e,t){r[t]=e})),r.size=+r.size,r.vadjust=+r.vadjust},r=0;r<Ea.length;++r)i(r)}},{key:"draw",value:function(e,t,n,i,r){var o=5<arguments.length&&void 0!==arguments[5]?arguments[5]:"middle";if(void 0!==this.elementOptions.label){var s=this.fontOptions.size*this.body.view.scale;this.elementOptions.label&&s<this.elementOptions.scaling.label.drawThreshold-1||(s>=this.elementOptions.scaling.label.maxVisible&&(s=+this.elementOptions.scaling.label.maxVisible/this.body.view.scale),this.calculateLabelSize(e,i,r,t,n,o),this._drawBackground(e),this._drawText(e,t,this.size.yLine,o,s))}}},{key:"_drawBackground",value:function(e){if(void 0!==this.fontOptions.background&&"none"!==this.fontOptions.background){e.fillStyle=this.fontOptions.background;var t=this.getSize();e.fillRect(t.left,t.top,t.width,t.height)}}},{key:"_drawText",value:function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"middle",r=4<arguments.length?arguments[4]:void 0,o=this._setAlignment(e,t,n,i),s=ba(o,2);t=s[0],n=s[1],e.textAlign="left",t-=this.size.width/2,this.fontOptions.valign&&this.size.height>this.size.labelHeight&&("top"===this.fontOptions.valign&&(n-=(this.size.height-this.size.labelHeight)/2),"bottom"===this.fontOptions.valign&&(n+=(this.size.height-this.size.labelHeight)/2));for(var a,l=0;l<this.lineCount;l++)if((a=this.lines[l])&&a.blocks){var u=0;this.isEdgeLabel||"center"===this.fontOptions.align?u+=(this.size.width-a.width)/2:"right"===this.fontOptions.align&&(u+=this.size.width-a.width);for(var d,c=0;c<a.blocks.length;c++){d=a.blocks[c],e.font=d.font;var h=this._getColor(d.color,r,d.strokeColor),f=ba(h,2),p=f[0],v=f[1];0<d.strokeWidth&&(e.lineWidth=d.strokeWidth,e.strokeStyle=v,e.lineJoin="round"),e.fillStyle=p,0<d.strokeWidth&&e.strokeText(d.text,t+u,n+d.vadjust),e.fillText(d.text,t+u,n+d.vadjust),u+=d.width}n+=a.height}}},{key:"_setAlignment",value:function(e,t,n,i){return this.isEdgeLabel&&"horizontal"!==this.fontOptions.align&&!1===this.pointToSelf?(t=0,n=0,"top"===this.fontOptions.align?(e.textBaseline="alphabetic",n-=4):"bottom"===this.fontOptions.align?(e.textBaseline="hanging",n+=4):e.textBaseline="middle"):e.textBaseline=i,[t,n]}},{key:"_getColor",value:function(n,i,r){var o=n||"#000000",s=r||"#ffffff";if(i<=this.elementOptions.scaling.label.drawThreshold){var a=e(0,t(1,1-(this.elementOptions.scaling.label.drawThreshold-i)));o=Xi.overrideOpacity(o,a),s=Xi.overrideOpacity(s,a)}return[o,s]}},{key:"getTextSize",value:function(e){var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];return this._processLabel(e,t,n),{width:this.size.width,height:this.size.height,lineCount:this.lineCount}}},{key:"getSize",value:function(){var e=this.size.left,t=this.size.top-1;if(this.isEdgeLabel){var n=.5*-this.size.width;switch(this.fontOptions.align){case"middle":e=n,t=.5*-this.size.height;break;case"top":e=n,t=-(this.size.height+2);break;case"bottom":e=n,t=2}}return{left:e,top:t,width:this.size.width,height:this.size.height}}},{key:"calculateLabelSize",value:function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0,r=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=5<arguments.length&&void 0!==arguments[5]?arguments[5]:"middle";this._processLabel(e,t,n),this.size.left=i-.5*this.size.width,this.size.top=r-.5*this.size.height,this.size.yLine=r+.5*(1-this.lineCount)*this.fontOptions.size,"hanging"===o&&(this.size.top+=.5*this.fontOptions.size,this.size.top+=4,this.size.yLine+=4)}},{key:"getFormattingValues",value:function(e,t,n,i){var r=function(e,t,n){return"normal"===t?"mod"===n?"":e[n]:void 0===e[t][n]?e[n]:e[t][n]},o={color:r(this.fontOptions,i,"color"),size:r(this.fontOptions,i,"size"),face:r(this.fontOptions,i,"face"),mod:r(this.fontOptions,i,"mod"),vadjust:r(this.fontOptions,i,"vadjust"),strokeWidth:this.fontOptions.strokeWidth,strokeColor:this.fontOptions.strokeColor};(t||n)&&("normal"===i&&!0===this.fontOptions.chooser&&this.elementOptions.labelHighlightBold?o.mod="bold":"function"==typeof this.fontOptions.chooser&&this.fontOptions.chooser(o,this.elementOptions.id,t,n));var s="";return void 0!==o.mod&&""!==o.mod&&(s+=o.mod+" "),s+=o.size+"px "+o.face,e.font=s.replace(/"/g,""),o.font=e.font,o.height=o.size,o}},{key:"differentState",value:function(e,t){return e!==this.selectedState||t!==this.hoverState}},{key:"_processLabelText",value:function(e,t,n,i){return new Oa(e,this,t,n).process(i)}},{key:"_processLabel",value:function(e,t,n){if(!1!==this.labelDirty||this.differentState(t,n)){var i=this._processLabelText(e,t,n,this.elementOptions.label);0<this.fontOptions.minWdt&&i.width<this.fontOptions.minWdt&&(i.width=this.fontOptions.minWdt),this.size.labelHeight=i.height,0<this.fontOptions.minHgt&&i.height<this.fontOptions.minHgt&&(i.height=this.fontOptions.minHgt),this.lines=i.lines,this.lineCount=i.lines.length,this.size.width=i.width,this.size.height=i.height,this.selectedState=t,this.hoverState=n,this.labelDirty=!1}}},{key:"visible",value:function(){return 0!==this.size.width&&0!==this.size.height&&void 0!==this.elementOptions.label&&!(this.fontOptions.size*this.body.view.scale<this.elementOptions.scaling.label.drawThreshold-1)}}],[{key:"parseFontString",value:function(e,t){if(!t||"string"!=typeof t)return!1;var n=t.split(" ");return e.size=+n[0].replace("px",""),e.face=n[1],e.color=n[2],!0}}]),n}();var Da=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e};var Ca=function(e,t){return!t||"object"!==_a(t)&&"function"!=typeof t?Da(e):t},Ma=Hr((function(e){function t(n){return e.exports=t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},t(n)}e.exports=t})),Pa=Hr((function(e){function t(n,i){return e.exports=t=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},t(n,i)}e.exports=t}));var Na,Fa=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Pa(e,t)},Ia=function(){var e=Math.cos,t=Math.sin,n=Math.abs,i=Math.min;function r(e,t,n){ua(this,r),this.body=t,this.labelModule=n,this.setOptions(e),this.top=void 0,this.left=void 0,this.height=void 0,this.width=void 0,this.radius=void 0,this.margin=void 0,this.refreshNeeded=!0,this.boundingBox={top:0,left:0,right:0,bottom:0}}return ca(r,[{key:"setOptions",value:function(e){this.options=e}},{key:"_setMargins",value:function(e){this.margin={},this.options.margin&&("object"==_a(this.options.margin)?(this.margin.top=this.options.margin.top,this.margin.right=this.options.margin.right,this.margin.bottom=this.options.margin.bottom,this.margin.left=this.options.margin.left):(this.margin.top=this.options.margin,this.margin.right=this.options.margin,this.margin.bottom=this.options.margin,this.margin.left=this.options.margin)),e.adjustSizes(this.margin)}},{key:"_distanceToBorder",value:function(r,o){var s=this.options.borderWidth;return this.resize(r),i(n(this.width/2/e(o)),n(this.height/2/t(o)))+s}},{key:"enableShadow",value:function(e,t){t.shadow&&(e.shadowColor=t.shadowColor,e.shadowBlur=t.shadowSize,e.shadowOffsetX=t.shadowX,e.shadowOffsetY=t.shadowY)}},{key:"disableShadow",value:function(e,t){t.shadow&&(e.shadowColor="rgba(0,0,0,0)",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0)}},{key:"enableBorderDashes",value:function(e,t){if(!1!==t.borderDashes)if(void 0!==e.setLineDash){var n=t.borderDashes;!0===n&&(n=[5,15]),e.setLineDash(n)}else console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."),this.options.shapeProperties.borderDashes=!1,t.borderDashes=!1}},{key:"disableBorderDashes",value:function(e,t){!1!==t.borderDashes&&(void 0===e.setLineDash?(console.warn("setLineDash is not supported in this browser. The dashed borders cannot be used."),this.options.shapeProperties.borderDashes=!1,t.borderDashes=!1):e.setLineDash([0]))}},{key:"needsRefresh",value:function(e,t){return!0===this.refreshNeeded?(this.refreshNeeded=!1,!0):void 0===this.width||this.labelModule.differentState(e,t)}},{key:"initContextForDraw",value:function(e,t){var n=t.borderWidth/this.body.view.scale;e.lineWidth=i(this.width,n),e.strokeStyle=t.borderColor,e.fillStyle=t.color}},{key:"performStroke",value:function(e,t){var n=t.borderWidth/this.body.view.scale;e.save(),0<n&&(this.enableBorderDashes(e,t),e.stroke(),this.disableBorderDashes(e,t)),e.restore()}},{key:"performFill",value:function(e,t){this.enableShadow(e,t),e.fill(),this.disableShadow(e,t),this.performStroke(e,t)}},{key:"_addBoundingBoxMargin",value:function(e){this.boundingBox.left-=e,this.boundingBox.top-=e,this.boundingBox.bottom+=e,this.boundingBox.right+=e}},{key:"_updateBoundingBox",value:function(e,t,n,i,r){void 0!==n&&this.resize(n,i,r),this.left=e-this.width/2,this.top=t-this.height/2,this.boundingBox.left=this.left,this.boundingBox.top=this.top,this.boundingBox.bottom=this.top+this.height,this.boundingBox.right=this.left+this.width}},{key:"updateBoundingBox",value:function(e,t,n,i,r){this._updateBoundingBox(e,t,n,i,r)}},{key:"getDimensionsFromLabel",value:function(e,t,n){this.textSize=this.labelModule.getTextSize(e,t,n);var i=this.textSize.width,r=this.textSize.height;return 0===i&&(i=14,r=14),{width:i,height:r}}}]),r}(),ja=function(e){var t=Math.cos,n=Math.sin,i=Math.abs,r=Math.min;function o(e,t,n){var i;return ua(this,o),(i=Ca(this,Ma(o).call(this,e,t,n)))._setMargins(n),i}return Fa(o,e),ca(o,[{key:"resize",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n);this.width=i.width+this.margin.right+this.margin.left,this.height=i.height+this.margin.top+this.margin.bottom,this.radius=this.width/2}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this.initContextForDraw(e,o),e.roundRect(this.left,this.top,this.width,this.height,o.borderRadius),this.performFill(e,o),this.updateBoundingBox(t,n,e,i,r),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,i,r)}},{key:"updateBoundingBox",value:function(e,t,n,i,r){this._updateBoundingBox(e,t,n,i,r);var o=this.options.shapeProperties.borderRadius;this._addBoundingBoxMargin(o)}},{key:"distanceToBorder",value:function(e,o){this.resize(e);var s=this.options.borderWidth;return r(i(this.width/2/t(o)),i(this.height/2/n(o)))+s}}]),o}(Ia),Ra=function(e){function t(e,n,i){var r;return ua(this,t),(r=Ca(this,Ma(t).call(this,e,n,i))).labelOffset=0,r.selected=!1,r}return Fa(t,e),ca(t,[{key:"setOptions",value:function(e,t,n){this.options=e,void 0===t&&void 0===n||this.setImages(t,n)}},{key:"setImages",value:function(e,t){t&&this.selected?(this.imageObj=t,this.imageObjAlt=e):(this.imageObj=e,this.imageObjAlt=t)}},{key:"switchImages",value:function(e){var t=e&&!this.selected||!e&&this.selected;if(this.selected=e,void 0!==this.imageObjAlt&&t){var n=this.imageObj;this.imageObj=this.imageObjAlt,this.imageObjAlt=n}}},{key:"_getImagePadding",value:function(){var e={top:0,right:0,bottom:0,left:0};if(this.options.imagePadding){var t=this.options.imagePadding;"object"==_a(t)?(e.top=t.top,e.right=t.right,e.bottom=t.bottom,e.left=t.left):(e.top=t,e.right=t,e.bottom=t,e.left=t)}return e}},{key:"_resizeImage",value:function(){var e,t;if(!1===this.options.shapeProperties.useImageSize){var n=1,i=1;this.imageObj.width&&this.imageObj.height&&(this.imageObj.width>this.imageObj.height?n=this.imageObj.width/this.imageObj.height:i=this.imageObj.height/this.imageObj.width),e=2*this.options.size*n,t=2*this.options.size*i}else{var r=this._getImagePadding();e=this.imageObj.width+r.left+r.right,t=this.imageObj.height+r.top+r.bottom}this.width=e,this.height=t,this.radius=.5*this.width}},{key:"_drawRawCircle",value:function(e,t,n,i){this.initContextForDraw(e,i),e.circle(t,n,i.size),this.performFill(e,i)}},{key:"_drawImageAtPosition",value:function(e,t){if(0!=this.imageObj.width){e.globalAlpha=1,this.enableShadow(e,t);var n=1;!0===this.options.shapeProperties.interpolation&&(n=this.imageObj.width/this.width/this.body.view.scale);var i=this._getImagePadding(),r=this.left+i.left,o=this.top+i.top,s=this.width-i.left-i.right,a=this.height-i.top-i.bottom;this.imageObj.drawImageAtPosition(e,n,r,o,s,a),this.disableShadow(e,t)}}},{key:"_drawImageLabel",value:function(e,t,n,i,r){var o,s=0;if(void 0!==this.height){s=.5*this.height;var a=this.labelModule.getTextSize(e,i,r);1<=a.lineCount&&(s+=a.height/2)}o=n+s,this.options.label&&(this.labelOffset=s),this.labelModule.draw(e,t,o,i,r,"hanging")}}]),t}(Ia),Aa=function(e){var t=Math.max;function n(e,t,i){var r;return ua(this,n),(r=Ca(this,Ma(n).call(this,e,t,i)))._setMargins(i),r}return Fa(n,e),ca(n,[{key:"resize",value:function(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(n,i)){var r=this.getDimensionsFromLabel(e,n,i),o=t(r.width+this.margin.right+this.margin.left,r.height+this.margin.top+this.margin.bottom);this.options.size=o/2,this.width=o,this.height=o,this.radius=this.width/2}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this._drawRawCircle(e,t,n,o),this.updateBoundingBox(t,n),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,n,i,r)}},{key:"updateBoundingBox",value:function(e,t){this.boundingBox.top=t-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=t+this.options.size}},{key:"distanceToBorder",value:function(e){return this.resize(e),.5*this.width}}]),n}(Ra),za=function(e){var t=Math.max,n=Math.min;function i(e,t,n,r,o){var s;return ua(this,i),(s=Ca(this,Ma(i).call(this,e,t,n))).setImages(r,o),s}return Fa(i,e),ca(i,[{key:"resize",value:function(){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover,n=void 0===this.imageObj.src||void 0===this.imageObj.width||void 0===this.imageObj.height;if(n){var i=2*this.options.size;return this.width=i,this.height=i,void(this.radius=.5*this.width)}this.needsRefresh(e,t)&&this._resizeImage()}},{key:"draw",value:function(e,t,n,i,r,o){this.switchImages(i),this.resize(),this.left=t-this.width/2,this.top=n-this.height/2,this._drawRawCircle(e,t,n,o),e.save(),e.clip(),this._drawImageAtPosition(e,o),e.restore(),this._drawImageLabel(e,t,n,i,r),this.updateBoundingBox(t,n)}},{key:"updateBoundingBox",value:function(e,i){this.boundingBox.top=i-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=i+this.options.size,this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=t(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=t(this.boundingBox.bottom,this.boundingBox.bottom+this.labelOffset)}},{key:"distanceToBorder",value:function(e){return this.resize(e),.5*this.width}}]),i}(Ra),La=function(e){function t(e,n,i){var r;return ua(this,t),(r=Ca(this,Ma(t).call(this,e,n,i)))._setMargins(i),r}return Fa(t,e),ca(t,[{key:"resize",value:function(e,t,n){if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n).width+this.margin.right+this.margin.left;this.width=i,this.height=i,this.radius=this.width/2}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this.initContextForDraw(e,o),e.database(t-this.width/2,n-this.height/2,this.width,this.height),this.performFill(e,o),this.updateBoundingBox(t,n,e,i,r),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,i,r)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ia),Ya=function(e){var t=Math.max,n=Math.min;function i(e,t,n){return ua(this,i),Ca(this,Ma(i).call(this,e,t,n))}return Fa(i,e),ca(i,[{key:"resize",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover,i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{size:this.options.size};if(this.needsRefresh(t,n)){this.labelModule.getTextSize(e,t,n);var r=2*i.size;this.width=r,this.height=r,this.radius=.5*this.width}}},{key:"_drawShape",value:function(e,t,n,i,r,o,s,a){if(this.resize(e,o,s,a),this.left=i-this.width/2,this.top=r-this.height/2,this.initContextForDraw(e,a),e[t](i,r,a.size),this.performFill(e,a),void 0!==this.options.icon&&void 0!==this.options.icon.code&&(e.font=(o?"bold ":"")+this.height/2+"px "+(this.options.icon.face||"FontAwesome"),e.fillStyle=this.options.icon.color||"black",e.textAlign="center",e.textBaseline="middle",e.fillText(this.options.icon.code,i,r)),void 0!==this.options.label){this.labelModule.calculateLabelSize(e,o,s,i,r,"hanging");var l=r+.5*this.height+.5*this.labelModule.size.height;this.labelModule.draw(e,i,l,o,s,"hanging")}this.updateBoundingBox(i,r)}},{key:"updateBoundingBox",value:function(e,i){this.boundingBox.top=i-this.options.size,this.boundingBox.left=e-this.options.size,this.boundingBox.right=e+this.options.size,this.boundingBox.bottom=i+this.options.size,void 0!==this.options.label&&0<this.labelModule.size.width&&(this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=t(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=t(this.boundingBox.bottom,this.boundingBox.bottom+this.labelModule.size.height))}}]),i}(Ia),Ba=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"diamond",4,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ya),Wa=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"circle",2,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e){return this.resize(e),this.options.size}}]),t}(Ya),Ha=function(e){var t=Math.cos,n=Math.sin,i=Math.sqrt;function r(e,t,n){return ua(this,r),Ca(this,Ma(r).call(this,e,t,n))}return Fa(r,e),ca(r,[{key:"resize",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover;if(this.needsRefresh(t,n)){var i=this.getDimensionsFromLabel(e,t,n);this.height=2*i.height,this.width=i.width+i.height,this.radius=.5*this.width}}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-.5*this.width,this.top=n-.5*this.height,this.initContextForDraw(e,o),e.ellipse_vis(this.left,this.top,this.width,this.height),this.performFill(e,o),this.updateBoundingBox(t,n,e,i,r),this.labelModule.draw(e,t,n,i,r)}},{key:"distanceToBorder",value:function(e,r){this.resize(e);var o=.5*this.width,s=.5*this.height,a=n(r)*o,l=t(r)*s;return o*s/i(a*a+l*l)}}]),r}(Ia),Va=function(e){var t=Math.max,n=Math.min;function i(e,t,n){var r;return ua(this,i),(r=Ca(this,Ma(i).call(this,e,t,n)))._setMargins(n),r}return Fa(i,e),ca(i,[{key:"resize",value:function(e,t,n){this.needsRefresh(t,n)&&(this.iconSize={width:+this.options.icon.size,height:+this.options.icon.size},this.width=this.iconSize.width+this.margin.right+this.margin.left,this.height=this.iconSize.height+this.margin.top+this.margin.bottom,this.radius=.5*this.width)}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.options.icon.size=this.options.icon.size||50,this.left=t-this.width/2,this.top=n-this.height/2,this._icon(e,t,n,i,r,o),void 0!==this.options.label&&this.labelModule.draw(e,this.left+this.iconSize.width/2+this.margin.left,n+this.height/2+5,i),this.updateBoundingBox(t,n)}},{key:"updateBoundingBox",value:function(e,i){this.boundingBox.top=i-.5*this.options.icon.size,this.boundingBox.left=e-.5*this.options.icon.size,this.boundingBox.right=e+.5*this.options.icon.size,this.boundingBox.bottom=i+.5*this.options.icon.size,void 0!==this.options.label&&0<this.labelModule.size.width&&(this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=t(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=t(this.boundingBox.bottom,this.boundingBox.bottom+this.labelModule.size.height+5))}},{key:"_icon",value:function(e,t,n,i,r,o){var s=+this.options.icon.size;void 0===this.options.icon.code?console.error("When using the icon shape, you need to define the code in the icon options object. This can be done per node or globally."):(e.font=(i?"bold ":"")+s+"px "+this.options.icon.face,e.fillStyle=this.options.icon.color||"black",e.textAlign="center",e.textBaseline="middle",this.enableShadow(e,o),e.fillText(this.options.icon.code,t,n),this.disableShadow(e,o))}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),i}(Ia),Ua=function(e){var t=Math.max,n=Math.min;function i(e,t,n,r,o){var s;return ua(this,i),(s=Ca(this,Ma(i).call(this,e,t,n))).setImages(r,o),s}return Fa(i,e),ca(i,[{key:"resize",value:function(){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.selected,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this.hover,n=void 0===this.imageObj.src||void 0===this.imageObj.width||void 0===this.imageObj.height;if(n){var i=2*this.options.size;return this.width=i,void(this.height=i)}this.needsRefresh(e,t)&&this._resizeImage()}},{key:"draw",value:function(e,t,i,r,o,s){if(this.switchImages(r),this.resize(),this.left=t-this.width/2,this.top=i-this.height/2,!0===this.options.shapeProperties.useBorderWithImage){var a=this.options.borderWidth,l=this.options.borderWidthSelected||2*this.options.borderWidth,u=(r?l:a)/this.body.view.scale;e.lineWidth=n(this.width,u),e.beginPath(),e.strokeStyle=r?this.options.color.highlight.border:o?this.options.color.hover.border:this.options.color.border,e.fillStyle=r?this.options.color.highlight.background:o?this.options.color.hover.background:this.options.color.background,e.rect(this.left-.5*e.lineWidth,this.top-.5*e.lineWidth,this.width+e.lineWidth,this.height+e.lineWidth),e.fill(),this.performStroke(e,s),e.closePath()}this._drawImageAtPosition(e,s),this._drawImageLabel(e,t,i,r,o),this.updateBoundingBox(t,i)}},{key:"updateBoundingBox",value:function(e,i){this.resize(),this._updateBoundingBox(e,i),void 0!==this.options.label&&0<this.labelModule.size.width&&(this.boundingBox.left=n(this.boundingBox.left,this.labelModule.size.left),this.boundingBox.right=t(this.boundingBox.right,this.labelModule.size.left+this.labelModule.size.width),this.boundingBox.bottom=t(this.boundingBox.bottom,this.boundingBox.bottom+this.labelOffset))}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),i}(Ra),Ga=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"square",2,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ya),qa=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"hexagon",4,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ya),$a=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"star",4,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ya),Za=function(e){function t(e,n,i){var r;return ua(this,t),(r=Ca(this,Ma(t).call(this,e,n,i)))._setMargins(i),r}return Fa(t,e),ca(t,[{key:"resize",value:function(e,t,n){this.needsRefresh(t,n)&&(this.textSize=this.labelModule.getTextSize(e,t,n),this.width=this.textSize.width+this.margin.right+this.margin.left,this.height=this.textSize.height+this.margin.top+this.margin.bottom,this.radius=.5*this.width)}},{key:"draw",value:function(e,t,n,i,r,o){this.resize(e,i,r),this.left=t-this.width/2,this.top=n-this.height/2,this.enableShadow(e,o),this.labelModule.draw(e,this.left+this.textSize.width/2+this.margin.left,this.top+this.textSize.height/2+this.margin.top,i,r),this.disableShadow(e,o),this.updateBoundingBox(t,n,e,i,r)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ia),Qa=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"triangle",3,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ya),Xa=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"draw",value:function(e,t,n,i,r,o){this._drawShape(e,"triangleDown",3,t,n,i,r,o)}},{key:"distanceToBorder",value:function(e,t){return this._distanceToBorder(e,t)}}]),t}(Ya),Ka=!1,Ja="background: #FFeeee; color: #dd0000",el=function(){var e=Math.min;function t(){ua(this,t)}return ca(t,null,[{key:"validate",value:function(e,n,i){Ka=!1,Na=n;var r=n;return void 0!==i&&(r=n[i]),t.parse(e,r,[]),Ka}},{key:"parse",value:function(e,n,i){for(var r in e)e.hasOwnProperty(r)&&t.check(r,e,n,i)}},{key:"check",value:function(e,n,i,r){if(void 0!==i[e]||void 0!==i.__any__){var o=e,s=!0;void 0===i[e]&&void 0!==i.__any__&&(o="__any__",s="object"===t.getType(n[e]));var a=i[o];s&&void 0!==a.__type__&&(a=a.__type__),t.checkFields(e,n,i,o,a,r)}else t.getSuggestion(e,i,r)}},{key:"checkFields",value:function(e,n,i,r,o,s){var a=function(n){console.log("%c"+n+t.printLocation(s,e),Ja)},l=t.getType(n[e]),u=o[l];void 0===u?void 0===o.any&&(a('Invalid type received for "'+e+'". Expected: '+t.print(Object.keys(o))+". Received ["+l+'] "'+n[e]+'"'),Ka=!0):"array"===t.getType(u)&&-1===u.indexOf(n[e])?(a('Invalid option detected in "'+e+'". Allowed values are:'+t.print(u)+' not "'+n[e]+'". '),Ka=!0):"object"===l&&"__any__"!==r&&(s=Xi.copyAndExtendArray(s,e),t.parse(n[e],i[r],s))}},{key:"getType",value:function(e){var t=_a(e);return"object"===t?null===e?"null":e instanceof Boolean?"boolean":e instanceof Number?"number":e instanceof String?"string":Array.isArray(e)?"array":e instanceof Date?"date":void 0===e.nodeType?!0===e._isAMomentObject?"moment":"object":"dom":"number"===t?"number":"boolean"===t?"boolean":"string"===t?"string":void 0===t?"undefined":t}},{key:"getSuggestion",value:function(e,n,i){var r,o=t.findInOptions(e,n,i,!1),s=t.findInOptions(e,Na,[],!0);r=void 0===o.indexMatch?s.distance<=4&&o.distance>s.distance?" in "+t.printLocation(o.path,e,"")+"Perhaps it was misplaced? Matching option found at: "+t.printLocation(s.path,s.closestMatch,""):o.distance<=8?'. Did you mean "'+o.closestMatch+'"?'+t.printLocation(o.path,e):". Did you mean one of these: "+t.print(Object.keys(n))+t.printLocation(i,e):" in "+t.printLocation(o.path,e,"")+'Perhaps it was incomplete? Did you mean: "'+o.indexMatch+'"?\n\n',console.log('%cUnknown option detected: "'+e+'"'+r,Ja),Ka=!0}},{key:"findInOptions",value:function(e,n,i){var r=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3],o=1e9,s="",a=[],l=e.toLowerCase(),u=void 0;for(var d in n){var c=void 0;if(void 0!==n[d].__type__&&!0===r){var h=t.findInOptions(e,n[d],Xi.copyAndExtendArray(i,d));o>h.distance&&(s=h.closestMatch,a=h.path,o=h.distance,u=h.indexMatch)}else-1!==d.toLowerCase().indexOf(l)&&(u=d),o>(c=t.levenshteinDistance(e,d))&&(s=d,a=Xi.copyArray(i),o=c)}return{closestMatch:s,path:a,distance:o,indexMatch:u}}},{key:"printLocation",value:function(e,t){for(var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"Problem value found at: \n",i="\n\n"+n+"options = {\n",r=0;r<e.length;r++){for(var o=0;o<r+1;o++)i+="  ";i+=e[r]+": {\n"}for(var s=0;s<e.length+1;s++)i+="  ";i+=t+"\n";for(var a=0;a<e.length+1;a++){for(var l=0;l<e.length-a;l++)i+="  ";i+="}\n"}return i+"\n\n"}},{key:"print",value:function(e){return JSON.stringify(e).replace(/(\")|(\[)|(\])|(,"__type__")/g,"").replace(/(\,)/g,", ")}},{key:"levenshteinDistance",value:function(t,n){if(0===t.length)return n.length;if(0===n.length)return t.length;var i,r,o=[];for(i=0;i<=n.length;i++)o[i]=[i];for(r=0;r<=t.length;r++)o[0][r]=r;for(i=1;i<=n.length;i++)for(r=1;r<=t.length;r++)o[i][r]=n.charAt(i-1)==t.charAt(r-1)?o[i-1][r-1]:e(o[i-1][r-1]+1,e(o[i][r-1]+1,o[i-1][r]+1));return o[n.length][t.length]}}]),t}();function tl(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}var nl=function(){function e(t,n,i,r,o,s){ua(this,e),this.options=Xi.bridgeObject(o),this.globalOptions=o,this.defaultOptions=s,this.body=n,this.edges=[],this.id=void 0,this.imagelist=i,this.grouplist=r,this.x=void 0,this.y=void 0,this.baseSize=this.options.size,this.baseFontSize=this.options.font.size,this.predefinedPosition=!1,this.selected=!1,this.hover=!1,this.labelModule=new Ta(this.body,this.options,!1),this.setOptions(t)}return ca(e,[{key:"attachEdge",value:function(e){-1===this.edges.indexOf(e)&&this.edges.push(e)}},{key:"detachEdge",value:function(e){var t=this.edges.indexOf(e);-1!=t&&this.edges.splice(t,1)}},{key:"setOptions",value:function(t){var n=this.options.shape;if(t){if(void 0!==t.color&&(this._localColor=t.color),void 0!==t.id&&(this.id=t.id),void 0===this.id)throw new Error("Node must have an id");e.checkMass(t,this.id),void 0!==t.x&&(null===t.x?(this.x=void 0,this.predefinedPosition=!1):(this.x=parseInt(t.x),this.predefinedPosition=!0)),void 0!==t.y&&(null===t.y?(this.y=void 0,this.predefinedPosition=!1):(this.y=parseInt(t.y),this.predefinedPosition=!0)),void 0!==t.size&&(this.baseSize=t.size),void 0!==t.value&&(t.value=parseFloat(t.value)),e.parseOptions(this.options,t,!0,this.globalOptions,this.grouplist);var i=[t,this.options,this.defaultOptions];return this.chooser=wa.choosify("node",i),this._load_images(),this.updateLabelModule(t),this.updateShape(n),void 0!==t.hidden||void 0!==t.physics}}},{key:"_load_images",value:function(){if(("circularImage"===this.options.shape||"image"===this.options.shape)&&void 0===this.options.image)throw new Error("Option image must be defined for node type '"+this.options.shape+"'");if(void 0!==this.options.image){if(void 0===this.imagelist)throw new Error("Internal Error: No images provided");if("string"==typeof this.options.image)this.imageObj=this.imagelist.load(this.options.image,this.options.brokenImage,this.id);else{if(void 0===this.options.image.unselected)throw new Error("No unselected image provided");this.imageObj=this.imagelist.load(this.options.image.unselected,this.options.brokenImage,this.id),this.imageObjAlt=void 0===this.options.image.selected?void 0:this.imagelist.load(this.options.image.selected,this.options.brokenImage,this.id)}}}},{key:"getFormattingValues",value:function(){var e={color:this.options.color.background,borderWidth:this.options.borderWidth,borderColor:this.options.color.border,size:this.options.size,borderDashes:this.options.shapeProperties.borderDashes,borderRadius:this.options.shapeProperties.borderRadius,shadow:this.options.shadow.enabled,shadowColor:this.options.shadow.color,shadowSize:this.options.shadow.size,shadowX:this.options.shadow.x,shadowY:this.options.shadow.y};return this.selected||this.hover?!0===this.chooser?this.selected?(e.borderWidth*=2,e.color=this.options.color.highlight.background,e.borderColor=this.options.color.highlight.border,e.shadow=this.options.shadow.enabled):this.hover&&(e.color=this.options.color.hover.background,e.borderColor=this.options.color.hover.border,e.shadow=this.options.shadow.enabled):"function"==typeof this.chooser&&(this.chooser(e,this.options.id,this.selected,this.hover),!1===e.shadow&&(e.shadowColor!==this.options.shadow.color||e.shadowSize!==this.options.shadow.size||e.shadowX!==this.options.shadow.x||e.shadowY!==this.options.shadow.y)&&(e.shadow=!0)):e.shadow=this.options.shadow.enabled,e}},{key:"updateLabelModule",value:function(t){(void 0===this.options.label||null===this.options.label)&&(this.options.label=""),e.updateGroupOptions(this.options,function(e){for(var t,n=1;n<arguments.length;n++)t=null==arguments[n]?{}:arguments[n],n%2?tl(t,!0).forEach((function(n){va(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):tl(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}));return e}({},t,{color:t&&t.color||this._localColor||void 0}),this.grouplist);var n=this.grouplist.get(this.options.group,!1),i=[t,this.options,n,this.globalOptions,this.defaultOptions];this.labelModule.update(this.options,i),void 0!==this.labelModule.baseSize&&(this.baseFontSize=this.labelModule.baseSize)}},{key:"updateShape",value:function(e){if(e===this.options.shape&&this.shape)this.shape.setOptions(this.options,this.imageObj,this.imageObjAlt);else switch(this.options.shape){case"box":this.shape=new ja(this.options,this.body,this.labelModule);break;case"circle":this.shape=new Aa(this.options,this.body,this.labelModule);break;case"circularImage":this.shape=new za(this.options,this.body,this.labelModule,this.imageObj,this.imageObjAlt);break;case"database":this.shape=new La(this.options,this.body,this.labelModule);break;case"diamond":this.shape=new Ba(this.options,this.body,this.labelModule);break;case"dot":this.shape=new Wa(this.options,this.body,this.labelModule);break;case"ellipse":this.shape=new Ha(this.options,this.body,this.labelModule);break;case"icon":this.shape=new Va(this.options,this.body,this.labelModule);break;case"image":this.shape=new Ua(this.options,this.body,this.labelModule,this.imageObj,this.imageObjAlt);break;case"square":this.shape=new Ga(this.options,this.body,this.labelModule);break;case"hexagon":this.shape=new qa(this.options,this.body,this.labelModule);break;case"star":this.shape=new $a(this.options,this.body,this.labelModule);break;case"text":this.shape=new Za(this.options,this.body,this.labelModule);break;case"triangle":this.shape=new Qa(this.options,this.body,this.labelModule);break;case"triangleDown":this.shape=new Xa(this.options,this.body,this.labelModule);break;default:this.shape=new Ha(this.options,this.body,this.labelModule)}this.needsRefresh()}},{key:"select",value:function(){this.selected=!0,this.needsRefresh()}},{key:"unselect",value:function(){this.selected=!1,this.needsRefresh()}},{key:"needsRefresh",value:function(){this.shape.refreshNeeded=!0}},{key:"getTitle",value:function(){return this.options.title}},{key:"distanceToBorder",value:function(e,t){return this.shape.distanceToBorder(e,t)}},{key:"isFixed",value:function(){return this.options.fixed.x&&this.options.fixed.y}},{key:"isSelected",value:function(){return this.selected}},{key:"getValue",value:function(){return this.options.value}},{key:"getLabelSize",value:function(){return this.labelModule.size()}},{key:"setValueRange",value:function(e,t,n){if(void 0!==this.options.value){var i=this.options.scaling.customScalingFunction(e,t,n,this.options.value),r=this.options.scaling.max-this.options.scaling.min;if(!0===this.options.scaling.label.enabled){var o=this.options.scaling.label.max-this.options.scaling.label.min;this.options.font.size=this.options.scaling.label.min+i*o}this.options.size=this.options.scaling.min+i*r}else this.options.size=this.baseSize,this.options.font.size=this.baseFontSize;this.updateLabelModule()}},{key:"draw",value:function(e){var t=this.getFormattingValues();this.shape.draw(e,this.x,this.y,this.selected,this.hover,t)}},{key:"updateBoundingBox",value:function(e){this.shape.updateBoundingBox(this.x,this.y,e)}},{key:"resize",value:function(e){var t=this.getFormattingValues();this.shape.resize(e,this.selected,this.hover,t)}},{key:"getItemsOnPoint",value:function(e){var t=[];return this.labelModule.visible()&&wa.pointInRect(this.labelModule.getSize(),e)&&t.push({nodeId:this.id,labelId:0}),wa.pointInRect(this.shape.boundingBox,e)&&t.push({nodeId:this.id}),t}},{key:"isOverlappingWith",value:function(e){return this.shape.left<e.right&&this.shape.left+this.shape.width>e.left&&this.shape.top<e.bottom&&this.shape.top+this.shape.height>e.top}},{key:"isBoundingBoxOverlappingWith",value:function(e){return this.shape.boundingBox.left<e.right&&this.shape.boundingBox.right>e.left&&this.shape.boundingBox.top<e.bottom&&this.shape.boundingBox.bottom>e.top}}],[{key:"updateGroupOptions",value:function(e,t,n){if(void 0!==n){var i=e.group;if(void 0!==t&&void 0!==t.group&&i!==t.group)throw new Error("updateGroupOptions: group values in options don't match.");if("number"==typeof i||"string"==typeof i&&""!=i){var r=n.get(i),o=["font"];void 0!==t&&void 0!==t.color&&null!=t.color&&o.push("color"),Xi.selectiveNotDeepExtend(o,e,r),e.color=Xi.parseColor(e.color)}}}},{key:"parseOptions",value:function(t,n){var i=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},o=4<arguments.length?arguments[4]:void 0;if(Xi.selectiveNotDeepExtend(["color","fixed","shadow"],t,n,i),e.checkMass(n),Xi.mergeOptions(t,n,"shadow",r),void 0!==n.color&&null!==n.color){var s=Xi.parseColor(n.color);Xi.fillIfDefined(t.color,s)}else!0===i&&null===n.color&&(t.color=Xi.bridgeObject(r.color));void 0!==n.fixed&&null!==n.fixed&&("boolean"==typeof n.fixed?(t.fixed.x=n.fixed,t.fixed.y=n.fixed):(void 0!==n.fixed.x&&"boolean"==typeof n.fixed.x&&(t.fixed.x=n.fixed.x),void 0!==n.fixed.y&&"boolean"==typeof n.fixed.y&&(t.fixed.y=n.fixed.y))),!0===i&&null===n.font&&(t.font=Xi.bridgeObject(r.font)),e.updateGroupOptions(t,n,o),void 0!==n.scaling&&Xi.mergeOptions(t.scaling,n.scaling,"label",r.scaling)}},{key:"checkMass",value:function(e,t){if(void 0!==e.mass&&0>=e.mass){var n="";void 0!==t&&(n=" in node id: "+t),console.log("%cNegative or zero mass disallowed"+n+", setting mass to 1.",Ja),e.mass=1}}}]),e}(),il=function(){var e=Math.round,t=Math.max;function n(e,i,r,o){var s=this;if(ua(this,n),this.body=e,this.images=i,this.groups=r,this.layoutEngine=o,this.body.functions.createNode=this.create.bind(this),this.nodesListeners={add:function(e,t){s.add(t.items)},update:function(e,t){s.update(t.items,t.data,t.oldData)},remove:function(e,t){s.remove(t.items)}},this.defaultOptions={borderWidth:1,borderWidthSelected:2,brokenImage:void 0,color:{border:"#2B7CE9",background:"#97C2FC",highlight:{border:"#2B7CE9",background:"#D2E5FF"},hover:{border:"#2B7CE9",background:"#D2E5FF"}},fixed:{x:!1,y:!1},font:{color:"#343434",size:14,face:"arial",background:"none",strokeWidth:0,strokeColor:"#ffffff",align:"center",vadjust:0,multi:!1,bold:{mod:"bold"},boldital:{mod:"bold italic"},ital:{mod:"italic"},mono:{mod:"",size:15,face:"monospace",vadjust:2}},group:void 0,hidden:!1,icon:{face:"FontAwesome",code:void 0,size:50,color:"#2B7CE9"},image:void 0,imagePadding:{top:0,right:0,bottom:0,left:0},label:void 0,labelHighlightBold:!0,level:void 0,margin:{top:5,right:5,bottom:5,left:5},mass:1,physics:!0,scaling:{min:10,max:30,label:{enabled:!1,min:14,max:30,maxVisible:30,drawThreshold:5},customScalingFunction:function(e,n,i,r){return n===e?.5:t(0,1/(n-e)*(r-e))}},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:10,x:5,y:5},shape:"ellipse",shapeProperties:{borderDashes:!1,borderRadius:6,interpolation:!0,useImageSize:!1,useBorderWithImage:!1},size:25,title:void 0,value:void 0,x:void 0,y:void 0},0>=this.defaultOptions.mass)throw"Internal error: mass in defaultOptions of NodesHandler may not be zero or negative";this.options=Xi.bridgeObject(this.defaultOptions),this.bindEventListeners()}return ca(n,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("refreshNodes",this.refresh.bind(this)),this.body.emitter.on("refresh",this.refresh.bind(this)),this.body.emitter.on("destroy",(function(){Xi.forEach(e.nodesListeners,(function(t,n){e.body.data.nodes&&e.body.data.nodes.off(n,t)})),delete e.body.functions.createNode,delete e.nodesListeners.add,delete e.nodesListeners.update,delete e.nodesListeners.remove,delete e.nodesListeners}))}},{key:"setOptions",value:function(e){if(void 0!==e){if(nl.parseOptions(this.options,e),void 0!==e.shape)for(var t in this.body.nodes)this.body.nodes.hasOwnProperty(t)&&this.body.nodes[t].updateShape();if(void 0!==e.font)for(var n in this.body.nodes)this.body.nodes.hasOwnProperty(n)&&(this.body.nodes[n].updateLabelModule(),this.body.nodes[n].needsRefresh());if(void 0!==e.size)for(var i in this.body.nodes)this.body.nodes.hasOwnProperty(i)&&this.body.nodes[i].needsRefresh();(void 0!==e.hidden||void 0!==e.physics)&&this.body.emitter.emit("_dataChanged")}}},{key:"setData",value:function(e){var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],n=this.body.data.nodes;if(e instanceof Lr||e instanceof Yr)this.body.data.nodes=e;else if(Array.isArray(e))this.body.data.nodes=new Lr,this.body.data.nodes.add(e);else{if(e)throw new TypeError("Array or DataSet expected");this.body.data.nodes=new Lr}if(n&&Xi.forEach(this.nodesListeners,(function(e,t){n.off(t,e)})),this.body.nodes={},this.body.data.nodes){var i=this;Xi.forEach(this.nodesListeners,(function(e,t){i.body.data.nodes.on(t,e)}));var r=this.body.data.nodes.getIds();this.add(r,!0)}!1===t&&this.body.emitter.emit("_dataChanged")}},{key:"add",value:function(e){for(var t,n=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],i=[],r=0;r<e.length;r++){t=e[r];var o=this.body.data.nodes.get(t),s=this.create(o);i.push(s),this.body.nodes[t]=s}this.layoutEngine.positionInitially(i),!1===n&&this.body.emitter.emit("_dataChanged")}},{key:"update",value:function(e,t,n){for(var i=this.body.nodes,r=!1,o=0;o<e.length;o++){var s=e[o],a=i[s],l=t[o];void 0===a?(r=!0,a=this.create(l),i[s]=a):a.setOptions(l)&&(r=!0)}r||void 0===n||(r=t.some((function(e,t){var i=n[t];return i&&i.level!==e.level}))),!0===r?this.body.emitter.emit("_dataChanged"):this.body.emitter.emit("_dataUpdated")}},{key:"remove",value:function(e){for(var t=this.body.nodes,n=0;n<e.length;n++)delete t[e[n]];this.body.emitter.emit("_dataChanged")}},{key:"create",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:nl;return new t(e,this.body,this.images,this.groups,this.options,this.defaultOptions)}},{key:"refresh",value:function(){var e=this,t=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];Xi.forEach(this.body.nodes,(function(n,i){var r=e.body.data.nodes.get(i);void 0!==r&&(!0===t&&n.setOptions({x:null,y:null}),n.setOptions({fixed:!1}),n.setOptions(r))}))}},{key:"getPositions",value:function(t){var n={};if(void 0===t)for(var i,r=0;r<this.body.nodeIndices.length;r++)i=this.body.nodes[this.body.nodeIndices[r]],n[this.body.nodeIndices[r]]={x:e(i.x),y:e(i.y)};else if(!0===Array.isArray(t)){for(var o=0;o<t.length;o++)if(void 0!==this.body.nodes[t[o]]){var s=this.body.nodes[t[o]];n[t[o]]={x:e(s.x),y:e(s.y)}}}else if(void 0!==this.body.nodes[t]){var a=this.body.nodes[t];n[t]={x:e(a.x),y:e(a.y)}}return n}},{key:"storePositions",value:function(){var t=[],n=this.body.data.nodes.getDataSet();for(var i in n._data)if(n._data.hasOwnProperty(i)){var r=this.body.nodes[i];(n._data[i].x!=e(r.x)||n._data[i].y!=e(r.y))&&t.push({id:r.id,x:e(r.x),y:e(r.y)})}n.update(t)}},{key:"getBoundingBox",value:function(e){if(void 0!==this.body.nodes[e])return this.body.nodes[e].shape.boundingBox}},{key:"getConnectedNodes",value:function(e,t){var n=[];if(void 0!==this.body.nodes[e])for(var i,r=this.body.nodes[e],o={},s=0;s<r.edges.length;s++)i=r.edges[s],"to"!==t&&i.toId==r.id?void 0===o[i.fromId]&&(n.push(i.fromId),o[i.fromId]=!0):"from"!==t&&i.fromId==r.id&&void 0===o[i.toId]&&(n.push(i.toId),o[i.toId]=!0);return n}},{key:"getConnectedEdges",value:function(e){var t=[];if(void 0!==this.body.nodes[e])for(var n=this.body.nodes[e],i=0;i<n.edges.length;i++)t.push(n.edges[i].id);else console.log("NodeId provided for getConnectedEdges does not exist. Provided: ",e);return t}},{key:"moveNode",value:function(e,t,n){var i=this;void 0===this.body.nodes[e]?console.log("Node id supplied to moveNode does not exist. Provided: ",e):(this.body.nodes[e].x=+t,this.body.nodes[e].y=+n,setTimeout((function(){i.body.emitter.emit("startSimulation")}),0))}}]),n}();var rl=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Ma(e)););return e},ol=Hr((function(e){function t(n,i,r){return e.exports=t="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var i=rl(e,t);if(i){var r=Object.getOwnPropertyDescriptor(i,t);return r.get?r.get.call(n):r.value}},t(n,i,r||n)}e.exports=t})),sl=function(){var e=Math.cos,t=Math.sin;function n(){ua(this,n)}return ca(n,null,[{key:"transform",value:function(n,i){Array.isArray(n)||(n=[n]);for(var r=i.point.x,o=i.point.y,s=i.angle,a=i.length,l=0;l<n.length;++l){var u=n[l],d=u.x*e(s)-u.y*t(s),c=u.x*t(s)+u.y*e(s);u.x=r+a*d,u.y=o+a*c}}},{key:"drawPath",value:function(e,t){e.beginPath(),e.moveTo(t[0].x,t[0].y);for(var n=1;n<t.length;++n)e.lineTo(t[n].x,t[n].y);e.closePath()}}]),n}(),al=function(e){function t(){return ua(this,t),Ca(this,Ma(t).apply(this,arguments))}return Fa(t,e),ca(t,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:0},{x:-1,y:.3},{x:-.9,y:0},{x:-1,y:-.3}];sl.transform(n,t),sl.drawPath(e,n)}}]),t}(sl),ll=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n=[{x:-1,y:0},{x:0,y:.3},{x:-.4,y:0},{x:0,y:-.3}];sl.transform(n,t),sl.drawPath(e,n)}}]),e}(),ul=function(){var e=Math.PI;function t(){ua(this,t)}return ca(t,null,[{key:"draw",value:function(t,n){var i={x:-.4,y:0};sl.transform(i,n),t.strokeStyle=t.fillStyle,t.fillStyle="rgba(0, 0, 0, 0)";var r=e,o=n.angle-r/2,s=n.angle+r/2;t.beginPath(),t.arc(i.x,i.y,.4*n.length,o,s,!1),t.stroke()}}]),t}(),dl=function(){var e=Math.PI;function t(){ua(this,t)}return ca(t,null,[{key:"draw",value:function(t,n){var i={x:-.3,y:0};sl.transform(i,n),t.strokeStyle=t.fillStyle,t.fillStyle="rgba(0, 0, 0, 0)";var r=e,o=n.angle+r/2,s=n.angle+3*r/2;t.beginPath(),t.arc(i.x,i.y,.4*n.length,o,s,!1),t.stroke()}}]),t}(),cl=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n=[{x:.02,y:0},{x:-1,y:.3},{x:-1,y:-.3}];sl.transform(n,t),sl.drawPath(e,n)}}]),e}(),hl=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:.3},{x:0,y:-.3},{x:-1,y:0}];sl.transform(n,t),sl.drawPath(e,n)}}]),e}(),fl=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n={x:-.4,y:0};sl.transform(n,t),e.circle(n.x,n.y,.4*t.length)}}]),e}(),pl=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:.5},{x:0,y:-.5},{x:-.15,y:-.5},{x:-.15,y:.5}];sl.transform(n,t),sl.drawPath(e,n)}}]),e}(),vl=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:.3},{x:0,y:-.3},{x:-.6,y:-.3},{x:-.6,y:.3}];sl.transform(n,t),sl.drawPath(e,n)}}]),e}(),ml=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n=[{x:0,y:0},{x:-.5,y:-.3},{x:-1,y:0},{x:-.5,y:.3}];sl.transform(n,t),sl.drawPath(e,n)}}]),e}(),yl=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n=[{x:-1,y:.3},{x:-.5,y:0},{x:-1,y:-.3},{x:0,y:0}];sl.transform(n,t),sl.drawPath(e,n)}}]),e}(),gl=function(){function e(){ua(this,e)}return ca(e,null,[{key:"draw",value:function(e,t){var n;switch(t.type&&(n=t.type.toLowerCase()),n){case"circle":fl.draw(e,t);break;case"box":vl.draw(e,t);break;case"crow":ll.draw(e,t);break;case"curve":ul.draw(e,t);break;case"diamond":ml.draw(e,t);break;case"inv_curve":dl.draw(e,t);break;case"triangle":cl.draw(e,t);break;case"inv_triangle":hl.draw(e,t);break;case"bar":pl.draw(e,t);break;case"vee":yl.draw(e,t);break;case"arrow":default:al.draw(e,t)}}}]),e}();function bl(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}var _l=function(){var e=Math.atan2,t=Math.cos,n=Math.sin,i=Math.sqrt,r=Math.PI,o=Math.pow,s=Math.max,a=Math.abs;function l(e,t,n){ua(this,l),this._body=t,this._labelModule=n,this.color={},this.colorDirty=!0,this.hoverWidth=1.5,this.selectionWidth=2,this.setOptions(e),this.fromPoint=this.from,this.toPoint=this.to}return ca(l,[{key:"connect",value:function(){this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to]}},{key:"cleanup",value:function(){return!1}},{key:"setOptions",value:function(e){this.options=e,this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to],this.id=this.options.id}},{key:"drawLine",value:function(e,t){var n=4<arguments.length&&void 0!==arguments[4]?arguments[4]:this.getViaNode();e.strokeStyle=this.getColor(e,t),e.lineWidth=t.width,!1===t.dashes?this._drawLine(e,t,n):this._drawDashedLine(e,t,n)}},{key:"_drawLine",value:function(e,t,n,i,r){if(this.from!=this.to)this._line(e,t,n,i,r);else{var o=this._getCircleData(e),s=ba(o,3),a=s[0],l=s[1],u=s[2];this._circle(e,t,a,l,u)}}},{key:"_drawDashedLine",value:function(e,t,n){e.lineCap="round";var i=Array.isArray(t.dashes)?t.dashes:[5,5];if(void 0!==e.setLineDash){if(e.save(),e.setLineDash(i),e.lineDashOffset=0,this.from!=this.to)this._line(e,t,n);else{var r=this._getCircleData(e),o=ba(r,3),s=o[0],a=o[1],l=o[2];this._circle(e,t,s,a,l)}e.setLineDash([0]),e.lineDashOffset=0,e.restore()}else{if(this.from!=this.to)e.dashedLine(this.from.x,this.from.y,this.to.x,this.to.y,i);else{var u=this._getCircleData(e),d=ba(u,3),c=d[0],h=d[1],f=d[2];this._circle(e,t,c,h,f)}this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t)}}},{key:"findBorderPosition",value:function(e,t,n){return this.from==this.to?this._findBorderPositionCircle(e,t,n):this._findBorderPosition(e,t,n)}},{key:"findBorderPositions",value:function(e){if(this.from!=this.to)return{from:this._findBorderPosition(this.from,e),to:this._findBorderPosition(this.to,e)};var t=this._getCircleData(e).slice(0,2),n=ba(t,2),i=n[0],r=n[1];return{from:this._findBorderPositionCircle(this.from,e,{x:i,y:r,low:.25,high:.6,direction:-1}),to:this._findBorderPositionCircle(this.from,e,{x:i,y:r,low:.6,high:.8,direction:1})}}},{key:"_getCircleData",value:function(e){var t,n,i=this.from,r=this.options.selfReferenceSize;return void 0!==e&&void 0===i.shape.width&&i.shape.resize(e),i.shape.width>i.shape.height?(t=i.x+.5*i.shape.width,n=i.y-r):(t=i.x+r,n=i.y-.5*i.shape.height),[t,n,r]}},{key:"_pointOnCircle",value:function(e,i,o,s){var a=2*s*r;return{x:e+o*t(a),y:i-o*n(a)}}},{key:"_findBorderPositionCircle",value:function(t,n,r){var s,l=r.x,u=r.y,d=r.low,c=r.high,h=r.direction,f=this.options.selfReferenceSize,p=.5*(d+c),v=0;do{p=.5*(d+c),s=this._pointOnCircle(l,u,f,p);var m=e(t.y-s.y,t.x-s.x),y=t.distanceToBorder(n,m)-i(o(s.x-t.x,2)+o(s.y-t.y,2));if(a(y)<.05)break;0<y?0<h?d=p:c=p:0<h?c=p:d=p,++v}while(d<=c&&v<10);return function(e){for(var t,n=1;n<arguments.length;n++)t=null==arguments[n]?{}:arguments[n],n%2?bl(t,!0).forEach((function(n){va(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):bl(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}));return e}({},s,{t:p})}},{key:"getLineWidth",value:function(e,t){return s(!0===e?this.selectionWidth:!0===t?this.hoverWidth:this.options.width,.3/this._body.view.scale)}},{key:"getColor",value:function(e,t){if(!1!==t.inheritsColor){if("both"===t.inheritsColor&&this.from.id!==this.to.id){var n=e.createLinearGradient(this.from.x,this.from.y,this.to.x,this.to.y),i=this.from.options.color.highlight.border,r=this.to.options.color.highlight.border;return!1===this.from.selected&&!1===this.to.selected?(i=Di(this.from.options.color.border,t.opacity),r=Di(this.to.options.color.border,t.opacity)):!0===this.from.selected&&!1===this.to.selected?r=this.to.options.color.border:!1===this.from.selected&&!0===this.to.selected&&(i=this.from.options.color.border),n.addColorStop(0,i),n.addColorStop(1,r),n}return"to"===t.inheritsColor?Di(this.to.options.color.border,t.opacity):Di(this.from.options.color.border,t.opacity)}return Di(t.color,t.opacity)}},{key:"_circle",value:function(e,t,n,i,o){this.enableShadow(e,t),e.beginPath(),e.arc(n,i,o,0,2*r,!1),e.stroke(),this.disableShadow(e,t)}},{key:"getDistanceToEdge",value:function(e,t,n,r,o,s){if(this.from!=this.to)return this._getDistanceToEdge(e,t,n,r,o,s);var l=this._getCircleData(void 0),u=ba(l,3),d=u[0],c=u[1],h=u[2],f=d-o,p=c-s;return a(i(f*f+p*p)-h)}},{key:"_getDistanceToLine",value:function(e,t,n,r,o,s){var a=n-e,l=r-t,u=((o-e)*a+(s-t)*l)/(a*a+l*l);1<u?u=1:0>u&&(u=0);var d=e+u*a-o,c=t+u*l-s;return i(d*d+c*c)}},{key:"getArrowData",value:function(i,o,s,l,u,d){var c,h,f,p,v,m,y,g=Math.hypot,b=d.width;"from"===o?(f=this.from,p=this.to,v=0>d.fromArrowScale,m=a(d.fromArrowScale),y=d.fromArrowType):"to"===o?(f=this.to,p=this.from,v=0>d.toArrowScale,m=a(d.toArrowScale),y=d.toArrowType):(f=this.to,p=this.from,v=0>d.middleArrowScale,m=a(d.middleArrowScale),y=d.middleArrowType);var _=15*m+3*b;if(f!=p){var w=_/g(f.x-p.x,f.y-p.y);if("middle"===o){var k=(v?-w:w)/2,x=this.getPoint(.5+k,s),S=this.getPoint(.5-k,s);c=e(x.y-S.y,x.x-S.x),h=this.getPoint(.5,s)}else if(!0===this.options.smooth.enabled){var O=this._findBorderPosition(f,i,{via:s}),E=this.getPoint(O.t+w*("from"===o?1:-1),s);c=e(O.y-E.y,O.x-E.x),h=O}else c=e(f.y-p.y,f.x-p.x),h=this._findBorderPosition(f,i)}else{var T=this._getCircleData(i),D=ba(T,3),C=D[0],M=D[1],P=D[2];if("from"===o){var N=this._findBorderPositionCircle(this.from,i,{x:C,y:M,low:.25,high:.6,direction:-1});c=-2*N.t*r+1.5*r+.1*r,h=N}else if("to"===o){var F=this._findBorderPositionCircle(this.from,i,{x:C,y:M,low:.6,high:1,direction:1});c=-2*F.t*r+1.5*r-1.1*r,h=F}else h=this._pointOnCircle(C,M,P,.175),c=3.9269908169872414}return{point:h,core:{x:h.x-.9*_*t(c),y:h.y-.9*_*n(c)},angle:c,length:_,type:y}}},{key:"drawArrowHead",value:function(e,t,n,i,r){e.strokeStyle=this.getColor(e,t),e.fillStyle=e.strokeStyle,e.lineWidth=t.width,gl.draw(e,r),this.enableShadow(e,t),e.fill(),this.disableShadow(e,t)}},{key:"enableShadow",value:function(e,t){!0===t.shadow&&(e.shadowColor=t.shadowColor,e.shadowBlur=t.shadowSize,e.shadowOffsetX=t.shadowX,e.shadowOffsetY=t.shadowY)}},{key:"disableShadow",value:function(e,t){!0===t.shadow&&(e.shadowColor="rgba(0,0,0,0)",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0)}},{key:"drawBackground",value:function(e,t){if(!1!==t.background){var n={strokeStyle:e.strokeStyle,lineWidth:e.lineWidth,dashes:e.dashes};e.strokeStyle=t.backgroundColor,e.lineWidth=t.backgroundSize,this.setStrokeDashed(e,t.backgroundDashes),e.stroke(),e.strokeStyle=n.strokeStyle,e.lineWidth=n.lineWidth,e.dashes=n.dashes,this.setStrokeDashed(e,t.dashes)}}},{key:"setStrokeDashed",value:function(e,t){if(!1===t)void 0===e.setLineDash?console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used."):e.setLineDash([]);else if(void 0!==e.setLineDash){var n=Array.isArray(t)?t:[5,5];e.setLineDash(n)}else console.warn("setLineDash is not supported in this browser. The dashed stroke cannot be used.")}}]),l}();function wl(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function kl(e){for(var t,n=1;n<arguments.length;n++)t=null==arguments[n]?{}:arguments[n],n%2?wl(t,!0).forEach((function(n){va(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):wl(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}));return e}var xl=function(e){var t=Math.atan2,n=Math.sqrt,i=Math.pow,r=Math.abs;function o(e,t,n){return ua(this,o),Ca(this,Ma(o).call(this,e,t,n))}return Fa(o,e),ca(o,[{key:"_findBorderPositionBezier",value:function(e,o){var s,a,l=2<arguments.length&&void 0!==arguments[2]?arguments[2]:this._getViaCoordinates(),u=!1,d=1,c=0,h=this.to;e.id===this.from.id&&(h=this.from,u=!0);var f=0;do{a=.5*(c+d),s=this.getPoint(a,l);var p=t(h.y-s.y,h.x-s.x),v=h.distanceToBorder(o,p),m=n(i(s.x-h.x,2)+i(s.y-h.y,2)),y=v-m;if(r(y)<.2)break;0>y?!1===u?c=a:d=a:!1===u?d=a:c=a,++f}while(c<=d&&f<10);return kl({},s,{t:a})}},{key:"_getDistanceToBezierEdge",value:function(e,t,n,r,o,s,a){var l,u,d,c,h,f=1e9,p=e,v=t;for(u=1;10>u;u++)c=i(1-(d=.1*u),2)*e+2*d*(1-d)*a.x+i(d,2)*n,h=i(1-d,2)*t+2*d*(1-d)*a.y+i(d,2)*r,0<u&&(f=(l=this._getDistanceToLine(p,v,c,h,o,s))<f?l:f),p=c,v=h;return f}},{key:"_bezierCurve",value:function(e,t,n,i){e.beginPath(),e.moveTo(this.fromPoint.x,this.fromPoint.y),null!=n&&null!=n.x?null!=i&&null!=i.x?e.bezierCurveTo(n.x,n.y,i.x,i.y,this.toPoint.x,this.toPoint.y):e.quadraticCurveTo(n.x,n.y,this.toPoint.x,this.toPoint.y):e.lineTo(this.toPoint.x,this.toPoint.y),this.drawBackground(e,t),this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t)}},{key:"getViaNode",value:function(){return this._getViaCoordinates()}}]),o}(_l),Sl=function(e){var t=Math.cos,n=Math.sin,i=Math.PI,r=Math.pow;function o(e,t,n){var i;return ua(this,o),(i=Ca(this,Ma(o).call(this,e,t,n))).via=i.via,i._boundFunction=function(){i.positionBezierNode()},i._body.emitter.on("_repositionBezierNodes",i._boundFunction),i}return Fa(o,e),ca(o,[{key:"setOptions",value:function(e){ol(Ma(o.prototype),"setOptions",this).call(this,e);var t=!1;this.options.physics!==e.physics&&(t=!0),this.options=e,this.id=this.options.id,this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to],this.setupSupportNode(),this.connect(),1==t&&(this.via.setOptions({physics:this.options.physics}),this.positionBezierNode())}},{key:"connect",value:function(){this.from=this._body.nodes[this.options.from],this.to=this._body.nodes[this.options.to],void 0===this.from||void 0===this.to||!1===this.options.physics?this.via.setOptions({physics:!1}):this.from.id===this.to.id?this.via.setOptions({physics:!1}):this.via.setOptions({physics:!0})}},{key:"cleanup",value:function(){return this._body.emitter.off("_repositionBezierNodes",this._boundFunction),void 0!==this.via&&(delete this._body.nodes[this.via.id],this.via=void 0,!0)}},{key:"setupSupportNode",value:function(){if(void 0===this.via){var e="edgeId:"+this.id,t=this._body.functions.createNode({id:e,shape:"circle",physics:!0,hidden:!0});this._body.nodes[e]=t,this.via=t,this.via.parentEdgeId=this.id,this.positionBezierNode()}}},{key:"positionBezierNode",value:function(){void 0!==this.via&&void 0!==this.from&&void 0!==this.to?(this.via.x=.5*(this.from.x+this.to.x),this.via.y=.5*(this.from.y+this.to.y)):void 0!==this.via&&(this.via.x=0,this.via.y=0)}},{key:"_line",value:function(e,t,n){this._bezierCurve(e,t,n)}},{key:"_getViaCoordinates",value:function(){return this.via}},{key:"getViaNode",value:function(){return this.via}},{key:"getPoint",value:function(e){var o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.via;if(this.from===this.to){var s=this._getCircleData(),a=ba(s,3),l=a[0],u=a[1],d=a[2],c=2*i*(1-e);return{x:l+d*n(c),y:u+d-d*(1-t(c))}}return{x:r(1-e,2)*this.fromPoint.x+2*e*(1-e)*o.x+r(e,2)*this.toPoint.x,y:r(1-e,2)*this.fromPoint.y+2*e*(1-e)*o.y+r(e,2)*this.toPoint.y}}},{key:"_findBorderPosition",value:function(e,t){return this._findBorderPositionBezier(e,t,this.via)}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){return this._getDistanceToBezierEdge(e,t,n,i,r,o,this.via)}}]),o}(xl),Ol=function(e){var t=Math.atan2,n=Math.cos,i=Math.sin,r=Math.sqrt,o=Math.PI,s=Math.pow,a=Math.abs;function l(e,t,n){return ua(this,l),Ca(this,Ma(l).call(this,e,t,n))}return Fa(l,e),ca(l,[{key:"_line",value:function(e,t,n){this._bezierCurve(e,t,n)}},{key:"getViaNode",value:function(){return this._getViaCoordinates()}},{key:"_getViaCoordinates",value:function(){var e,s,l=this.options.smooth.roundness,u=this.options.smooth.type,d=a(this.from.x-this.to.x),c=a(this.from.y-this.to.y);if("discrete"===u||"diagonalCross"===u){var h,f;h=f=d<=c?l*c:l*d,this.from.x>this.to.x&&(h=-h),this.from.y>=this.to.y&&(f=-f);var p=this.from.x+h,v=this.from.y+f;return"discrete"===u&&(d<=c?p=d<l*c?this.from.x:p:v=c<l*d?this.from.y:v),{x:p,y:v}}if("straightCross"===u){var m=(1-l)*d,y=(1-l)*c;return d<=c?(m=0,this.from.y<this.to.y&&(y=-y)):(this.from.x<this.to.x&&(m=-m),y=0),{x:this.to.x+m,y:this.to.y+y}}if("horizontal"===u){var g=(1-l)*d;return this.from.x<this.to.x&&(g=-g),{x:this.to.x+g,y:this.from.y}}if("vertical"===u){var b=(1-l)*c;return this.from.y<this.to.y&&(b=-b),{x:this.from.x,y:this.to.y+b}}if("curvedCW"===u){d=this.to.x-this.from.x,c=this.from.y-this.to.y;var _=r(d*d+c*c),w=o,k=(t(c,d)+(.5*l+.5)*w)%(2*w);return{x:this.from.x+(.5*l+.5)*_*i(k),y:this.from.y+(.5*l+.5)*_*n(k)}}if("curvedCCW"===u){d=this.to.x-this.from.x,c=this.from.y-this.to.y;var x=r(d*d+c*c),S=o,O=(t(c,d)+(.5*-l+.5)*S)%(2*S);return{x:this.from.x+(.5*l+.5)*x*i(O),y:this.from.y+(.5*l+.5)*x*n(O)}}e=s=d<=c?l*c:l*d,this.from.x>this.to.x&&(e=-e),this.from.y>=this.to.y&&(s=-s);var E=this.from.x+e,T=this.from.y+s;return d<=c?E=this.from.x<=this.to.x?this.to.x<E?this.to.x:E:this.to.x>E?this.to.x:E:T=this.from.y>=this.to.y?this.to.y>T?this.to.y:T:this.to.y<T?this.to.y:T,{x:E,y:T}}},{key:"_findBorderPosition",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};return this._findBorderPositionBezier(e,t,n.via)}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){var s=6<arguments.length&&void 0!==arguments[6]?arguments[6]:this._getViaCoordinates();return this._getDistanceToBezierEdge(e,t,n,i,r,o,s)}},{key:"getPoint",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this._getViaCoordinates(),n=e,i=s(1-n,2)*this.fromPoint.x+2*n*(1-n)*t.x+s(n,2)*this.toPoint.x,r=s(1-n,2)*this.fromPoint.y+2*n*(1-n)*t.y+s(n,2)*this.toPoint.y;return{x:i,y:r}}}]),l}(xl),El=function(e){var t=Math.pow,n=Math.abs;function i(e,t,n){return ua(this,i),Ca(this,Ma(i).call(this,e,t,n))}return Fa(i,e),ca(i,[{key:"_line",value:function(e,t,n){var i=n[0],r=n[1];this._bezierCurve(e,t,i,r)}},{key:"_getViaCoordinates",value:function(){var e,t,i,r,o=this.from.x-this.to.x,s=this.from.y-this.to.y,a=this.options.smooth.roundness;return(n(o)>n(s)||!0===this.options.smooth.forceDirection||"horizontal"===this.options.smooth.forceDirection)&&"vertical"!==this.options.smooth.forceDirection?(t=this.from.y,r=this.to.y,e=this.from.x-a*o,i=this.to.x+a*o):(t=this.from.y-a*s,r=this.to.y+a*s,e=this.from.x,i=this.to.x),[{x:e,y:t},{x:i,y:r}]}},{key:"getViaNode",value:function(){return this._getViaCoordinates()}},{key:"_findBorderPosition",value:function(e,t){return this._findBorderPositionBezier(e,t)}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){var s=6<arguments.length&&void 0!==arguments[6]?arguments[6]:this._getViaCoordinates(),a=ba(s,2),l=a[0],u=a[1];return this._getDistanceToBezierEdge2(e,t,n,i,r,o,l,u)}},{key:"getPoint",value:function(e){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this._getViaCoordinates(),i=ba(n,2),r=i[0],o=i[1],s=e,a=[t(1-s,3),3*s*t(1-s,2),3*t(s,2)*(1-s),t(s,3)],l=a[0]*this.fromPoint.x+a[1]*r.x+a[2]*o.x+a[3]*this.toPoint.x,u=a[0]*this.fromPoint.y+a[1]*r.y+a[2]*o.y+a[3]*this.toPoint.y;return{x:l,y:u}}}]),i}(function(e){var t=Math.pow;function n(e,t,i){return ua(this,n),Ca(this,Ma(n).call(this,e,t,i))}return Fa(n,e),ca(n,[{key:"_getDistanceToBezierEdge2",value:function(e,n,i,r,o,s,a,l){for(var u,d=1e9,c=e,h=n,f=[0,0,0,0],p=1;10>p;p++){u=.1*p,f[0]=t(1-u,3),f[1]=3*u*t(1-u,2),f[2]=3*t(u,2)*(1-u),f[3]=t(u,3);var v=f[0]*e+f[1]*a.x+f[2]*l.x+f[3]*i,m=f[0]*n+f[1]*a.y+f[2]*l.y+f[3]*r;if(0<p){var y=this._getDistanceToLine(c,h,v,m,o,s);d=y<d?y:d}c=v,h=m}return d}}]),n}(xl)),Tl=function(e){var t=Math.atan2,n=Math.sqrt;function i(e,t,n){return ua(this,i),Ca(this,Ma(i).call(this,e,t,n))}return Fa(i,e),ca(i,[{key:"_line",value:function(e,t){e.beginPath(),e.moveTo(this.fromPoint.x,this.fromPoint.y),e.lineTo(this.toPoint.x,this.toPoint.y),this.enableShadow(e,t),e.stroke(),this.disableShadow(e,t)}},{key:"getViaNode",value:function(){}},{key:"getPoint",value:function(e){return{x:(1-e)*this.fromPoint.x+e*this.toPoint.x,y:(1-e)*this.fromPoint.y+e*this.toPoint.y}}},{key:"_findBorderPosition",value:function(e,i){var r=this.to,o=this.from;e.id===this.from.id&&(r=this.from,o=this.to);var s=t(r.y-o.y,r.x-o.x),a=r.x-o.x,l=r.y-o.y,u=n(a*a+l*l),d=(u-e.distanceToBorder(i,s))/u;return{x:(1-d)*o.x+d*r.x,y:(1-d)*o.y+d*r.y,t:0}}},{key:"_getDistanceToEdge",value:function(e,t,n,i,r,o){return this._getDistanceToLine(e,t,n,i,r,o)}}]),i}(_l),Dl=function(){var e=Math.atan2,t=Math.cos,n=Math.sin,i=Math.PI,r=Math.max,o=Math.min;function s(e,t,n,i){if(ua(this,s),void 0===t)throw new Error("No body provided");this.options=Xi.bridgeObject(n),this.globalOptions=n,this.defaultOptions=i,this.body=t,this.id=void 0,this.fromId=void 0,this.toId=void 0,this.selected=!1,this.hover=!1,this.labelDirty=!0,this.baseWidth=this.options.width,this.baseFontSize=this.options.font.size,this.from=void 0,this.to=void 0,this.edgeType=void 0,this.connected=!1,this.labelModule=new Ta(this.body,this.options,!0),this.setOptions(e)}return ca(s,[{key:"setOptions",value:function(e){if(e){var t=this.options.hidden;null==t&&(t=!1),s.parseOptions(this.options,e,!0,this.globalOptions),void 0!==e.id&&(this.id=e.id),void 0!==e.from&&(this.fromId=e.from),void 0!==e.to&&(this.toId=e.to),void 0!==e.title&&(this.title=e.title),void 0!==e.value&&(e.value=parseFloat(e.value));var n=[e,this.options,this.defaultOptions];this.chooser=wa.choosify("edge",n),this.updateLabelModule(e);var i=this.updateEdgeType();this._setInteractionWidths(),this.connect();var r=this.options.hidden;return null==r&&(r=!1),(r!=t||void 0!==e.physics)&&(i=!0),void 0!==e.physics&&(i=!0),i}}},{key:"getFormattingValues",value:function(){var e=!0===this.options.arrows.to||!0===this.options.arrows.to.enabled,t=!0===this.options.arrows.from||!0===this.options.arrows.from.enabled,n=!0===this.options.arrows.middle||!0===this.options.arrows.middle.enabled,i=this.options.color.inherit,o={toArrow:e,toArrowScale:this.options.arrows.to.scaleFactor,toArrowType:this.options.arrows.to.type,middleArrow:n,middleArrowScale:this.options.arrows.middle.scaleFactor,middleArrowType:this.options.arrows.middle.type,fromArrow:t,fromArrowScale:this.options.arrows.from.scaleFactor,fromArrowType:this.options.arrows.from.type,arrowStrikethrough:this.options.arrowStrikethrough,color:i?void 0:this.options.color.color,inheritsColor:i,opacity:this.options.color.opacity,hidden:this.options.hidden,length:this.options.length,shadow:this.options.shadow.enabled,shadowColor:this.options.shadow.color,shadowSize:this.options.shadow.size,shadowX:this.options.shadow.x,shadowY:this.options.shadow.y,dashes:this.options.dashes,width:this.options.width,background:this.options.background.enabled,backgroundColor:this.options.background.color,backgroundSize:this.options.background.size,backgroundDashes:this.options.background.dashes};if(this.selected||this.hover){if(!0!==this.chooser)"function"==typeof this.chooser&&(this.chooser(o,this.options.id,this.selected,this.hover),void 0!==o.color&&(o.inheritsColor=!1),!1===o.shadow&&(o.shadowColor!==this.options.shadow.color||o.shadowSize!==this.options.shadow.size||o.shadowX!==this.options.shadow.x||o.shadowY!==this.options.shadow.y)&&(o.shadow=!0));else if(this.selected){var s=this.options.selectionWidth;"function"==typeof s?o.width=s(o.width):"number"==typeof s&&(o.width+=s),o.width=r(o.width,.3/this.body.view.scale),o.color=this.options.color.highlight,o.shadow=this.options.shadow.enabled}else if(this.hover){var a=this.options.hoverWidth;"function"==typeof a?o.width=a(o.width):"number"==typeof a&&(o.width+=a),o.width=r(o.width,.3/this.body.view.scale),o.color=this.options.color.hover,o.shadow=this.options.shadow.enabled}}else o.shadow=this.options.shadow.enabled,o.width=r(o.width,.3/this.body.view.scale);return o}},{key:"updateLabelModule",value:function(e){var t=[e,this.options,this.globalOptions,this.defaultOptions];this.labelModule.update(this.options,t),void 0!==this.labelModule.baseSize&&(this.baseFontSize=this.labelModule.baseSize)}},{key:"updateEdgeType",value:function(){var e=this.options.smooth,t=!1,n=!0;return void 0!==this.edgeType&&((this.edgeType instanceof Sl&&!0===e.enabled&&"dynamic"===e.type||this.edgeType instanceof El&&!0===e.enabled&&"cubicBezier"===e.type||this.edgeType instanceof Ol&&!0===e.enabled&&"dynamic"!==e.type&&"cubicBezier"!==e.type||this.edgeType instanceof Tl&&!1===e.type.enabled)&&(n=!1),!0===n&&(t=this.cleanup())),!0===n?!0===e.enabled?"dynamic"===e.type?(t=!0,this.edgeType=new Sl(this.options,this.body,this.labelModule)):"cubicBezier"===e.type?this.edgeType=new El(this.options,this.body,this.labelModule):this.edgeType=new Ol(this.options,this.body,this.labelModule):this.edgeType=new Tl(this.options,this.body,this.labelModule):this.edgeType.setOptions(this.options),t}},{key:"connect",value:function(){this.disconnect(),this.from=this.body.nodes[this.fromId]||void 0,this.to=this.body.nodes[this.toId]||void 0,this.connected=void 0!==this.from&&void 0!==this.to,!0===this.connected?(this.from.attachEdge(this),this.to.attachEdge(this)):(this.from&&this.from.detachEdge(this),this.to&&this.to.detachEdge(this)),this.edgeType.connect()}},{key:"disconnect",value:function(){this.from&&(this.from.detachEdge(this),this.from=void 0),this.to&&(this.to.detachEdge(this),this.to=void 0),this.connected=!1}},{key:"getTitle",value:function(){return this.title}},{key:"isSelected",value:function(){return this.selected}},{key:"getValue",value:function(){return this.options.value}},{key:"setValueRange",value:function(e,t,n){if(void 0!==this.options.value){var i=this.options.scaling.customScalingFunction(e,t,n,this.options.value),r=this.options.scaling.max-this.options.scaling.min;if(!0===this.options.scaling.label.enabled){var o=this.options.scaling.label.max-this.options.scaling.label.min;this.options.font.size=this.options.scaling.label.min+i*o}this.options.width=this.options.scaling.min+i*r}else this.options.width=this.baseWidth,this.options.font.size=this.baseFontSize;this._setInteractionWidths(),this.updateLabelModule()}},{key:"_setInteractionWidths",value:function(){this.edgeType.hoverWidth="function"==typeof this.options.hoverWidth?this.options.hoverWidth(this.options.width):this.options.hoverWidth+this.options.width,this.edgeType.selectionWidth="function"==typeof this.options.selectionWidth?this.options.selectionWidth(this.options.width):this.options.selectionWidth+this.options.width}},{key:"draw",value:function(e){var t=this.getFormattingValues();if(!t.hidden){var n=this.edgeType.getViaNode(),i={};this.edgeType.fromPoint=this.edgeType.from,this.edgeType.toPoint=this.edgeType.to,t.fromArrow&&(i.from=this.edgeType.getArrowData(e,"from",n,this.selected,this.hover,t),!1===t.arrowStrikethrough&&(this.edgeType.fromPoint=i.from.core)),t.toArrow&&(i.to=this.edgeType.getArrowData(e,"to",n,this.selected,this.hover,t),!1===t.arrowStrikethrough&&(this.edgeType.toPoint=i.to.core)),t.middleArrow&&(i.middle=this.edgeType.getArrowData(e,"middle",n,this.selected,this.hover,t)),this.edgeType.drawLine(e,t,this.selected,this.hover,n),this.drawArrows(e,i,t),this.drawLabel(e,n)}}},{key:"drawArrows",value:function(e,t,n){n.fromArrow&&this.edgeType.drawArrowHead(e,n,this.selected,this.hover,t.from),n.middleArrow&&this.edgeType.drawArrowHead(e,n,this.selected,this.hover,t.middle),n.toArrow&&this.edgeType.drawArrowHead(e,n,this.selected,this.hover,t.to)}},{key:"drawLabel",value:function(e,t){if(void 0!==this.options.label){var n=this.from,i=this.to;if(this.labelModule.differentState(this.selected,this.hover)&&this.labelModule.getTextSize(e,this.selected,this.hover),n.id!=i.id){this.labelModule.pointToSelf=!1;var r=this.edgeType.getPoint(.5,t);e.save();var o=this._getRotation(e);0!=o.angle&&(e.translate(o.x,o.y),e.rotate(o.angle)),this.labelModule.draw(e,r.x,r.y,this.selected,this.hover),e.restore()}else{this.labelModule.pointToSelf=!0;var s,a,l=this.options.selfReferenceSize;n.shape.width>n.shape.height?(s=n.x+.5*n.shape.width,a=n.y-l):(s=n.x+l,a=n.y-.5*n.shape.height),r=this._pointOnCircle(s,a,l,.125),this.labelModule.draw(e,r.x,r.y,this.selected,this.hover)}}}},{key:"getItemsOnPoint",value:function(e){var t=[];if(this.labelModule.visible()){var n=this._getRotation();wa.pointInRect(this.labelModule.getSize(),e,n)&&t.push({edgeId:this.id,labelId:0})}var i={left:e.x,top:e.y};return this.isOverlappingWith(i)&&t.push({edgeId:this.id}),t}},{key:"isOverlappingWith",value:function(e){if(this.connected){var t=this.from.x,n=this.from.y,i=this.to.x,r=this.to.y,o=e.left,s=e.top;return 10>this.edgeType.getDistanceToEdge(t,n,i,r,o,s)}return!1}},{key:"_getRotation",value:function(t){var n=this.edgeType.getViaNode(),r=this.edgeType.getPoint(.5,n);void 0!==t&&this.labelModule.calculateLabelSize(t,this.selected,this.hover,r.x,r.y);var o={x:r.x,y:this.labelModule.size.yLine,angle:0};if(!this.labelModule.visible())return o;if("horizontal"===this.options.font.align)return o;var s=this.from.y-this.to.y,a=this.from.x-this.to.x,l=e(s,a);return(-1>l&&0>a||0<l&&0>a)&&(l+=i),o.angle=l,o}},{key:"_pointOnCircle",value:function(e,r,o,s){var a=2*s*i;return{x:e+o*t(a),y:r-o*n(a)}}},{key:"select",value:function(){this.selected=!0}},{key:"unselect",value:function(){this.selected=!1}},{key:"cleanup",value:function(){return this.edgeType.cleanup()}},{key:"remove",value:function(){this.cleanup(),this.disconnect(),delete this.body.edges[this.id]}},{key:"endPointsValid",value:function(){return void 0!==this.body.nodes[this.fromId]&&void 0!==this.body.nodes[this.toId]}}],[{key:"parseOptions",value:function(e,t){var n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{},s=!!(4<arguments.length&&void 0!==arguments[4])&&arguments[4];if(Xi.selectiveDeepExtend(["arrowStrikethrough","id","from","hidden","hoverWidth","labelHighlightBold","length","line","opacity","physics","scaling","selectionWidth","selfReferenceSize","to","title","value","width","font","chosen","widthConstraint"],e,t,n),wa.isValidLabel(t.label)?e.label=t.label:!wa.isValidLabel(e.label)&&(e.label=void 0),Xi.mergeOptions(e,t,"smooth",i),Xi.mergeOptions(e,t,"shadow",i),Xi.mergeOptions(e,t,"background",i),void 0!==t.dashes&&null!==t.dashes?e.dashes=t.dashes:!0===n&&null===t.dashes&&(e.dashes=Object.create(i.dashes)),void 0!==t.scaling&&null!==t.scaling?(void 0!==t.scaling.min&&(e.scaling.min=t.scaling.min),void 0!==t.scaling.max&&(e.scaling.max=t.scaling.max),Xi.mergeOptions(e.scaling,t.scaling,"label",i.scaling)):!0===n&&null===t.scaling&&(e.scaling=Object.create(i.scaling)),void 0===t.arrows||null===t.arrows)!0===n&&null===t.arrows&&(e.arrows=Object.create(i.arrows));else if("string"==typeof t.arrows){var a=t.arrows.toLowerCase();e.arrows.to.enabled=-1!=a.indexOf("to"),e.arrows.middle.enabled=-1!=a.indexOf("middle"),e.arrows.from.enabled=-1!=a.indexOf("from")}else{if("object"!==_a(t.arrows))throw new Error("The arrow newOptions can only be an object or a string. Refer to the documentation. You used:"+JSON.stringify(t.arrows));Xi.mergeOptions(e.arrows,t.arrows,"to",i.arrows),Xi.mergeOptions(e.arrows,t.arrows,"middle",i.arrows),Xi.mergeOptions(e.arrows,t.arrows,"from",i.arrows)}if(void 0!==t.color&&null!==t.color){var l=Xi.isString(t.color)?{color:t.color,highlight:t.color,hover:t.color,inherit:!1,opacity:1}:t.color,u=e.color;if(s)Xi.deepExtend(u,i.color,!1,n);else for(var d in u)u.hasOwnProperty(d)&&delete u[d];if(Xi.isString(u))u.color=u,u.highlight=u,u.hover=u,u.inherit=!1,void 0===l.opacity&&(u.opacity=1);else{var c=!1;void 0!==l.color&&(u.color=l.color,c=!0),void 0!==l.highlight&&(u.highlight=l.highlight,c=!0),void 0!==l.hover&&(u.hover=l.hover,c=!0),void 0!==l.inherit&&(u.inherit=l.inherit),void 0!==l.opacity&&(u.opacity=o(1,r(0,l.opacity))),1==c?u.inherit=!1:void 0===u.inherit&&(u.inherit="from")}}else!0===n&&null===t.color&&(e.color=Xi.bridgeObject(i.color));!0===n&&null===t.font&&(e.font=Xi.bridgeObject(i.font))}}]),s}(),Cl=function(){var e=Math.max;function t(n,i,r){var o=this;ua(this,t),this.body=n,this.images=i,this.groups=r,this.body.functions.createEdge=this.create.bind(this),this.edgesListeners={add:function(e,t){o.add(t.items)},update:function(e,t){o.update(t.items)},remove:function(e,t){o.remove(t.items)}},this.options={},this.defaultOptions={arrows:{to:{enabled:!1,scaleFactor:1,type:"arrow"},middle:{enabled:!1,scaleFactor:1,type:"arrow"},from:{enabled:!1,scaleFactor:1,type:"arrow"}},arrowStrikethrough:!0,color:{color:"#848484",highlight:"#848484",hover:"#848484",inherit:"from",opacity:1},dashes:!1,font:{color:"#343434",size:14,face:"arial",background:"none",strokeWidth:2,strokeColor:"#ffffff",align:"horizontal",multi:!1,vadjust:0,bold:{mod:"bold"},boldital:{mod:"bold italic"},ital:{mod:"italic"},mono:{mod:"",size:15,face:"courier new",vadjust:2}},hidden:!1,hoverWidth:1.5,label:void 0,labelHighlightBold:!0,length:void 0,physics:!0,scaling:{min:1,max:15,label:{enabled:!0,min:14,max:30,maxVisible:30,drawThreshold:5},customScalingFunction:function(t,n,i,r){return n===t?.5:e(0,1/(n-t)*(r-t))}},selectionWidth:1.5,selfReferenceSize:20,shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:10,x:5,y:5},background:{enabled:!1,color:"rgba(111,111,111,1)",size:10,dashes:!1},smooth:{enabled:!0,type:"dynamic",forceDirection:"none",roundness:.5},title:void 0,width:1,value:void 0},Xi.deepExtend(this.options,this.defaultOptions),this.bindEventListeners()}return ca(t,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("_forceDisableDynamicCurves",(function(t){var n=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];"dynamic"===t&&(t="continuous");var i=!1;for(var r in e.body.edges)if(e.body.edges.hasOwnProperty(r)){var o=e.body.edges[r],s=e.body.data.edges._data[r];if(void 0!==s){var a=s.smooth;void 0!==a&&!0===a.enabled&&"dynamic"===a.type&&(void 0===t?o.setOptions({smooth:!1}):o.setOptions({smooth:{type:t}}),i=!0)}}!0===n&&1==i&&e.body.emitter.emit("_dataChanged")})),this.body.emitter.on("_dataUpdated",(function(){e.reconnectEdges()})),this.body.emitter.on("refreshEdges",this.refresh.bind(this)),this.body.emitter.on("refresh",this.refresh.bind(this)),this.body.emitter.on("destroy",(function(){Xi.forEach(e.edgesListeners,(function(t,n){e.body.data.edges&&e.body.data.edges.off(n,t)})),delete e.body.functions.createEdge,delete e.edgesListeners.add,delete e.edgesListeners.update,delete e.edgesListeners.remove,delete e.edgesListeners}))}},{key:"setOptions",value:function(e){if(void 0!==e){Dl.parseOptions(this.options,e,!0,this.defaultOptions,!0);var t=!1;if(void 0!==e.smooth)for(var n in this.body.edges)this.body.edges.hasOwnProperty(n)&&(t=this.body.edges[n].updateEdgeType()||t);if(void 0!==e.font)for(var i in this.body.edges)this.body.edges.hasOwnProperty(i)&&this.body.edges[i].updateLabelModule();(void 0!==e.hidden||void 0!==e.physics||!0===t)&&this.body.emitter.emit("_dataChanged")}}},{key:"setData",value:function(e){var t=this,n=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],i=this.body.data.edges;if(e instanceof Lr||e instanceof Yr)this.body.data.edges=e;else if(Array.isArray(e))this.body.data.edges=new Lr,this.body.data.edges.add(e);else{if(e)throw new TypeError("Array or DataSet expected");this.body.data.edges=new Lr}if(i&&Xi.forEach(this.edgesListeners,(function(e,t){i.off(t,e)})),this.body.edges={},this.body.data.edges){Xi.forEach(this.edgesListeners,(function(e,n){t.body.data.edges.on(n,e)}));var r=this.body.data.edges.getIds();this.add(r,!0)}this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),!1===n&&this.body.emitter.emit("_dataChanged")}},{key:"add",value:function(e){for(var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],n=this.body.edges,i=this.body.data.edges,r=0;r<e.length;r++){var o=e[r],s=n[o];s&&s.disconnect();var a=i.get(o,{showInternalIds:!0});n[o]=this.create(a)}this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),!1===t&&this.body.emitter.emit("_dataChanged")}},{key:"update",value:function(e){for(var t=this.body.edges,n=this.body.data.edges,i=!1,r=0;r<e.length;r++){var o=e[r],s=n.get(o),a=t[o];void 0===a?(this.body.edges[o]=this.create(s),i=!0):(a.disconnect(),i=a.setOptions(s)||i,a.connect())}!0===i?(this.body.emitter.emit("_adjustEdgesForHierarchicalLayout"),this.body.emitter.emit("_dataChanged")):this.body.emitter.emit("_dataUpdated")}},{key:"remove",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if(0!==e.length){var n=this.body.edges;Xi.forEach(e,(function(e){var t=n[e];void 0!==t&&t.remove()})),t&&this.body.emitter.emit("_dataChanged")}}},{key:"refresh",value:function(){var e=this;Xi.forEach(this.body.edges,(function(t,n){var i=e.body.data.edges._data[n];void 0!==i&&t.setOptions(i)}))}},{key:"create",value:function(e){return new Dl(e,this.body,this.options,this.defaultOptions)}},{key:"reconnectEdges",value:function(){var e,t=this.body.nodes,n=this.body.edges;for(e in t)t.hasOwnProperty(e)&&(t[e].edges=[]);for(e in n)if(n.hasOwnProperty(e)){var i=n[e];i.from=null,i.to=null,i.connect()}}},{key:"getConnectedNodes",value:function(e){var t=[];if(void 0!==this.body.edges[e]){var n=this.body.edges[e];void 0!==n.fromId&&t.push(n.fromId),void 0!==n.toId&&t.push(n.toId)}return t}},{key:"_updateState",value:function(){this._addMissingEdges(),this._removeInvalidEdges()}},{key:"_removeInvalidEdges",value:function(){var e=this,t=[];Xi.forEach(this.body.edges,(function(n,i){var r=e.body.nodes[n.toId],o=e.body.nodes[n.fromId];void 0!==r&&!0===r.isCluster||void 0!==o&&!0===o.isCluster||(void 0===r||void 0===o)&&t.push(i)})),this.remove(t,!1)}},{key:"_addMissingEdges",value:function(){var e=this.body.data.edges;if(null!=e){var t=this.body.edges,n=[];e.forEach((function(e,i){void 0===t[i]&&n.push(i)})),this.add(n,!0)}}}]),t}(),Ml=function(){var e=Math.sin,t=Math.sqrt,n=Math.pow,i=Math.max,r=Math.abs,o=Math.min,s=Math.floor;function a(e,t,n){ua(this,a),this.body=e,this.physicsBody=t,this.barnesHutTree,this.setOptions(n),this.randomSeed=5}return ca(a,[{key:"setOptions",value:function(e){this.options=e,this.thetaInversed=1/this.options.theta,this.overlapAvoidanceFactor=1-i(0,o(1,this.options.avoidOverlap))}},{key:"seededRandom",value:function(){var t=1e4*e(this.randomSeed++);return t-s(t)}},{key:"solve",value:function(){if(0!==this.options.gravitationalConstant&&0<this.physicsBody.physicsNodeIndices.length){var e,t=this.body.nodes,n=this.physicsBody.physicsNodeIndices,i=n.length,r=this._formBarnesHutTree(t,n);this.barnesHutTree=r;for(var o=0;o<i;o++)0<(e=t[n[o]]).options.mass&&this._getForceContributions(r.root,e)}}},{key:"_getForceContributions",value:function(e,t){this._getForceContribution(e.children.NW,t),this._getForceContribution(e.children.NE,t),this._getForceContribution(e.children.SW,t),this._getForceContribution(e.children.SE,t)}},{key:"_getForceContribution",value:function(e,n){var i,r,o;0<e.childrenCount&&(i=e.centerOfMass.x-n.x,r=e.centerOfMass.y-n.y,(o=t(i*i+r*r))*e.calcSize>this.thetaInversed?this._calculateForces(o,i,r,n,e):4===e.childrenCount?this._getForceContributions(e,n):e.children.data.id!=n.id&&this._calculateForces(o,i,r,n,e))}},{key:"_calculateForces",value:function(e,t,r,o,s){0===e&&(t=e=.1),1>this.overlapAvoidanceFactor&&o.shape.radius&&(e=i(.1+this.overlapAvoidanceFactor*o.shape.radius,e-o.shape.radius));var a=this.options.gravitationalConstant*s.mass*o.options.mass/n(e,3),l=t*a;this.physicsBody.forces[o.id].x+=l,this.physicsBody.forces[o.id].y+=r*a}},{key:"_formBarnesHutTree",value:function(e,t){for(var n,o=t.length,s=e[t[0]].x,a=e[t[0]].y,l=e[t[0]].x,u=e[t[0]].y,d=1;d<o;d++){var c=e[t[d]],h=c.x,f=c.y;0<c.options.mass&&(h<s&&(s=h),h>l&&(l=h),f<a&&(a=f),f>u&&(u=f))}var p=r(l-s)-r(u-a);0<p?(a-=.5*p,u+=.5*p):(s+=.5*p,l-=.5*p);var v=i(1e-5,r(l-s)),m=.5*v,y=.5*(s+l),g=.5*(a+u),b={root:{centerOfMass:{x:0,y:0},mass:0,range:{minX:y-m,maxX:y+m,minY:g-m,maxY:g+m},size:v,calcSize:1/v,children:{data:null},maxWidth:0,level:0,childrenCount:4}};this._splitBranch(b.root);for(var _=0;_<o;_++)0<(n=e[t[_]]).options.mass&&this._placeInTree(b.root,n);return b}},{key:"_updateBranchMass",value:function(e,t){var n=e.centerOfMass,r=e.mass+t.options.mass,o=1/r;n.x=n.x*e.mass+t.x*t.options.mass,n.x*=o,n.y=n.y*e.mass+t.y*t.options.mass,n.y*=o,e.mass=r;var s=i(i(t.height,t.radius),t.width);e.maxWidth=e.maxWidth<s?s:e.maxWidth}},{key:"_placeInTree",value:function(e,t,n){(1!=n||void 0===n)&&this._updateBranchMass(e,t);var i,r=e.children.NW.range;i=r.maxX>t.x?r.maxY>t.y?"NW":"SW":r.maxY>t.y?"NE":"SE",this._placeInRegion(e,t,i)}},{key:"_placeInRegion",value:function(e,t,n){var i=e.children[n];switch(i.childrenCount){case 0:i.children.data=t,i.childrenCount=1,this._updateBranchMass(i,t);break;case 1:i.children.data.x===t.x&&i.children.data.y===t.y?(t.x+=this.seededRandom(),t.y+=this.seededRandom()):(this._splitBranch(i),this._placeInTree(i,t));break;case 4:this._placeInTree(i,t)}}},{key:"_splitBranch",value:function(e){var t=null;1===e.childrenCount&&(t=e.children.data,e.mass=0,e.centerOfMass.x=0,e.centerOfMass.y=0),e.childrenCount=4,e.children.data=null,this._insertRegion(e,"NW"),this._insertRegion(e,"NE"),this._insertRegion(e,"SW"),this._insertRegion(e,"SE"),null!=t&&this._placeInTree(e,t)}},{key:"_insertRegion",value:function(e,t){var n,i,r,o,s=.5*e.size;"NW"===t?(n=e.range.minX,i=e.range.minX+s,r=e.range.minY,o=e.range.minY+s):"NE"===t?(n=e.range.minX+s,i=e.range.maxX,r=e.range.minY,o=e.range.minY+s):"SW"===t?(n=e.range.minX,i=e.range.minX+s,r=e.range.minY+s,o=e.range.maxY):"SE"===t&&(n=e.range.minX+s,i=e.range.maxX,r=e.range.minY+s,o=e.range.maxY),e.children[t]={centerOfMass:{x:0,y:0},mass:0,range:{minX:n,maxX:i,minY:r,maxY:o},size:.5*e.size,calcSize:2*e.calcSize,children:{data:null},maxWidth:0,level:e.level+1,childrenCount:0}}},{key:"_debug",value:function(e,t){void 0!==this.barnesHutTree&&(e.lineWidth=1,this._drawBranch(this.barnesHutTree.root,e,t))}},{key:"_drawBranch",value:function(e,t,n){void 0===n&&(n="#FF0000"),4===e.childrenCount&&(this._drawBranch(e.children.NW,t),this._drawBranch(e.children.NE,t),this._drawBranch(e.children.SE,t),this._drawBranch(e.children.SW,t)),t.strokeStyle=n,t.beginPath(),t.moveTo(e.range.minX,e.range.minY),t.lineTo(e.range.maxX,e.range.minY),t.stroke(),t.beginPath(),t.moveTo(e.range.maxX,e.range.minY),t.lineTo(e.range.maxX,e.range.maxY),t.stroke(),t.beginPath(),t.moveTo(e.range.maxX,e.range.maxY),t.lineTo(e.range.minX,e.range.maxY),t.stroke(),t.beginPath(),t.moveTo(e.range.minX,e.range.maxY),t.lineTo(e.range.minX,e.range.minY),t.stroke()}}]),a}(),Pl=function(){var e=Math.sqrt;function t(e,n,i){ua(this,t),this.body=e,this.physicsBody=n,this.setOptions(i)}return ca(t,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var t,n,i,r,o,s,a,l,u=this.body.nodes,d=this.physicsBody.physicsNodeIndices,c=this.physicsBody.forces,h=this.options.nodeDistance,f=0;f<d.length-1;f++){a=u[d[f]];for(var p=f+1;p<d.length;p++)t=(l=u[d[p]]).x-a.x,n=l.y-a.y,0===(i=e(t*t+n*n))&&(t=i=.1*Math.random()),i<2*h&&(s=i<.5*h?1:-2/3/h*i+4/3,r=t*(s/=i),o=n*s,c[a.id].x-=r,c[a.id].y-=o,c[l.id].x+=r,c[l.id].y+=o)}}}]),t}(),Nl=function(){var e=Math.sqrt,t=Math.pow;function n(e,t,i){ua(this,n),this.body=e,this.physicsBody=t,this.setOptions(i)}return ca(n,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){var n,i,r,o,s,a,l,u,d,c,h=this.body.nodes,f=this.physicsBody.physicsNodeIndices,p=this.physicsBody.forces,v=this.options.nodeDistance;for(d=0;d<f.length-1;d++)for(l=h[f[d]],c=d+1;c<f.length;c++)if(u=h[f[c]],l.level===u.level){n=u.x-l.x,i=u.y-l.y;a=(r=e(n*n+i*i))<v?-t(.05*r,2)+t(.05*v,2):0,0===r?r=.01:a/=r,o=n*a,s=i*a,p[l.id].x-=o,p[l.id].y-=s,p[u.id].x+=o,p[u.id].y+=s}}}]),n}(),Fl=function(){var e=Math.sqrt,t=Math.max;function n(e,t,i){ua(this,n),this.body=e,this.physicsBody=t,this.setOptions(i)}return ca(n,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var e,t,n,i,r,o=this.physicsBody.physicsEdgeIndices,s=this.body.edges,a=0;a<o.length;a++)!0===(t=s[o[a]]).connected&&t.toId!==t.fromId&&void 0!==this.body.nodes[t.toId]&&void 0!==this.body.nodes[t.fromId]&&(void 0===t.edgeType.via?(e=void 0===t.options.length?1.5*this.options.springLength:t.options.length,this._calculateSpringForce(t.from,t.to,e)):(e=void 0===t.options.length?this.options.springLength:t.options.length,n=t.to,i=t.edgeType.via,r=t.from,this._calculateSpringForce(n,i,.5*e),this._calculateSpringForce(i,r,.5*e)))}},{key:"_calculateSpringForce",value:function(n,i,r){var o=n.x-i.x,s=n.y-i.y,a=t(e(o*o+s*s),.01),l=this.options.springConstant*(r-a)/a,u=o*l,d=s*l;void 0!==this.physicsBody.forces[n.id]&&(this.physicsBody.forces[n.id].x+=u,this.physicsBody.forces[n.id].y+=d),void 0!==this.physicsBody.forces[i.id]&&(this.physicsBody.forces[i.id].x-=u,this.physicsBody.forces[i.id].y-=d)}}]),n}(),Il=function(){var e=Math.sqrt,t=Math.max,n=Math.min;function i(e,t,n){ua(this,i),this.body=e,this.physicsBody=t,this.setOptions(n)}return ca(i,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var i,r,o,s,a,l,u,d,c,h=this.body.edges,f=this.physicsBody.physicsEdgeIndices,p=this.physicsBody.physicsNodeIndices,v=this.physicsBody.forces,m=0;m<p.length;m++)v[c=p[m]].springFx=0,v[c].springFy=0;for(var y=0;y<f.length;y++)!0===(r=h[f[y]]).connected&&(i=void 0===r.options.length?this.options.springLength:r.options.length,o=r.from.x-r.to.x,s=r.from.y-r.to.y,d=0===(d=e(o*o+s*s))?.01:d,a=o*(u=this.options.springConstant*(i-d)/d),l=s*u,r.to.level==r.from.level?(void 0!==v[r.toId]&&(v[r.toId].x-=.5*a,v[r.toId].y-=.5*l),void 0!==v[r.fromId]&&(v[r.fromId].x+=.5*a,v[r.fromId].y+=.5*l)):(void 0!==v[r.toId]&&(v[r.toId].springFx-=a,v[r.toId].springFy-=l),void 0!==v[r.fromId]&&(v[r.fromId].springFx+=a,v[r.fromId].springFy+=l)));u=1;for(var g,b,_,w=0;w<p.length;w++)_=p[w],g=n(u,t(-u,v[_].springFx)),b=n(u,t(-u,v[_].springFy)),v[_].x+=g,v[_].y+=b;for(var k,x=0,S=0,O=0;O<p.length;O++)x+=v[k=p[O]].x,S+=v[k].y;for(var E,T=x/p.length,D=S/p.length,C=0;C<p.length;C++)v[E=p[C]].x-=T,v[E].y-=D}}]),i}(),jl=function(){var e=Math.sqrt;function t(e,n,i){ua(this,t),this.body=e,this.physicsBody=n,this.setOptions(i)}return ca(t,[{key:"setOptions",value:function(e){this.options=e}},{key:"solve",value:function(){for(var t,n,i,r,o=this.body.nodes,s=this.physicsBody.physicsNodeIndices,a=this.physicsBody.forces,l=0;l<s.length;l++)t=-(r=o[s[l]]).x,n=-r.y,i=e(t*t+n*n),this._calculateForces(i,t,n,a,r)}},{key:"_calculateForces",value:function(e,t,n,i,r){var o=0===e?0:this.options.centralGravity/e;i[r.id].x=t*o,i[r.id].y=n*o}}]),t}(),Rl=function(e){var t=Math.pow,n=Math.max;function i(e,t,n){return ua(this,i),Ca(this,Ma(i).call(this,e,t,n))}return Fa(i,e),ca(i,[{key:"_calculateForces",value:function(e,i,r,o,s){0===e&&(i=e=.1*Math.random()),1>this.overlapAvoidanceFactor&&o.shape.radius&&(e=n(.1+this.overlapAvoidanceFactor*o.shape.radius,e-o.shape.radius));var a=o.edges.length+1,l=this.options.gravitationalConstant*s.mass*o.options.mass*a/t(e,2),u=i*l;this.physicsBody.forces[o.id].x+=u,this.physicsBody.forces[o.id].y+=r*l}}]),i}(Ml),Al=function(e){function t(e,n,i){return ua(this,t),Ca(this,Ma(t).call(this,e,n,i))}return Fa(t,e),ca(t,[{key:"_calculateForces",value:function(e,t,n,i,r){if(0<e){var o=r.edges.length+1,s=this.options.centralGravity*o*r.options.mass;i[r.id].x=t*s,i[r.id].y=n*s}}}]),t}(jl),zl=function(){var e=Math.atan2,t=Math.sqrt,n=Math.pow,i=Math.max,r=Math.abs,o=Math.min;function s(e){ua(this,s),this.body=e,this.physicsBody={physicsNodeIndices:[],physicsEdgeIndices:[],forces:{},velocities:{}},this.physicsEnabled=!0,this.simulationInterval=1e3/60,this.requiresTimeout=!0,this.previousStates={},this.referenceState={},this.freezeCache={},this.renderTimer=void 0,this.adaptiveTimestep=!1,this.adaptiveTimestepEnabled=!1,this.adaptiveCounter=0,this.adaptiveInterval=3,this.stabilized=!1,this.startedStabilization=!1,this.stabilizationIterations=0,this.ready=!1,this.options={},this.defaultOptions={enabled:!0,barnesHut:{theta:.5,gravitationalConstant:-2e3,centralGravity:.3,springLength:95,springConstant:.04,damping:.09,avoidOverlap:0},forceAtlas2Based:{theta:.5,gravitationalConstant:-50,centralGravity:.01,springConstant:.08,springLength:100,damping:.4,avoidOverlap:0},repulsion:{centralGravity:.2,springLength:200,springConstant:.05,nodeDistance:100,damping:.09,avoidOverlap:0},hierarchicalRepulsion:{centralGravity:0,springLength:100,springConstant:.01,nodeDistance:120,damping:.09},maxVelocity:50,minVelocity:.75,solver:"barnesHut",stabilization:{enabled:!0,iterations:1e3,updateInterval:50,onlyDynamicEdges:!1,fit:!0},timestep:.5,adaptiveTimestep:!0},Xi.extend(this.options,this.defaultOptions),this.timestep=.5,this.layoutFailed=!1,this.bindEventListeners()}return ca(s,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("initPhysics",(function(){e.initPhysics()})),this.body.emitter.on("_layoutFailed",(function(){e.layoutFailed=!0})),this.body.emitter.on("resetPhysics",(function(){e.stopSimulation(),e.ready=!1})),this.body.emitter.on("disablePhysics",(function(){e.physicsEnabled=!1,e.stopSimulation()})),this.body.emitter.on("restorePhysics",(function(){e.setOptions(e.options),!0===e.ready&&e.startSimulation()})),this.body.emitter.on("startSimulation",(function(){!0===e.ready&&e.startSimulation()})),this.body.emitter.on("stopSimulation",(function(){e.stopSimulation()})),this.body.emitter.on("destroy",(function(){e.stopSimulation(!1),e.body.emitter.off()})),this.body.emitter.on("_dataChanged",(function(){e.updatePhysicsData()}))}},{key:"setOptions",value:function(e){void 0!==e&&(!1===e?(this.options.enabled=!1,this.physicsEnabled=!1,this.stopSimulation()):!0===e?(this.options.enabled=!0,this.physicsEnabled=!0,this.startSimulation()):(this.physicsEnabled=!0,Xi.selectiveNotDeepExtend(["stabilization"],this.options,e),Xi.mergeOptions(this.options,e,"stabilization"),void 0===e.enabled&&(this.options.enabled=!0),!1===this.options.enabled&&(this.physicsEnabled=!1,this.stopSimulation()),this.timestep=this.options.timestep)),this.init()}},{key:"init",value:function(){var e;"forceAtlas2Based"===this.options.solver?(e=this.options.forceAtlas2Based,this.nodesSolver=new Rl(this.body,this.physicsBody,e),this.edgesSolver=new Fl(this.body,this.physicsBody,e),this.gravitySolver=new Al(this.body,this.physicsBody,e)):"repulsion"===this.options.solver?(e=this.options.repulsion,this.nodesSolver=new Pl(this.body,this.physicsBody,e),this.edgesSolver=new Fl(this.body,this.physicsBody,e),this.gravitySolver=new jl(this.body,this.physicsBody,e)):"hierarchicalRepulsion"===this.options.solver?(e=this.options.hierarchicalRepulsion,this.nodesSolver=new Nl(this.body,this.physicsBody,e),this.edgesSolver=new Il(this.body,this.physicsBody,e),this.gravitySolver=new jl(this.body,this.physicsBody,e)):(e=this.options.barnesHut,this.nodesSolver=new Ml(this.body,this.physicsBody,e),this.edgesSolver=new Fl(this.body,this.physicsBody,e),this.gravitySolver=new jl(this.body,this.physicsBody,e)),this.modelOptions=e}},{key:"initPhysics",value:function(){!0===this.physicsEnabled&&!0===this.options.enabled?!0===this.options.stabilization.enabled?this.stabilize():(this.stabilized=!1,this.ready=!0,this.body.emitter.emit("fit",{},this.layoutFailed),this.startSimulation()):(this.ready=!0,this.body.emitter.emit("fit"))}},{key:"startSimulation",value:function(){!0===this.physicsEnabled&&!0===this.options.enabled?(this.stabilized=!1,this.adaptiveTimestep=!1,this.body.emitter.emit("_resizeNodes"),void 0===this.viewFunction&&(this.viewFunction=this.simulationStep.bind(this),this.body.emitter.on("initRedraw",this.viewFunction),this.body.emitter.emit("_startRendering"))):this.body.emitter.emit("_redraw")}},{key:"stopSimulation",value:function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0];this.stabilized=!0,!0===e&&this._emitStabilized(),void 0!==this.viewFunction&&(this.body.emitter.off("initRedraw",this.viewFunction),this.viewFunction=void 0,!0===e&&this.body.emitter.emit("_stopRendering"))}},{key:"simulationStep",value:function(){var e=Date.now();this.physicsTick(),(Date.now()-e<.4*this.simulationInterval||!0===this.runDoubleSpeed)&&!1===this.stabilized&&(this.physicsTick(),this.runDoubleSpeed=!0),!0===this.stabilized&&this.stopSimulation()}},{key:"_emitStabilized",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.stabilizationIterations;(1<this.stabilizationIterations||!0===this.startedStabilization)&&setTimeout((function(){e.body.emitter.emit("stabilized",{iterations:t}),e.startedStabilization=!1,e.stabilizationIterations=0}),0)}},{key:"physicsStep",value:function(){this.gravitySolver.solve(),this.nodesSolver.solve(),this.edgesSolver.solve(),this.moveNodes()}},{key:"adjustTimeStep",value:function(){!0===this._evaluateStepQuality()?this.timestep=1.2*this.timestep:this.timestep/1.2<this.options.timestep?this.timestep=this.options.timestep:(this.adaptiveCounter=-1,this.timestep=i(this.options.timestep,this.timestep/1.2))}},{key:"physicsTick",value:function(){if(this._startStabilizing(),!0!==this.stabilized){if(!0===this.adaptiveTimestep&&!0===this.adaptiveTimestepEnabled)0==this.adaptiveCounter%this.adaptiveInterval?(this.timestep=2*this.timestep,this.physicsStep(),this.revert(),this.timestep=.5*this.timestep,this.physicsStep(),this.physicsStep(),this.adjustTimeStep()):this.physicsStep(),this.adaptiveCounter+=1;else this.timestep=this.options.timestep,this.physicsStep();!0===this.stabilized&&this.revert(),this.stabilizationIterations++}}},{key:"updatePhysicsData",value:function(){this.physicsBody.forces={},this.physicsBody.physicsNodeIndices=[],this.physicsBody.physicsEdgeIndices=[];var e=this.body.nodes,t=this.body.edges;for(var n in e)e.hasOwnProperty(n)&&!0===e[n].options.physics&&this.physicsBody.physicsNodeIndices.push(e[n].id);for(var i in t)t.hasOwnProperty(i)&&!0===t[i].options.physics&&this.physicsBody.physicsEdgeIndices.push(t[i].id);for(var r,o=0;o<this.physicsBody.physicsNodeIndices.length;o++)r=this.physicsBody.physicsNodeIndices[o],this.physicsBody.forces[r]={x:0,y:0},void 0===this.physicsBody.velocities[r]&&(this.physicsBody.velocities[r]={x:0,y:0});for(var s in this.physicsBody.velocities)void 0===e[s]&&delete this.physicsBody.velocities[s]}},{key:"revert",value:function(){var e=Object.keys(this.previousStates),t=this.body.nodes,n=this.physicsBody.velocities;this.referenceState={};for(var i,r=0;r<e.length;r++)void 0===t[i=e[r]]?delete this.previousStates[i]:!0===t[i].options.physics&&(this.referenceState[i]={positions:{x:t[i].x,y:t[i].y}},n[i].x=this.previousStates[i].vx,n[i].y=this.previousStates[i].vy,t[i].x=this.previousStates[i].x,t[i].y=this.previousStates[i].y)}},{key:"_evaluateStepQuality",value:function(){var e,i,r=this.body.nodes,o=this.referenceState;for(var s in this.referenceState)if(this.referenceState.hasOwnProperty(s)&&void 0!==r[s]&&(e=r[s].x-o[s].positions.x,i=r[s].y-o[s].positions.y,t(n(e,2)+n(i,2))>.3))return!1;return!0}},{key:"moveNodes",value:function(){for(var e=this.physicsBody.physicsNodeIndices,t=0,n=0,r=0;r<e.length;r++){var o=e[r],s=this._performStep(o);t=i(t,s),n+=s}this.adaptiveTimestepEnabled=n/e.length<5,this.stabilized=t<this.options.minVelocity}},{key:"calculateComponentVelocity",value:function(e,t,n){e+=(t-this.modelOptions.damping*e)/n*this.timestep;var i=this.options.maxVelocity||1e9;return r(e)>i&&(e=0<e?i:-i),e}},{key:"_performStep",value:function(e){var i=this.body.nodes[e],r=this.physicsBody.forces[e],o=this.physicsBody.velocities[e];return this.previousStates[e]={x:i.x,y:i.y,vx:o.x,vy:o.y},!1===i.options.fixed.x?(o.x=this.calculateComponentVelocity(o.x,r.x,i.options.mass),i.x+=o.x*this.timestep):(r.x=0,o.x=0),!1===i.options.fixed.y?(o.y=this.calculateComponentVelocity(o.y,r.y,i.options.mass),i.y+=o.y*this.timestep):(r.y=0,o.y=0),t(n(o.x,2)+n(o.y,2))}},{key:"_freezeNodes",value:function(){var e=this.body.nodes;for(var t in e)if(e.hasOwnProperty(t)&&e[t].x&&e[t].y){var n=e[t].options.fixed;this.freezeCache[t]={x:n.x,y:n.y},n.x=!0,n.y=!0}}},{key:"_restoreFrozenNodes",value:function(){var e=this.body.nodes;for(var t in e)e.hasOwnProperty(t)&&void 0!==this.freezeCache[t]&&(e[t].options.fixed.x=this.freezeCache[t].x,e[t].options.fixed.y=this.freezeCache[t].y);this.freezeCache={}}},{key:"stabilize",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.options.stabilization.iterations;return"number"!=typeof t&&(t=this.options.stabilization.iterations,console.log("The stabilize method needs a numeric amount of iterations. Switching to default: ",t)),0===this.physicsBody.physicsNodeIndices.length?void(this.ready=!0):(this.adaptiveTimestep=this.options.adaptiveTimestep,this.body.emitter.emit("_resizeNodes"),this.stopSimulation(),this.stabilized=!1,this.body.emitter.emit("_blockRedraw"),this.targetIterations=t,!0===this.options.stabilization.onlyDynamicEdges&&this._freezeNodes(),this.stabilizationIterations=0,void setTimeout((function(){return e._stabilizationBatch()}),0))}},{key:"_startStabilizing",value:function(){return!0!==this.startedStabilization&&(this.body.emitter.emit("startStabilizing"),this.startedStabilization=!0,!0)}},{key:"_stabilizationBatch",value:function(){var e=this,t=function(){return!1===e.stabilized&&e.stabilizationIterations<e.targetIterations},n=function(){e.body.emitter.emit("stabilizationProgress",{iterations:e.stabilizationIterations,total:e.targetIterations})};this._startStabilizing()&&n();for(var i=0;t()&&i<this.options.stabilization.updateInterval;)this.physicsTick(),i++;n(),t()?setTimeout(this._stabilizationBatch.bind(this),0):this._finalizeStabilization()}},{key:"_finalizeStabilization",value:function(){this.body.emitter.emit("_allowRedraw"),!0===this.options.stabilization.fit&&this.body.emitter.emit("fit"),!0===this.options.stabilization.onlyDynamicEdges&&this._restoreFrozenNodes(),this.body.emitter.emit("stabilizationIterationsDone"),this.body.emitter.emit("_requestRedraw"),!0===this.stabilized?this._emitStabilized():this.startSimulation(),this.ready=!0}},{key:"_drawForces",value:function(r){for(var s=0;s<this.physicsBody.physicsNodeIndices.length;s++){var a=this.physicsBody.physicsNodeIndices[s],l=this.body.nodes[a],u=this.physicsBody.forces[a],d=t(n(u.x,2)+n(u.x,2)),c=o(i(5,d),15),h=Xi.HSVToHex((180-180*o(1,i(0,.03*d)))/360,1,1),f={x:l.x+20*u.x,y:l.y+20*u.y};r.lineWidth=c,r.strokeStyle=h,r.beginPath(),r.moveTo(l.x,l.y),r.lineTo(f.x,f.y),r.stroke();var p=e(u.y,u.x);r.fillStyle=h,gl.draw(r,{type:"arrow",point:f,angle:p,length:3*c}),r.fill()}}}]),s}(),Ll=function(){function e(){ua(this,e)}return ca(e,null,[{key:"getRange",value:function(e){var t,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],i=1e9,r=-1e9,o=1e9,s=-1e9;if(0<n.length)for(var a=0;a<n.length;a++)o>(t=e[n[a]]).shape.boundingBox.left&&(o=t.shape.boundingBox.left),s<t.shape.boundingBox.right&&(s=t.shape.boundingBox.right),i>t.shape.boundingBox.top&&(i=t.shape.boundingBox.top),r<t.shape.boundingBox.bottom&&(r=t.shape.boundingBox.bottom);return 1e9===o&&-1e9===s&&1e9===i&&-1e9===r&&(i=0,r=0,o=0,s=0),{minX:o,maxX:s,minY:i,maxY:r}}},{key:"getRangeCore",value:function(e){var t,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],i=1e9,r=-1e9,o=1e9,s=-1e9;if(0<n.length)for(var a=0;a<n.length;a++)o>(t=e[n[a]]).x&&(o=t.x),s<t.x&&(s=t.x),i>t.y&&(i=t.y),r<t.y&&(r=t.y);return 1e9===o&&-1e9===s&&1e9===i&&-1e9===r&&(i=0,r=0,o=0,s=0),{minX:o,maxX:s,minY:i,maxY:r}}},{key:"findCenter",value:function(e){return{x:.5*(e.maxX+e.minX),y:.5*(e.maxY+e.minY)}}},{key:"cloneOptions",value:function(e,t){var n={};return void 0===t||"node"===t?(Xi.deepExtend(n,e.options,!0),n.x=e.x,n.y=e.y,n.amountOfConnections=e.edges.length):Xi.deepExtend(n,e.options,!0),n}}]),e}(),Yl=function(e){function t(e,n,i,r,o,s){var a;return ua(this,t),(a=Ca(this,Ma(t).call(this,e,n,i,r,o,s))).isCluster=!0,a.containedNodes={},a.containedEdges={},a}return Fa(t,e),ca(t,[{key:"_openChildCluster",value:function(e){var t=this,n=this.body.nodes[e];if(void 0===this.containedNodes[e])throw new Error("node with id: "+e+" not in current cluster");if(!n.isCluster)throw new Error("node with id: "+e+" is not a cluster");delete this.containedNodes[e],Xi.forEach(n.edges,(function(e){delete t.containedEdges[e.id]})),Xi.forEach(n.containedNodes,(function(e,n){t.containedNodes[n]=e})),n.containedNodes={},Xi.forEach(n.containedEdges,(function(e,n){t.containedEdges[n]=e})),n.containedEdges={},Xi.forEach(n.edges,(function(e){Xi.forEach(t.edges,(function(n){var i=n.clusteringEdgeReplacingIds.indexOf(e.id);-1===i||(Xi.forEach(e.clusteringEdgeReplacingIds,(function(e){n.clusteringEdgeReplacingIds.push(e),t.body.edges[e].edgeReplacedById=n.id})),n.clusteringEdgeReplacingIds.splice(i,1))}))})),n.edges=[]}}]),t}(nl),Bl=function(){var e=Math.sqrt,t=Math.pow,n=Math.floor;function i(e){var t=this;ua(this,i),this.body=e,this.clusteredNodes={},this.clusteredEdges={},this.options={},this.defaultOptions={},Xi.extend(this.options,this.defaultOptions),this.body.emitter.on("_resetData",(function(){t.clusteredNodes={},t.clusteredEdges={}}))}return ca(i,[{key:"clusterByHubsize",value:function(e,t){void 0===e?e=this._getHubSize():"object"===_a(e)&&(t=this._checkOptions(e),e=this._getHubSize());for(var n,i=[],r=0;r<this.body.nodeIndices.length;r++)(n=this.body.nodes[this.body.nodeIndices[r]]).edges.length>=e&&i.push(n.id);for(var o=0;o<i.length;o++)this.clusterByConnection(i[o],t,!0);this.body.emitter.emit("_dataChanged")}},{key:"cluster",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},n=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if(void 0===t.joinCondition)throw new Error("Cannot call clusterByNodeData without a joinCondition function in the options.");t=this._checkOptions(t);var i={},r={};Xi.forEach(this.body.nodes,(function(n,o){n.options&&!0===t.joinCondition(n.options)&&(i[o]=n,Xi.forEach(n.edges,(function(t){void 0===e.clusteredEdges[t.id]&&(r[t.id]=t)})))})),this._cluster(i,r,t,n)}},{key:"clusterByEdgeCount",value:function(e,t){var n=this,i=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];t=this._checkOptions(t);for(var r,o,s,a=[],l={},u=function(i){var u={},d={},f=n.body.nodeIndices[i],p=n.body.nodes[f];if(void 0===l[f]){s=0,o=[];for(var v=0;v<p.edges.length;v++)r=p.edges[v],void 0===n.clusteredEdges[r.id]&&(r.toId!==r.fromId&&s++,o.push(r));if(s===e){c=function(e){if(void 0===t.joinCondition||null===t.joinCondition)return!0;var n=Ll.cloneOptions(e);return t.joinCondition(n)};for(var m=!0,y=0;y<o.length;y++){r=o[y];var g=n._getConnectedId(r,f);if(!c(p)){m=!1;break}d[r.id]=r,u[f]=p,u[g]=n.body.nodes[g],l[f]=!0}if(0<Object.keys(u).length&&0<Object.keys(d).length&&!0===m)if(void 0!==(h=function(){for(var e=0;e<a.length;++e)for(var t in u)if(void 0!==a[e].nodes[t])return a[e]}())){for(var b in u)void 0===h.nodes[b]&&(h.nodes[b]=u[b]);for(var _ in d)void 0===h.edges[_]&&(h.edges[_]=d[_])}else a.push({nodes:u,edges:d})}}},d=0;d<this.body.nodeIndices.length;d++){var c,h;u(d)}for(d=0;d<a.length;d++)this._cluster(a[d].nodes,a[d].edges,t,!1);!0===i&&this.body.emitter.emit("_dataChanged")}},{key:"clusterOutliers",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];this.clusterByEdgeCount(1,e,t)}},{key:"clusterBridges",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];this.clusterByEdgeCount(2,e,t)}},{key:"clusterByConnection",value:function(e,t){var n=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];if(void 0===e)throw new Error("No nodeId supplied to clusterByConnection!");if(void 0===this.body.nodes[e])throw new Error("The nodeId given to clusterByConnection does not exist!");var i=this.body.nodes[e];void 0===(t=this._checkOptions(t,i)).clusterNodeProperties.x&&(t.clusterNodeProperties.x=i.x),void 0===t.clusterNodeProperties.y&&(t.clusterNodeProperties.y=i.y),void 0===t.clusterNodeProperties.fixed&&(t.clusterNodeProperties.fixed={},t.clusterNodeProperties.fixed.x=i.options.fixed.x,t.clusterNodeProperties.fixed.y=i.options.fixed.y);var r={},o={},s=i.id,a=Ll.cloneOptions(i);r[s]=i;for(var l,u=0;u<i.edges.length;u++)if(l=i.edges[u],void 0===this.clusteredEdges[l.id]){var d=this._getConnectedId(l,s);if(void 0===this.clusteredNodes[d])if(d===s)o[l.id]=l;else if(void 0===t.joinCondition)o[l.id]=l,r[d]=this.body.nodes[d];else{var c=Ll.cloneOptions(this.body.nodes[d]);!0===t.joinCondition(a,c)&&(o[l.id]=l,r[d]=this.body.nodes[d])}}var h=Object.keys(r).map((function(e){return r[e].id}));for(p in r)if(r.hasOwnProperty(p))for(var f,p=r[p],v=0;v<p.edges.length;v++)f=p.edges[v],-1<h.indexOf(this._getConnectedId(f,p.id))&&(o[f.id]=f);this._cluster(r,o,t,n)}},{key:"_createClusterEdges",value:function(e,t,n,i){for(var r,o,s,a,l,u,d=Object.keys(e),c=[],h=0;h<d.length;h++){s=e[o=d[h]];for(var f=0;f<s.edges.length;f++)r=s.edges[f],void 0===this.clusteredEdges[r.id]&&(r.toId==r.fromId?t[r.id]=r:r.toId==o?(a=n.id,u=l=r.fromId):(a=r.toId,l=n.id,u=a),void 0===e[u]&&c.push({edge:r,fromId:l,toId:a}))}for(var p=[],v=function(e){for(var t=0;t<p.length;t++){var n=p[t],i=e.fromId===n.fromId&&e.toId===n.toId,r=e.fromId===n.toId&&e.toId===n.fromId;if(i||r)return n}return null},m=0;m<c.length;m++){var y=c[m],g=y.edge,b=v(y);null===b?(b=this._createClusteredEdge(y.fromId,y.toId,g,i),p.push(b)):b.clusteringEdgeReplacingIds.push(g.id),this.body.edges[g.id].edgeReplacedById=b.id,this._backupEdgeOptions(g),g.setOptions({physics:!1})}}},{key:"_checkOptions",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return void 0===e.clusterEdgeProperties&&(e.clusterEdgeProperties={}),void 0===e.clusterNodeProperties&&(e.clusterNodeProperties={}),e}},{key:"_cluster",value:function(e,t,n){var i=!(3<arguments.length&&void 0!==arguments[3])||arguments[3],r=[];for(var o in e)e.hasOwnProperty(o)&&void 0!==this.clusteredNodes[o]&&r.push(o);for(var s=0;s<r.length;++s)delete e[r[s]];if(0!=Object.keys(e).length&&(1!=Object.keys(e).length||1==n.clusterNodeProperties.allowSingleNodeCluster)){var a=Xi.deepExtend({},n.clusterNodeProperties);if(void 0!==n.processProperties){var l=[];for(var u in e)if(e.hasOwnProperty(u)){var d=Ll.cloneOptions(e[u]);l.push(d)}var c=[];for(var h in t)if(t.hasOwnProperty(h)&&"clusterEdge:"!==h.substr(0,12)){var f=Ll.cloneOptions(t[h],"edge");c.push(f)}if(!(a=n.processProperties(a,l,c)))throw new Error("The processProperties function does not return properties!")}void 0===a.id&&(a.id="cluster:"+Xi.randomUUID());var p,v=a.id;void 0===a.label&&(a.label="cluster"),void 0===a.x&&(p=this._getClusterPosition(e),a.x=p.x),void 0===a.y&&(void 0===p&&(p=this._getClusterPosition(e)),a.y=p.y),a.id=v;var m=this.body.functions.createNode(a,Yl);m.containedNodes=e,m.containedEdges=t,m.clusterEdgeProperties=n.clusterEdgeProperties,this.body.nodes[a.id]=m,this._clusterEdges(e,t,a,n.clusterEdgeProperties),a.id=void 0,!0===i&&this.body.emitter.emit("_dataChanged")}}},{key:"_backupEdgeOptions",value:function(e){void 0===this.clusteredEdges[e.id]&&(this.clusteredEdges[e.id]={physics:e.options.physics})}},{key:"_restoreEdge",value:function(e){var t=this.clusteredEdges[e.id];void 0!==t&&(e.setOptions({physics:t.physics}),delete this.clusteredEdges[e.id])}},{key:"isCluster",value:function(e){return void 0===this.body.nodes[e]?(console.log("Node does not exist."),!1):!0===this.body.nodes[e].isCluster}},{key:"_getClusterPosition",value:function(e){for(var t,n=Object.keys(e),i=e[n[0]].x,r=e[n[0]].x,o=e[n[0]].y,s=e[n[0]].y,a=1;a<n.length;a++)i=(t=e[n[a]]).x<i?t.x:i,r=t.x>r?t.x:r,o=t.y<o?t.y:o,s=t.y>s?t.y:s;return{x:.5*(i+r),y:.5*(o+s)}}},{key:"openCluster",value:function(e,t){var n=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];if(void 0===e)throw new Error("No clusterNodeId supplied to openCluster.");var i=this.body.nodes[e];if(void 0===i)throw new Error("The clusterNodeId supplied to openCluster does not exist.");if(!0!==i.isCluster||void 0===i.containedNodes||void 0===i.containedEdges)throw new Error("The node:"+e+" is not a valid cluster.");var r=this.findNode(e),o=r.indexOf(e)-1;if(0<=o){var s=r[o],a=this.body.nodes[s];return a._openChildCluster(e),delete this.body.nodes[e],void(!0===n&&this.body.emitter.emit("_dataChanged"))}var l=i.containedNodes,u=i.containedEdges;if(void 0!==t&&void 0!==t.releaseFunction&&"function"==typeof t.releaseFunction){var d={},c={x:i.x,y:i.y};for(var h in l)if(l.hasOwnProperty(h)){var f=this.body.nodes[h];d[h]={x:f.x,y:f.y}}var p=t.releaseFunction(c,d);for(var v in l)if(l.hasOwnProperty(v)){var m=this.body.nodes[v];void 0!==p[v]&&(m.x=void 0===p[v].x?i.x:p[v].x,m.y=void 0===p[v].y?i.y:p[v].y)}}else Xi.forEach(l,(function(e){!1===e.options.fixed.x&&(e.x=i.x),!1===e.options.fixed.y&&(e.y=i.y)}));for(var y in l)if(l.hasOwnProperty(y)){var g=this.body.nodes[y];g.vx=i.vx,g.vy=i.vy,g.setOptions({physics:!0}),delete this.clusteredNodes[y]}for(var b=[],_=0;_<i.edges.length;_++)b.push(i.edges[_]);for(var w=0;w<b.length;w++){for(var k=b[w],x=this._getConnectedId(k,e),S=this.clusteredNodes[x],O=0;O<k.clusteringEdgeReplacingIds.length;O++){var E=k.clusteringEdgeReplacingIds[O],T=this.body.edges[E];if(void 0!==T)if(void 0!==S){var D=this.body.nodes[S.clusterId];D.containedEdges[T.id]=T,delete u[T.id];var C=T.fromId,M=T.toId;T.toId==x?M=S.clusterId:C=S.clusterId,this._createClusteredEdge(C,M,T,D.clusterEdgeProperties,{hidden:!1,physics:!0})}else this._restoreEdge(T)}k.remove()}for(var P in u)u.hasOwnProperty(P)&&this._restoreEdge(u[P]);delete this.body.nodes[e],!0===n&&this.body.emitter.emit("_dataChanged")}},{key:"getNodesInCluster",value:function(e){var t=[];if(!0===this.isCluster(e)){var n=this.body.nodes[e].containedNodes;for(var i in n)n.hasOwnProperty(i)&&t.push(this.body.nodes[i].id)}return t}},{key:"findNode",value:function(e){for(var t,n=[],i=0;void 0!==this.clusteredNodes[e]&&i<100;){if(void 0===(t=this.body.nodes[e]))return[];n.push(t.id),e=this.clusteredNodes[e].clusterId,i++}return void 0===(t=this.body.nodes[e])?[]:(n.push(t.id),n.reverse(),n)}},{key:"updateClusteredNode",value:function(e,t){if(void 0===e)throw new Error("No clusteredNodeId supplied to updateClusteredNode.");if(void 0===t)throw new Error("No newOptions supplied to updateClusteredNode.");if(void 0===this.body.nodes[e])throw new Error("The clusteredNodeId supplied to updateClusteredNode does not exist.");this.body.nodes[e].setOptions(t),this.body.emitter.emit("_dataChanged")}},{key:"updateEdge",value:function(e,t){if(void 0===e)throw new Error("No startEdgeId supplied to updateEdge.");if(void 0===t)throw new Error("No newOptions supplied to updateEdge.");if(void 0===this.body.edges[e])throw new Error("The startEdgeId supplied to updateEdge does not exist.");for(var n=this.getClusteredEdges(e),i=0;i<n.length;i++)this.body.edges[n[i]].setOptions(t);this.body.emitter.emit("_dataChanged")}},{key:"getClusteredEdges",value:function(e){for(var t=[],n=0;void 0!==e&&void 0!==this.body.edges[e]&&n<100;)t.push(this.body.edges[e].id),e=this.body.edges[e].edgeReplacedById,n++;return t.reverse(),t}},{key:"getBaseEdge",value:function(e){return this.getBaseEdges(e)[0]}},{key:"getBaseEdges",value:function(e){for(var t,n=[e],i=[],r=[],o=0;0<n.length&&o<100;)if(void 0!==(t=n.pop())){var s=this.body.edges[t];if(void 0!==s){o++;var a=s.clusteringEdgeReplacingIds;if(void 0===a)r.push(t);else for(var l,u=0;u<a.length;++u)l=a[u],-1===n.indexOf(a)&&-1===i.indexOf(a)&&n.push(l);i.push(t)}}return r}},{key:"_getConnectedId",value:function(e,t){return e.toId==t?(e.fromId,e.fromId):e.toId}},{key:"_getHubSize",value:function(){for(var i,r=0,o=0,s=0,a=0,l=0;l<this.body.nodeIndices.length;l++)(i=this.body.nodes[this.body.nodeIndices[l]]).edges.length>a&&(a=i.edges.length),r+=i.edges.length,o+=t(i.edges.length,2),s+=1;var u=(o/=s)-t(r/=s,2),d=e(u),c=n(r+2*d);return c>a&&(c=a),c}},{key:"_createClusteredEdge",value:function(e,t,n,i,r){var o=Ll.cloneOptions(n,"edge");Xi.deepExtend(o,i),o.from=e,o.to=t,o.id="clusterEdge:"+Xi.randomUUID(),void 0!==r&&Xi.deepExtend(o,r);var s=this.body.functions.createEdge(o);return s.clusteringEdgeReplacingIds=[n.id],s.connect(),this.body.edges[s.id]=s,s}},{key:"_clusterEdges",value:function(e,t,n,i){if(t instanceof Dl){var r=t,o={};o[r.id]=r,t=o}if(e instanceof nl){var s=e,a={};a[s.id]=s,e=a}if(null==n)throw new Error("_clusterEdges: parameter clusterNode required");for(var l in void 0===i&&(i=n.clusterEdgeProperties),this._createClusterEdges(e,t,n,i),t)if(t.hasOwnProperty(l)&&void 0!==this.body.edges[l]){var u=this.body.edges[l];this._backupEdgeOptions(u),u.setOptions({physics:!1})}for(var d in e)e.hasOwnProperty(d)&&(this.clusteredNodes[d]={clusterId:n.id,node:this.body.nodes[d]},this.body.nodes[d].setOptions({physics:!1}))}},{key:"_getClusterNodeForNode",value:function(e){if(void 0!==e){var t=this.clusteredNodes[e];if(void 0!==t){var n=t.clusterId;return void 0===n?void 0:this.body.nodes[n]}}}},{key:"_filter",value:function(e,t){var n=[];return Xi.forEach(e,(function(e){t(e)&&n.push(e)})),n}},{key:"_updateState",value:function(){var e,t=this,n=[],i={},r=function(e){Xi.forEach(t.body.nodes,(function(t){!0===t.isCluster&&e(t)}))};for(e in this.clusteredNodes)if(this.clusteredNodes.hasOwnProperty(e)){void 0===this.body.nodes[e]&&n.push(e)}r((function(e){for(var t=0;t<n.length;t++)delete e.containedNodes[n[t]]}));for(var o=0;o<n.length;o++)delete this.clusteredNodes[n[o]];Xi.forEach(this.clusteredEdges,(function(e){var n=t.body.edges[e];void 0!==n&&n.endPointsValid()||(i[e]=e)})),r((function(e){Xi.forEach(e.containedEdges,(function(e,t){e.endPointsValid()||i[t]||(i[t]=t)}))})),Xi.forEach(this.body.edges,(function(e,n){var r=!0,o=e.clusteringEdgeReplacingIds;if(void 0!==o){var s=0;Xi.forEach(o,(function(e){var n=t.body.edges[e];void 0!==n&&n.endPointsValid()&&(s+=1)})),r=0<s}e.endPointsValid()&&r||(i[n]=n)})),r((function(e){Xi.forEach(i,(function(n){delete e.containedEdges[n],Xi.forEach(e.edges,(function(r,o){return r.id===n?void(e.edges[o]=null):void(r.clusteringEdgeReplacingIds=t._filter(r.clusteringEdgeReplacingIds,(function(e){return!i[e]})))})),e.edges=t._filter(e.edges,(function(e){return null!==e}))}))})),Xi.forEach(i,(function(e){delete t.clusteredEdges[e]})),Xi.forEach(i,(function(e){delete t.body.edges[e]}));var s=Object.keys(this.body.edges);Xi.forEach(s,(function(e){var n=t.body.edges[e],i=t._isClusteredNode(n.fromId)||t._isClusteredNode(n.toId);if(i!==t._isClusteredEdge(n.id))if(i){var r=t._getClusterNodeForNode(n.fromId);void 0!==r&&t._clusterEdges(t.body.nodes[n.fromId],n,r);var o=t._getClusterNodeForNode(n.toId);void 0!==o&&t._clusterEdges(t.body.nodes[n.toId],n,o)}else delete t._clusterEdges[e],t._restoreEdge(n)}));for(var a=!1,l=!0,u=function(){var e=[];r((function(t){var n=Object.keys(t.containedNodes).length,i=!0===t.options.allowSingleNodeCluster;(i&&1>n||!i&&2>n)&&e.push(t.id)}));for(var n=0;n<e.length;++n)t.openCluster(e[n],{},!1);l=0<e.length,a=a||l};l;)u();a&&this._updateState()}},{key:"_isClusteredNode",value:function(e){return void 0!==this.clusteredNodes[e]}},{key:"_isClusteredEdge",value:function(e){return void 0!==this.clusteredEdges[e]}}]),i}();var Wl=function(){function e(t,n){ua(this,e),function(){var e;void 0!==window&&(e=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame),window.requestAnimationFrame=void 0===e?function(e){e()}:e}(),this.body=t,this.canvas=n,this.redrawRequested=!1,this.renderTimer=void 0,this.requiresTimeout=!0,this.renderingActive=!1,this.renderRequests=0,this.allowRedraw=!0,this.dragging=!1,this.zooming=!1,this.options={},this.defaultOptions={hideEdgesOnDrag:!1,hideEdgesOnZoom:!1,hideNodesOnDrag:!1},Xi.extend(this.options,this.defaultOptions),this._determineBrowserMethod(),this.bindEventListeners()}return ca(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("dragStart",(function(){e.dragging=!0})),this.body.emitter.on("dragEnd",(function(){e.dragging=!1})),this.body.emitter.on("zoom",(function(){e.zooming=!0,window.clearTimeout(e.zoomTimeoutId),e.zoomTimeoutId=window.setTimeout((function(){e.zooming=!1,e._requestRedraw.bind(e)()}),250)})),this.body.emitter.on("_resizeNodes",(function(){e._resizeNodes()})),this.body.emitter.on("_redraw",(function(){!1===e.renderingActive&&e._redraw()})),this.body.emitter.on("_blockRedraw",(function(){e.allowRedraw=!1})),this.body.emitter.on("_allowRedraw",(function(){e.allowRedraw=!0,e.redrawRequested=!1})),this.body.emitter.on("_requestRedraw",this._requestRedraw.bind(this)),this.body.emitter.on("_startRendering",(function(){e.renderRequests+=1,e.renderingActive=!0,e._startRendering()})),this.body.emitter.on("_stopRendering",(function(){e.renderRequests-=1,e.renderingActive=0<e.renderRequests,e.renderTimer=void 0})),this.body.emitter.on("destroy",(function(){e.renderRequests=0,e.allowRedraw=!1,e.renderingActive=!1,!0===e.requiresTimeout?clearTimeout(e.renderTimer):window.cancelAnimationFrame(e.renderTimer),e.body.emitter.off()}))}},{key:"setOptions",value:function(e){void 0!==e&&Xi.selectiveDeepExtend(["hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag"],this.options,e)}},{key:"_requestNextFrame",value:function(e,t){if("undefined"!=typeof window){var n,i=window;return!0===this.requiresTimeout?n=i.setTimeout(e,t):i.requestAnimationFrame&&(n=i.requestAnimationFrame(e)),n}}},{key:"_startRendering",value:function(){!0===this.renderingActive&&void 0===this.renderTimer&&(this.renderTimer=this._requestNextFrame(this._renderStep.bind(this),this.simulationInterval))}},{key:"_renderStep",value:function(){!0===this.renderingActive&&(this.renderTimer=void 0,!0===this.requiresTimeout&&this._startRendering(),this._redraw(),!1===this.requiresTimeout&&this._startRendering())}},{key:"redraw",value:function(){this.body.emitter.emit("setSize"),this._redraw()}},{key:"_requestRedraw",value:function(){var e=this;!0!==this.redrawRequested&&!1===this.renderingActive&&!0===this.allowRedraw&&(this.redrawRequested=!0,this._requestNextFrame((function(){e._redraw(!1)}),0))}},{key:"_redraw",value:function(){var e=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];if(!0===this.allowRedraw){this.body.emitter.emit("initRedraw"),this.redrawRequested=!1,(0===this.canvas.frame.canvas.width||0===this.canvas.frame.canvas.height)&&this.canvas.setSize(),this.canvas.setTransform();var t=this.canvas.getContext(),n=this.canvas.frame.canvas.clientWidth,i=this.canvas.frame.canvas.clientHeight;if(t.clearRect(0,0,n,i),0===this.canvas.frame.clientWidth)return;t.save(),t.translate(this.body.view.translation.x,this.body.view.translation.y),t.scale(this.body.view.scale,this.body.view.scale),t.beginPath(),this.body.emitter.emit("beforeDrawing",t),t.closePath(),!1===e&&(!1===this.dragging||!0===this.dragging&&!1===this.options.hideEdgesOnDrag)&&(!1===this.zooming||!0===this.zooming&&!1===this.options.hideEdgesOnZoom)&&this._drawEdges(t),(!1===this.dragging||!0===this.dragging&&!1===this.options.hideNodesOnDrag)&&this._drawNodes(t,e),t.beginPath(),this.body.emitter.emit("afterDrawing",t),t.closePath(),t.restore(),!0===e&&t.clearRect(0,0,n,i)}}},{key:"_resizeNodes",value:function(){this.canvas.setTransform();var e=this.canvas.getContext();e.save(),e.translate(this.body.view.translation.x,this.body.view.translation.y),e.scale(this.body.view.scale,this.body.view.scale);var t,n=this.body.nodes;for(var i in n)n.hasOwnProperty(i)&&((t=n[i]).resize(e),t.updateBoundingBox(e,t.selected));e.restore()}},{key:"_drawNodes",value:function(e){for(var t,n=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],i=this.body.nodes,r=this.body.nodeIndices,o=[],s=20,a=this.canvas.DOMtoCanvas({x:-s,y:-s}),l=this.canvas.DOMtoCanvas({x:this.canvas.frame.canvas.clientWidth+s,y:this.canvas.frame.canvas.clientHeight+s}),u={top:a.y,left:a.x,bottom:l.y,right:l.x},d=0;d<r.length;d++)(t=i[r[d]]).isSelected()?o.push(r[d]):!0===n?t.draw(e):!0===t.isBoundingBoxOverlappingWith(u)?t.draw(e):t.updateBoundingBox(e,t.selected);for(var c=0;c<o.length;c++)(t=i[o[c]]).draw(e)}},{key:"_drawEdges",value:function(e){for(var t,n=this.body.edges,i=this.body.edgeIndices,r=0;r<i.length;r++)!0===(t=n[i[r]]).connected&&t.draw(e)}},{key:"_determineBrowserMethod",value:function(){if("undefined"!=typeof window){var e=navigator.userAgent.toLowerCase();this.requiresTimeout=!1,-1==e.indexOf("msie 9.0")?-1!=e.indexOf("safari")&&-1>=e.indexOf("chrome")&&(this.requiresTimeout=!0):this.requiresTimeout=!0}else this.requiresTimeout=!0}}]),e}(),Hl=Hr((function(e,t){t.onTouch=function(e,t){t.inputHandler=function(e){e.isFirst&&t(e)},e.on("hammer.input",t.inputHandler)},t.onRelease=function(e,t){return t.inputHandler=function(e){e.isFinal&&t(e)},e.on("hammer.input",t.inputHandler)},t.offTouch=function(e,t){e.off("hammer.input",t.inputHandler)},t.offRelease=t.offTouch,t.disablePreventDefaultVertically=function(e){return e.getTouchAction=function(){return["pan-y"]},e}})),Vl=(Hl.onTouch,Hl.onRelease,Hl.offTouch,Hl.offRelease,Hl.disablePreventDefaultVertically,function(){var e=Math.round;function t(e){ua(this,t),this.body=e,this.pixelRatio=1,this.resizeTimer=void 0,this.resizeFunction=this._onResize.bind(this),this.cameraState={},this.initialized=!1,this.canvasViewCenter={},this.options={},this.defaultOptions={autoResize:!0,height:"100%",width:"100%"},Xi.extend(this.options,this.defaultOptions),this.bindEventListeners()}return ca(t,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.once("resize",(function(t){0!==t.width&&(e.body.view.translation.x=.5*t.width),0!==t.height&&(e.body.view.translation.y=.5*t.height)})),this.body.emitter.on("setSize",this.setSize.bind(this)),this.body.emitter.on("destroy",(function(){e.hammerFrame.destroy(),e.hammer.destroy(),e._cleanUp()}))}},{key:"setOptions",value:function(e){var t=this;void 0!==e&&Xi.selectiveDeepExtend(["width","height","autoResize"],this.options,e),!0===this.options.autoResize&&(this._cleanUp(),this.resizeTimer=setInterval((function(){!0===t.setSize()&&t.body.emitter.emit("_requestRedraw")}),1e3),this.resizeFunction=this._onResize.bind(this),Xi.addEventListener(window,"resize",this.resizeFunction))}},{key:"_cleanUp",value:function(){void 0!==this.resizeTimer&&clearInterval(this.resizeTimer),Xi.removeEventListener(window,"resize",this.resizeFunction),this.resizeFunction=void 0}},{key:"_onResize",value:function(){this.setSize(),this.body.emitter.emit("_redraw")}},{key:"_getCameraState",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.pixelRatio;!0===this.initialized&&(this.cameraState.previousWidth=this.frame.canvas.width/e,this.cameraState.previousHeight=this.frame.canvas.height/e,this.cameraState.scale=this.body.view.scale,this.cameraState.position=this.DOMtoCanvas({x:.5*this.frame.canvas.width/e,y:.5*this.frame.canvas.height/e}))}},{key:"_setCameraState",value:function(){if(void 0!==this.cameraState.scale&&0!==this.frame.canvas.clientWidth&&0!==this.frame.canvas.clientHeight&&0!==this.pixelRatio&&0<this.cameraState.previousWidth){var e=this.frame.canvas.width/this.pixelRatio/this.cameraState.previousWidth,t=this.frame.canvas.height/this.pixelRatio/this.cameraState.previousHeight,n=this.cameraState.scale;1!=e&&1!=t?n=.5*this.cameraState.scale*(e+t):1==e?1!=t&&(n=this.cameraState.scale*t):n=this.cameraState.scale*e,this.body.view.scale=n;var i=this.DOMtoCanvas({x:.5*this.frame.canvas.clientWidth,y:.5*this.frame.canvas.clientHeight}),r={x:i.x-this.cameraState.position.x,y:i.y-this.cameraState.position.y};this.body.view.translation.x+=r.x*this.body.view.scale,this.body.view.translation.y+=r.y*this.body.view.scale}}},{key:"_prepareValue",value:function(e){if("number"==typeof e)return e+"px";if("string"==typeof e){if(-1!==e.indexOf("%")||-1!==e.indexOf("px"))return e;if(-1===e.indexOf("%"))return e+"px"}throw new Error("Could not use the value supplied for width or height:"+e)}},{key:"_create",value:function(){for(;this.body.container.hasChildNodes();)this.body.container.removeChild(this.body.container.firstChild);if(this.frame=document.createElement("div"),this.frame.className="vis-network",this.frame.style.position="relative",this.frame.style.overflow="hidden",this.frame.tabIndex=900,this.frame.canvas=document.createElement("canvas"),this.frame.canvas.style.position="relative",this.frame.appendChild(this.frame.canvas),this.frame.canvas.getContext)this._setPixelRatio(),this.setTransform();else{var e=document.createElement("DIV");e.style.color="red",e.style.fontWeight="bold",e.style.padding="10px",e.innerHTML="Error: your browser does not support HTML canvas",this.frame.canvas.appendChild(e)}this.body.container.appendChild(this.frame),this.body.view.scale=1,this.body.view.translation={x:.5*this.frame.canvas.clientWidth,y:.5*this.frame.canvas.clientHeight},this._bindHammer()}},{key:"_bindHammer",value:function(){var e=this;void 0!==this.hammer&&this.hammer.destroy(),this.drag={},this.pinch={},this.hammer=new ra(this.frame.canvas),this.hammer.get("pinch").set({enable:!0}),this.hammer.get("pan").set({threshold:5,direction:ra.DIRECTION_ALL}),Hl.onTouch(this.hammer,(function(t){e.body.eventListeners.onTouch(t)})),this.hammer.on("tap",(function(t){e.body.eventListeners.onTap(t)})),this.hammer.on("doubletap",(function(t){e.body.eventListeners.onDoubleTap(t)})),this.hammer.on("press",(function(t){e.body.eventListeners.onHold(t)})),this.hammer.on("panstart",(function(t){e.body.eventListeners.onDragStart(t)})),this.hammer.on("panmove",(function(t){e.body.eventListeners.onDrag(t)})),this.hammer.on("panend",(function(t){e.body.eventListeners.onDragEnd(t)})),this.hammer.on("pinch",(function(t){e.body.eventListeners.onPinch(t)})),this.frame.canvas.addEventListener("mousewheel",(function(t){e.body.eventListeners.onMouseWheel(t)})),this.frame.canvas.addEventListener("DOMMouseScroll",(function(t){e.body.eventListeners.onMouseWheel(t)})),this.frame.canvas.addEventListener("mousemove",(function(t){e.body.eventListeners.onMouseMove(t)})),this.frame.canvas.addEventListener("contextmenu",(function(t){e.body.eventListeners.onContext(t)})),this.hammerFrame=new ra(this.frame),Hl.onRelease(this.hammerFrame,(function(t){e.body.eventListeners.onRelease(t)}))}},{key:"setSize",value:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.options.width,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.options.height;t=this._prepareValue(t),n=this._prepareValue(n);var i=!1,r=this.frame.canvas.width,o=this.frame.canvas.height,s=this.pixelRatio;if(this._setPixelRatio(),t!=this.options.width||n!=this.options.height||this.frame.style.width!=t||this.frame.style.height!=n)this._getCameraState(s),this.frame.style.width=t,this.frame.style.height=n,this.frame.canvas.style.width="100%",this.frame.canvas.style.height="100%",this.frame.canvas.width=e(this.frame.canvas.clientWidth*this.pixelRatio),this.frame.canvas.height=e(this.frame.canvas.clientHeight*this.pixelRatio),this.options.width=t,this.options.height=n,this.canvasViewCenter={x:.5*this.frame.clientWidth,y:.5*this.frame.clientHeight},i=!0;else{var a=e(this.frame.canvas.clientWidth*this.pixelRatio),l=e(this.frame.canvas.clientHeight*this.pixelRatio);(this.frame.canvas.width!==a||this.frame.canvas.height!==l)&&this._getCameraState(s),this.frame.canvas.width!==a&&(this.frame.canvas.width=a,i=!0),this.frame.canvas.height!==l&&(this.frame.canvas.height=l,i=!0)}return 1==i&&(this.body.emitter.emit("resize",{width:e(this.frame.canvas.width/this.pixelRatio),height:e(this.frame.canvas.height/this.pixelRatio),oldWidth:e(r/this.pixelRatio),oldHeight:e(o/this.pixelRatio)}),this._setCameraState()),this.initialized=!0,i}},{key:"getContext",value:function(){return this.frame.canvas.getContext("2d")}},{key:"_determinePixelRatio",value:function(){var e=this.getContext();if(void 0===e)throw new Error("Could not get canvax context");var t=1;return"undefined"!=typeof window&&(t=window.devicePixelRatio||1),t/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1)}},{key:"_setPixelRatio",value:function(){this.pixelRatio=this._determinePixelRatio()}},{key:"setTransform",value:function(){var e=this.getContext();if(void 0===e)throw new Error("Could not get canvax context");e.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0)}},{key:"_XconvertDOMtoCanvas",value:function(e){return(e-this.body.view.translation.x)/this.body.view.scale}},{key:"_XconvertCanvasToDOM",value:function(e){return e*this.body.view.scale+this.body.view.translation.x}},{key:"_YconvertDOMtoCanvas",value:function(e){return(e-this.body.view.translation.y)/this.body.view.scale}},{key:"_YconvertCanvasToDOM",value:function(e){return e*this.body.view.scale+this.body.view.translation.y}},{key:"canvasToDOM",value:function(e){return{x:this._XconvertCanvasToDOM(e.x),y:this._YconvertCanvasToDOM(e.y)}}},{key:"DOMtoCanvas",value:function(e){return{x:this._XconvertDOMtoCanvas(e.x),y:this._YconvertDOMtoCanvas(e.y)}}}]),t}()),Ul=function(){var e=Math.abs,t=Math.min;function n(e,t){var i=this;ua(this,n),this.body=e,this.canvas=t,this.animationSpeed=1/this.renderRefreshRate,this.animationEasingFunction="easeInOutQuint",this.easingTime=0,this.sourceScale=0,this.targetScale=0,this.sourceTranslation=0,this.targetTranslation=0,this.lockedOnNodeId=void 0,this.lockedOnNodeOffset=void 0,this.touchTime=0,this.viewFunction=void 0,this.body.emitter.on("fit",this.fit.bind(this)),this.body.emitter.on("animationFinished",(function(){i.body.emitter.emit("_stopRendering")})),this.body.emitter.on("unlockNode",this.releaseNode.bind(this))}return ca(n,[{key:"setOptions",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};this.options=e}},{key:"fit",value:function(){var n,i,r=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{nodes:[]},o=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1];if((void 0===(r=Object.assign({},r)).nodes||0===r.nodes.length)&&(r.nodes=this.body.nodeIndices),!0===o){var s=0;for(var a in this.body.nodes)if(this.body.nodes.hasOwnProperty(a)){var l=this.body.nodes[a];!0===l.predefinedPosition&&(s+=1)}if(s>.5*this.body.nodeIndices.length)return void this.fit(r,!1);n=Ll.getRange(this.body.nodes,r.nodes);var u=this.body.nodeIndices.length;i=12.662/(u+7.4147)+.0964822;var d=t(this.canvas.frame.canvas.clientWidth/600,this.canvas.frame.canvas.clientHeight/600);i*=d}else{this.body.emitter.emit("_resizeNodes"),n=Ll.getRange(this.body.nodes,r.nodes);var c=1.1*e(n.maxX-n.minX),h=1.1*e(n.maxY-n.minY),f=this.canvas.frame.canvas.clientWidth/c,p=this.canvas.frame.canvas.clientHeight/h;i=f<=p?f:p}1<i?i=1:0===i&&(i=1);var v=Ll.findCenter(n),m={position:v,scale:i,animation:r.animation};this.moveTo(m)}},{key:"focus",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(void 0!==this.body.nodes[e]){var n={x:this.body.nodes[e].x,y:this.body.nodes[e].y};t.position=n,t.lockedOnNode=e,this.moveTo(t)}else console.log("Node: "+e+" cannot be found.")}},{key:"moveTo",value:function(e){var t=Number.isFinite;if(void 0!==e){if(null!=e.offset){if(null==e.offset.x)e.offset.x=0;else if(e.offset.x=+e.offset.x,!t(e.offset.x))throw new TypeError('The option "offset.x" has to be a finite number.');if(null==e.offset.y)e.offset.x=0;else if(e.offset.y=+e.offset.y,!t(e.offset.y))throw new TypeError('The option "offset.y" has to be a finite number.')}else e.offset={x:0,y:0};if(null!=e.position){if(null==e.position.x)e.position.x=0;else if(e.position.x=+e.position.x,!t(e.position.x))throw new TypeError('The option "position.x" has to be a finite number.');if(null==e.position.y)e.position.x=0;else if(e.position.y=+e.position.y,!t(e.position.y))throw new TypeError('The option "position.y" has to be a finite number.')}else e.position=this.getViewPosition();if(null==e.scale)e.scale=this.body.view.scale;else if(e.scale=+e.scale,!(0<e.scale))throw new TypeError('The option "scale" has to be a number greater than zero.');void 0===e.animation&&(e.animation={duration:0}),!1===e.animation&&(e.animation={duration:0}),!0===e.animation&&(e.animation={}),void 0===e.animation.duration&&(e.animation.duration=1e3),void 0===e.animation.easingFunction&&(e.animation.easingFunction="easeInOutQuad"),this.animateView(e)}else e={}}},{key:"animateView",value:function(e){if(void 0!==e){this.animationEasingFunction=e.animation.easingFunction,this.releaseNode(),!0===e.locked&&(this.lockedOnNodeId=e.lockedOnNode,this.lockedOnNodeOffset=e.offset),0!=this.easingTime&&this._transitionRedraw(!0),this.sourceScale=this.body.view.scale,this.sourceTranslation=this.body.view.translation,this.targetScale=e.scale,this.body.view.scale=this.targetScale;var t=this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight}),n={x:t.x-e.position.x,y:t.y-e.position.y};this.targetTranslation={x:this.sourceTranslation.x+n.x*this.targetScale+e.offset.x,y:this.sourceTranslation.y+n.y*this.targetScale+e.offset.y},0===e.animation.duration?null==this.lockedOnNodeId?(this.body.view.scale=this.targetScale,this.body.view.translation=this.targetTranslation,this.body.emitter.emit("_requestRedraw")):(this.viewFunction=this._lockedRedraw.bind(this),this.body.emitter.on("initRedraw",this.viewFunction)):(this.animationSpeed=1/(60*e.animation.duration*.001)||1/60,this.animationEasingFunction=e.animation.easingFunction,this.viewFunction=this._transitionRedraw.bind(this),this.body.emitter.on("initRedraw",this.viewFunction),this.body.emitter.emit("_startRendering"))}}},{key:"_lockedRedraw",value:function(){var e=this.body.nodes[this.lockedOnNodeId].x,t=this.body.nodes[this.lockedOnNodeId].y,n=this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight}),i=n.x-e,r=n.y-t,o=this.body.view.translation,s={x:o.x+i*this.body.view.scale+this.lockedOnNodeOffset.x,y:o.y+r*this.body.view.scale+this.lockedOnNodeOffset.y};this.body.view.translation=s}},{key:"releaseNode",value:function(){void 0!==this.lockedOnNodeId&&void 0!==this.viewFunction&&(this.body.emitter.off("initRedraw",this.viewFunction),this.lockedOnNodeId=void 0,this.lockedOnNodeOffset=void 0)}},{key:"_transitionRedraw",value:function(){var e=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];this.easingTime+=this.animationSpeed,this.easingTime=!0===e?1:this.easingTime;var t=Xi.easingFunctions[this.animationEasingFunction](this.easingTime);this.body.view.scale=this.sourceScale+(this.targetScale-this.sourceScale)*t,this.body.view.translation={x:this.sourceTranslation.x+(this.targetTranslation.x-this.sourceTranslation.x)*t,y:this.sourceTranslation.y+(this.targetTranslation.y-this.sourceTranslation.y)*t},1<=this.easingTime&&(this.body.emitter.off("initRedraw",this.viewFunction),this.easingTime=0,null!=this.lockedOnNodeId&&(this.viewFunction=this._lockedRedraw.bind(this),this.body.emitter.on("initRedraw",this.viewFunction)),this.body.emitter.emit("animationFinished"))}},{key:"getScale",value:function(){return this.body.view.scale}},{key:"getViewPosition",value:function(){return this.canvas.DOMtoCanvas({x:.5*this.canvas.frame.canvas.clientWidth,y:.5*this.canvas.frame.canvas.clientHeight})}}]),n}(),Gl=function(){function e(t,n){var i=this;ua(this,e),this.body=t,this.canvas=n,this.iconsCreated=!1,this.navigationHammers=[],this.boundFunctions={},this.touchTime=0,this.activated=!1,this.body.emitter.on("activate",(function(){i.activated=!0,i.configureKeyboardBindings()})),this.body.emitter.on("deactivate",(function(){i.activated=!1,i.configureKeyboardBindings()})),this.body.emitter.on("destroy",(function(){void 0!==i.keycharm&&i.keycharm.destroy()})),this.options={}}return ca(e,[{key:"setOptions",value:function(e){void 0!==e&&(this.options=e,this.create())}},{key:"create",value:function(){!0===this.options.navigationButtons?!1===this.iconsCreated&&this.loadNavigationElements():!0===this.iconsCreated&&this.cleanNavigation(),this.configureKeyboardBindings()}},{key:"cleanNavigation",value:function(){if(0!=this.navigationHammers.length){for(var e=0;e<this.navigationHammers.length;e++)this.navigationHammers[e].destroy();this.navigationHammers=[]}this.navigationDOM&&this.navigationDOM.wrapper&&this.navigationDOM.wrapper.parentNode&&this.navigationDOM.wrapper.parentNode.removeChild(this.navigationDOM.wrapper),this.iconsCreated=!1}},{key:"loadNavigationElements",value:function(){var e=this;this.cleanNavigation(),this.navigationDOM={};var t=["up","down","left","right","zoomIn","zoomOut","zoomExtends"],n=["_moveUp","_moveDown","_moveLeft","_moveRight","_zoomIn","_zoomOut","_fit"];this.navigationDOM.wrapper=document.createElement("div"),this.navigationDOM.wrapper.className="vis-navigation",this.canvas.frame.appendChild(this.navigationDOM.wrapper);for(var i=0;i<t.length;i++){this.navigationDOM[t[i]]=document.createElement("div"),this.navigationDOM[t[i]].className="vis-button vis-"+t[i],this.navigationDOM.wrapper.appendChild(this.navigationDOM[t[i]]);var r=new ra(this.navigationDOM[t[i]]);"_fit"===n[i]?Hl.onTouch(r,this._fit.bind(this)):Hl.onTouch(r,this.bindToRedraw.bind(this,n[i])),this.navigationHammers.push(r)}var o=new ra(this.canvas.frame);Hl.onRelease(o,(function(){e._stopMovement()})),this.navigationHammers.push(o),this.iconsCreated=!0}},{key:"bindToRedraw",value:function(e){void 0===this.boundFunctions[e]&&(this.boundFunctions[e]=this[e].bind(this),this.body.emitter.on("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_startRendering"))}},{key:"unbindFromRedraw",value:function(e){void 0!==this.boundFunctions[e]&&(this.body.emitter.off("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_stopRendering"),delete this.boundFunctions[e])}},{key:"_fit",value:function(){700<(new Date).valueOf()-this.touchTime&&(this.body.emitter.emit("fit",{duration:700}),this.touchTime=(new Date).valueOf())}},{key:"_stopMovement",value:function(){for(var e in this.boundFunctions)this.boundFunctions.hasOwnProperty(e)&&(this.body.emitter.off("initRedraw",this.boundFunctions[e]),this.body.emitter.emit("_stopRendering"));this.boundFunctions={}}},{key:"_moveUp",value:function(){this.body.view.translation.y+=this.options.keyboard.speed.y}},{key:"_moveDown",value:function(){this.body.view.translation.y-=this.options.keyboard.speed.y}},{key:"_moveLeft",value:function(){this.body.view.translation.x+=this.options.keyboard.speed.x}},{key:"_moveRight",value:function(){this.body.view.translation.x-=this.options.keyboard.speed.x}},{key:"_zoomIn",value:function(){var e=this.body.view.scale,t=this.body.view.scale*(1+this.options.keyboard.speed.zoom),n=this.body.view.translation,i=t/e,r=(1-i)*this.canvas.canvasViewCenter.x+n.x*i,o=(1-i)*this.canvas.canvasViewCenter.y+n.y*i;this.body.view.scale=t,this.body.view.translation={x:r,y:o},this.body.emitter.emit("zoom",{direction:"+",scale:this.body.view.scale,pointer:null})}},{key:"_zoomOut",value:function(){var e=this.body.view.scale,t=this.body.view.scale/(1+this.options.keyboard.speed.zoom),n=this.body.view.translation,i=t/e,r=(1-i)*this.canvas.canvasViewCenter.x+n.x*i,o=(1-i)*this.canvas.canvasViewCenter.y+n.y*i;this.body.view.scale=t,this.body.view.translation={x:r,y:o},this.body.emitter.emit("zoom",{direction:"-",scale:this.body.view.scale,pointer:null})}},{key:"configureKeyboardBindings",value:function(){var e=this;void 0!==this.keycharm&&this.keycharm.destroy(),!0===this.options.keyboard.enabled&&(this.keycharm=!0===this.options.keyboard.bindToWindow?Po({container:window,preventDefault:!0}):Po({container:this.canvas.frame,preventDefault:!0}),this.keycharm.reset(),!0===this.activated&&(this.keycharm.bind("up",(function(){e.bindToRedraw("_moveUp")}),"keydown"),this.keycharm.bind("down",(function(){e.bindToRedraw("_moveDown")}),"keydown"),this.keycharm.bind("left",(function(){e.bindToRedraw("_moveLeft")}),"keydown"),this.keycharm.bind("right",(function(){e.bindToRedraw("_moveRight")}),"keydown"),this.keycharm.bind("=",(function(){e.bindToRedraw("_zoomIn")}),"keydown"),this.keycharm.bind("num+",(function(){e.bindToRedraw("_zoomIn")}),"keydown"),this.keycharm.bind("num-",(function(){e.bindToRedraw("_zoomOut")}),"keydown"),this.keycharm.bind("-",(function(){e.bindToRedraw("_zoomOut")}),"keydown"),this.keycharm.bind("[",(function(){e.bindToRedraw("_zoomOut")}),"keydown"),this.keycharm.bind("]",(function(){e.bindToRedraw("_zoomIn")}),"keydown"),this.keycharm.bind("pageup",(function(){e.bindToRedraw("_zoomIn")}),"keydown"),this.keycharm.bind("pagedown",(function(){e.bindToRedraw("_zoomOut")}),"keydown"),this.keycharm.bind("up",(function(){e.unbindFromRedraw("_moveUp")}),"keyup"),this.keycharm.bind("down",(function(){e.unbindFromRedraw("_moveDown")}),"keyup"),this.keycharm.bind("left",(function(){e.unbindFromRedraw("_moveLeft")}),"keyup"),this.keycharm.bind("right",(function(){e.unbindFromRedraw("_moveRight")}),"keyup"),this.keycharm.bind("=",(function(){e.unbindFromRedraw("_zoomIn")}),"keyup"),this.keycharm.bind("num+",(function(){e.unbindFromRedraw("_zoomIn")}),"keyup"),this.keycharm.bind("num-",(function(){e.unbindFromRedraw("_zoomOut")}),"keyup"),this.keycharm.bind("-",(function(){e.unbindFromRedraw("_zoomOut")}),"keyup"),this.keycharm.bind("[",(function(){e.unbindFromRedraw("_zoomOut")}),"keyup"),this.keycharm.bind("]",(function(){e.unbindFromRedraw("_zoomIn")}),"keyup"),this.keycharm.bind("pageup",(function(){e.unbindFromRedraw("_zoomIn")}),"keyup"),this.keycharm.bind("pagedown",(function(){e.unbindFromRedraw("_zoomOut")}),"keyup")))}}]),e}(),ql=function(){function e(t,n){ua(this,e),this.container=t,this.overflowMethod=n||"cap",this.x=0,this.y=0,this.padding=5,this.hidden=!1,this.frame=document.createElement("div"),this.frame.className="vis-tooltip",this.container.appendChild(this.frame)}return ca(e,[{key:"setPosition",value:function(e,t){this.x=parseInt(e),this.y=parseInt(t)}},{key:"setText",value:function(e){e instanceof Element?(this.frame.innerHTML="",this.frame.appendChild(e)):this.frame.innerHTML=e}},{key:"show",value:function(e){if(void 0===e&&(e=!0),!0===e){var t=this.frame.clientHeight,n=this.frame.clientWidth,i=this.frame.parentNode.clientHeight,r=this.frame.parentNode.clientWidth,o=0,s=0;if("flip"==this.overflowMethod){var a=!1,l=!0;this.y-t<this.padding&&(l=!1),this.x+n>r-this.padding&&(a=!0),o=a?this.x-n:this.x,s=l?this.y-t:this.y}else(s=this.y-t)+t+this.padding>i&&(s=i-t-this.padding),s<this.padding&&(s=this.padding),(o=this.x)+n+this.padding>r&&(o=r-n-this.padding),o<this.padding&&(o=this.padding);this.frame.style.left=o+"px",this.frame.style.top=s+"px",this.frame.style.visibility="visible",this.hidden=!1}else this.hide()}},{key:"hide",value:function(){this.hidden=!0,this.frame.style.left="0",this.frame.style.top="0",this.frame.style.visibility="hidden"}},{key:"destroy",value:function(){this.frame.parentNode.removeChild(this.frame)}}]),e}(),$l=function(){function e(t,n,i){ua(this,e),this.body=t,this.canvas=n,this.selectionHandler=i,this.navigationHandler=new Gl(t,n),this.body.eventListeners.onTap=this.onTap.bind(this),this.body.eventListeners.onTouch=this.onTouch.bind(this),this.body.eventListeners.onDoubleTap=this.onDoubleTap.bind(this),this.body.eventListeners.onHold=this.onHold.bind(this),this.body.eventListeners.onDragStart=this.onDragStart.bind(this),this.body.eventListeners.onDrag=this.onDrag.bind(this),this.body.eventListeners.onDragEnd=this.onDragEnd.bind(this),this.body.eventListeners.onMouseWheel=this.onMouseWheel.bind(this),this.body.eventListeners.onPinch=this.onPinch.bind(this),this.body.eventListeners.onMouseMove=this.onMouseMove.bind(this),this.body.eventListeners.onRelease=this.onRelease.bind(this),this.body.eventListeners.onContext=this.onContext.bind(this),this.touchTime=0,this.drag={},this.pinch={},this.popup=void 0,this.popupObj=void 0,this.popupTimer=void 0,this.body.functions.getPointer=this.getPointer.bind(this),this.options={},this.defaultOptions={dragNodes:!0,dragView:!0,hover:!1,keyboard:{enabled:!1,speed:{x:10,y:10,zoom:.02},bindToWindow:!0},navigationButtons:!1,tooltipDelay:300,zoomView:!0,zoomSpeed:1},Xi.extend(this.options,this.defaultOptions),this.bindEventListeners()}return ca(e,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("destroy",(function(){clearTimeout(e.popupTimer),delete e.body.functions.getPointer}))}},{key:"setOptions",value:function(e){void 0!==e&&(Xi.selectiveNotDeepExtend(["hideEdgesOnDrag","hideEdgesOnZoom","hideNodesOnDrag","keyboard","multiselect","selectable","selectConnectedEdges"],this.options,e),Xi.mergeOptions(this.options,e,"keyboard"),e.tooltip&&(Xi.extend(this.options.tooltip,e.tooltip),e.tooltip.color&&(this.options.tooltip.color=Xi.parseColor(e.tooltip.color)))),this.navigationHandler.setOptions(this.options)}},{key:"getPointer",value:function(e){return{x:e.x-Xi.getAbsoluteLeft(this.canvas.frame.canvas),y:e.y-Xi.getAbsoluteTop(this.canvas.frame.canvas)}}},{key:"onTouch",value:function(e){50<(new Date).valueOf()-this.touchTime&&(this.drag.pointer=this.getPointer(e.center),this.drag.pinched=!1,this.pinch.scale=this.body.view.scale,this.touchTime=(new Date).valueOf())}},{key:"onTap",value:function(e){var t=this.getPointer(e.center),n=this.selectionHandler.options.multiselect&&(e.changedPointers[0].ctrlKey||e.changedPointers[0].metaKey);this.checkSelectionChanges(t,e,n),this.selectionHandler._generateClickEvent("click",e,t)}},{key:"onDoubleTap",value:function(e){var t=this.getPointer(e.center);this.selectionHandler._generateClickEvent("doubleClick",e,t)}},{key:"onHold",value:function(e){var t=this.getPointer(e.center),n=this.selectionHandler.options.multiselect;this.checkSelectionChanges(t,e,n),this.selectionHandler._generateClickEvent("click",e,t),this.selectionHandler._generateClickEvent("hold",e,t)}},{key:"onRelease",value:function(e){if(10<(new Date).valueOf()-this.touchTime){var t=this.getPointer(e.center);this.selectionHandler._generateClickEvent("release",e,t),this.touchTime=(new Date).valueOf()}}},{key:"onContext",value:function(e){var t=this.getPointer({x:e.clientX,y:e.clientY});this.selectionHandler._generateClickEvent("oncontext",e,t)}},{key:"checkSelectionChanges",value:function(e,t){var n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],i=this.selectionHandler.getSelection(),r=!1;r=!0===n?this.selectionHandler.selectAdditionalOnPoint(e):this.selectionHandler.selectOnPoint(e);var o=this.selectionHandler.getSelection(),s=this._determineDifference(i,o),a=this._determineDifference(o,i);0<s.edges.length&&(this.selectionHandler._generateClickEvent("deselectEdge",t,e,i),r=!0),0<s.nodes.length&&(this.selectionHandler._generateClickEvent("deselectNode",t,e,i),r=!0),0<a.nodes.length&&(this.selectionHandler._generateClickEvent("selectNode",t,e),r=!0),0<a.edges.length&&(this.selectionHandler._generateClickEvent("selectEdge",t,e),r=!0),!0===r&&this.selectionHandler._generateClickEvent("select",t,e)}},{key:"_determineDifference",value:function(e,t){var n=function(e,t){for(var n,i=[],r=0;r<e.length;r++)n=e[r],-1===t.indexOf(n)&&i.push(n);return i};return{nodes:n(e.nodes,t.nodes),edges:n(e.edges,t.edges)}}},{key:"onDragStart",value:function(e){void 0===this.drag.pointer&&this.onTouch(e);var t=this.selectionHandler.getNodeAt(this.drag.pointer);if(this.drag.dragging=!0,this.drag.selection=[],this.drag.translation=Xi.extend({},this.body.view.translation),this.drag.nodeId=void 0,void 0!==t&&!0===this.options.dragNodes){this.drag.nodeId=t.id,!1===t.isSelected()&&(this.selectionHandler.unselectAll(),this.selectionHandler.selectObject(t)),this.selectionHandler._generateClickEvent("dragStart",e,this.drag.pointer);var n=this.selectionHandler.selectionObj.nodes;for(var i in n)if(n.hasOwnProperty(i)){var r=n[i],o={id:r.id,node:r,x:r.x,y:r.y,xFixed:r.options.fixed.x,yFixed:r.options.fixed.y};r.options.fixed.x=!0,r.options.fixed.y=!0,this.drag.selection.push(o)}}else this.selectionHandler._generateClickEvent("dragStart",e,this.drag.pointer,void 0,!0)}},{key:"onDrag",value:function(e){var t=this;if(!0!==this.drag.pinched){this.body.emitter.emit("unlockNode");var n=this.getPointer(e.center),i=this.drag.selection;if(i&&i.length&&!0===this.options.dragNodes){this.selectionHandler._generateClickEvent("dragging",e,n);var r=n.x-this.drag.pointer.x,o=n.y-this.drag.pointer.y;i.forEach((function(e){var n=e.node;!1===e.xFixed&&(n.x=t.canvas._XconvertDOMtoCanvas(t.canvas._XconvertCanvasToDOM(e.x)+r)),!1===e.yFixed&&(n.y=t.canvas._YconvertDOMtoCanvas(t.canvas._YconvertCanvasToDOM(e.y)+o))})),this.body.emitter.emit("startSimulation")}else if(!0===this.options.dragView){if(this.selectionHandler._generateClickEvent("dragging",e,n,void 0,!0),void 0===this.drag.pointer)return void this.onDragStart(e);var s=n.x-this.drag.pointer.x,a=n.y-this.drag.pointer.y;this.body.view.translation={x:this.drag.translation.x+s,y:this.drag.translation.y+a},this.body.emitter.emit("_requestRedraw")}}}},{key:"onDragEnd",value:function(e){this.drag.dragging=!1;var t=this.drag.selection;t&&t.length?(t.forEach((function(e){e.node.options.fixed.x=e.xFixed,e.node.options.fixed.y=e.yFixed})),this.selectionHandler._generateClickEvent("dragEnd",e,this.getPointer(e.center)),this.body.emitter.emit("startSimulation")):(this.selectionHandler._generateClickEvent("dragEnd",e,this.getPointer(e.center),void 0,!0),this.body.emitter.emit("_requestRedraw"))}},{key:"onPinch",value:function(e){var t=this.getPointer(e.center);this.drag.pinched=!0,void 0===this.pinch.scale&&(this.pinch.scale=1);var n=this.pinch.scale*e.scale;this.zoom(n,t)}},{key:"zoom",value:function(e,t){if(!0===this.options.zoomView){var n,i=this.body.view.scale;1e-5>e&&(e=1e-5),10<e&&(e=10),void 0!==this.drag&&!0===this.drag.dragging&&(n=this.canvas.DOMtoCanvas(this.drag.pointer));var r=this.body.view.translation,o=e/i,s=(1-o)*t.x+r.x*o,a=(1-o)*t.y+r.y*o;if(this.body.view.scale=e,this.body.view.translation={x:s,y:a},null!=n){var l=this.canvas.canvasToDOM(n);this.drag.pointer.x=l.x,this.drag.pointer.y=l.y}this.body.emitter.emit("_requestRedraw"),i<e?this.body.emitter.emit("zoom",{direction:"+",scale:this.body.view.scale,pointer:t}):this.body.emitter.emit("zoom",{direction:"-",scale:this.body.view.scale,pointer:t})}}},{key:"onMouseWheel",value:function(e){if(!0===this.options.zoomView){var t=0;if(e.wheelDelta?t=e.wheelDelta/120:e.detail&&(t=-e.detail/3),0!=t){var n=this.body.view.scale,i=t*(this.options.zoomSpeed/10);0>t&&(i/=1-i),n*=1+i;var r=this.getPointer({x:e.clientX,y:e.clientY});this.zoom(n,r)}e.preventDefault()}}},{key:"onMouseMove",value:function(e){var t=this,n=this.getPointer({x:e.clientX,y:e.clientY}),i=!1;void 0!==this.popup&&(!1===this.popup.hidden&&this._checkHidePopup(n),!1===this.popup.hidden&&(i=!0,this.popup.setPosition(n.x+3,n.y-5),this.popup.show())),!1===this.options.keyboard.bindToWindow&&!0===this.options.keyboard.enabled&&this.canvas.frame.focus(),!1===i&&(void 0!==this.popupTimer&&(clearInterval(this.popupTimer),this.popupTimer=void 0),!this.drag.dragging&&(this.popupTimer=setTimeout((function(){return t._checkShowPopup(n)}),this.options.tooltipDelay))),!0===this.options.hover&&this.selectionHandler.hoverObject(e,n)}},{key:"_checkShowPopup",value:function(e){var t=this.canvas._XconvertDOMtoCanvas(e.x),n=this.canvas._YconvertDOMtoCanvas(e.y),i={left:t,top:n,right:t,bottom:n},r=void 0===this.popupObj?void 0:this.popupObj.id,o=!1,s="node";if(void 0===this.popupObj){for(var a,l=this.body.nodeIndices,u=this.body.nodes,d=[],c=0;c<l.length;c++)!0===(a=u[l[c]]).isOverlappingWith(i)&&(o=!0,void 0!==a.getTitle()&&d.push(l[c]));0<d.length&&(this.popupObj=u[d[d.length-1]],o=!0)}if(void 0===this.popupObj&&!1===o){for(var h,f=this.body.edgeIndices,p=this.body.edges,v=[],m=0;m<f.length;m++)!0===(h=p[f[m]]).isOverlappingWith(i)&&!0===h.connected&&void 0!==h.getTitle()&&v.push(f[m]);0<v.length&&(this.popupObj=p[v[v.length-1]],s="edge")}void 0===this.popupObj?void 0!==this.popup&&(this.popup.hide(),this.body.emitter.emit("hidePopup")):this.popupObj.id!==r&&(void 0===this.popup&&(this.popup=new ql(this.canvas.frame)),this.popup.popupTargetType=s,this.popup.popupTargetId=this.popupObj.id,this.popup.setPosition(e.x+3,e.y-5),this.popup.setText(this.popupObj.getTitle()),this.popup.show(),this.body.emitter.emit("showPopup",this.popupObj.id))}},{key:"_checkHidePopup",value:function(e){var t=this.selectionHandler._pointerToPositionObject(e),n=!1;if("node"!==this.popup.popupTargetType)void 0===this.selectionHandler.getNodeAt(e)&&void 0!==this.body.edges[this.popup.popupTargetId]&&(n=this.body.edges[this.popup.popupTargetId].isOverlappingWith(t));else if(void 0!==this.body.nodes[this.popup.popupTargetId]&&!0===(n=this.body.nodes[this.popup.popupTargetId].isOverlappingWith(t))){var i=this.selectionHandler.getNodeAt(e);n=void 0!==i&&i.id===this.popup.popupTargetId}!1===n&&(this.popupObj=void 0,this.popup.hide(),this.body.emitter.emit("hidePopup"))}}]),e}(),Zl=function(){function e(t,n){var i=this;ua(this,e),this.body=t,this.canvas=n,this.selectionObj={nodes:[],edges:[]},this.hoverObj={nodes:{},edges:{}},this.options={},this.defaultOptions={multiselect:!1,selectable:!0,selectConnectedEdges:!0,hoverConnectedEdges:!0},Xi.extend(this.options,this.defaultOptions),this.body.emitter.on("_dataChanged",(function(){i.updateSelection()}))}return ca(e,[{key:"setOptions",value:function(e){void 0!==e&&Xi.selectiveDeepExtend(["multiselect","hoverConnectedEdges","selectable","selectConnectedEdges"],this.options,e)}},{key:"selectOnPoint",value:function(e){var t=!1;if(!0===this.options.selectable){var n=this.getNodeAt(e)||this.getEdgeAt(e);this.unselectAll(),void 0!==n&&(t=this.selectObject(n)),this.body.emitter.emit("_requestRedraw")}return t}},{key:"selectAdditionalOnPoint",value:function(e){var t=!1;if(!0===this.options.selectable){var n=this.getNodeAt(e)||this.getEdgeAt(e);void 0!==n&&(t=!0,!0===n.isSelected()?this.deselectObject(n):this.selectObject(n),this.body.emitter.emit("_requestRedraw"))}return t}},{key:"_initBaseEvent",value:function(e,t){return{pointer:{DOM:{x:t.x,y:t.y},canvas:this.canvas.DOMtoCanvas(t)},event:e}}},{key:"_generateClickEvent",value:function(e,t,n,i){var r=!!(4<arguments.length&&void 0!==arguments[4])&&arguments[4],o=this._initBaseEvent(t,n);if(!0===r)o.nodes=[],o.edges=[];else{var s=this.getSelection();o.nodes=s.nodes,o.edges=s.edges}void 0!==i&&(o.previousSelection=i),"click"==e&&(o.items=this.getClickedItems(n)),void 0!==t.controlEdge&&(o.controlEdge=t.controlEdge),this.body.emitter.emit(e,o)}},{key:"selectObject",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:this.options.selectConnectedEdges;return void 0!==e&&(e instanceof nl&&!0===t&&this._selectConnectedEdges(e),e.select(),this._addToSelection(e),!0)}},{key:"deselectObject",value:function(e){!0===e.isSelected()&&(e.selected=!1,this._removeFromSelection(e))}},{key:"_getAllNodesOverlappingWith",value:function(e){for(var t,n=[],i=this.body.nodes,r=0;r<this.body.nodeIndices.length;r++)i[t=this.body.nodeIndices[r]].isOverlappingWith(e)&&n.push(t);return n}},{key:"_pointerToPositionObject",value:function(e){var t=this.canvas.DOMtoCanvas(e);return{left:t.x-1,top:t.y+1,right:t.x+1,bottom:t.y-1}}},{key:"getNodeAt",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],n=this._pointerToPositionObject(e),i=this._getAllNodesOverlappingWith(n);return 0<i.length?!0===t?this.body.nodes[i[i.length-1]]:i[i.length-1]:void 0}},{key:"_getEdgesOverlappingWith",value:function(e,t){for(var n,i=this.body.edges,r=0;r<this.body.edgeIndices.length;r++)i[n=this.body.edgeIndices[r]].isOverlappingWith(e)&&t.push(n)}},{key:"_getAllEdgesOverlappingWith",value:function(e){var t=[];return this._getEdgesOverlappingWith(e,t),t}},{key:"getEdgeAt",value:function(e){for(var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1],n=this.canvas.DOMtoCanvas(e),i=10,r=null,o=this.body.edges,s=0;s<this.body.edgeIndices.length;s++){var a=this.body.edgeIndices[s],l=o[a];if(l.connected){var u=l.from.x,d=l.from.y,c=l.to.x,h=l.to.y,f=l.edgeType.getDistanceToEdge(u,d,c,h,n.x,n.y);f<i&&(r=a,i=f)}}return null===r?void 0:!0===t?this.body.edges[r]:r}},{key:"_addToSelection",value:function(e){e instanceof nl?this.selectionObj.nodes[e.id]=e:this.selectionObj.edges[e.id]=e}},{key:"_addToHover",value:function(e){e instanceof nl?this.hoverObj.nodes[e.id]=e:this.hoverObj.edges[e.id]=e}},{key:"_removeFromSelection",value:function(e){e instanceof nl?(delete this.selectionObj.nodes[e.id],this._unselectConnectedEdges(e)):delete this.selectionObj.edges[e.id]}},{key:"unselectAll",value:function(){for(var e in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(e)&&this.selectionObj.nodes[e].unselect();for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&this.selectionObj.edges[t].unselect();this.selectionObj={nodes:{},edges:{}}}},{key:"_getSelectedNodeCount",value:function(){var e=0;for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&(e+=1);return e}},{key:"_getSelectedNode",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e))return this.selectionObj.nodes[e]}},{key:"_getSelectedEdge",value:function(){for(var e in this.selectionObj.edges)if(this.selectionObj.edges.hasOwnProperty(e))return this.selectionObj.edges[e]}},{key:"_getSelectedEdgeCount",value:function(){var e=0;for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&(e+=1);return e}},{key:"_getSelectedObjectCount",value:function(){var e=0;for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&(e+=1);for(var n in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(n)&&(e+=1);return e}},{key:"_selectionIsEmpty",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e))return!1;for(var t in this.selectionObj.edges)if(this.selectionObj.edges.hasOwnProperty(t))return!1;return!0}},{key:"_clusterInSelection",value:function(){for(var e in this.selectionObj.nodes)if(this.selectionObj.nodes.hasOwnProperty(e)&&1<this.selectionObj.nodes[e].clusterSize)return!0;return!1}},{key:"_selectConnectedEdges",value:function(e){for(var t,n=0;n<e.edges.length;n++)(t=e.edges[n]).select(),this._addToSelection(t)}},{key:"_hoverConnectedEdges",value:function(e){for(var t,n=0;n<e.edges.length;n++)(t=e.edges[n]).hover=!0,this._addToHover(t)}},{key:"_unselectConnectedEdges",value:function(e){for(var t,n=0;n<e.edges.length;n++)(t=e.edges[n]).unselect(),this._removeFromSelection(t)}},{key:"emitBlurEvent",value:function(e,t,n){var i=this._initBaseEvent(e,t);!0===n.hover&&(n.hover=!1,n instanceof nl?(i.node=n.id,this.body.emitter.emit("blurNode",i)):(i.edge=n.id,this.body.emitter.emit("blurEdge",i)))}},{key:"emitHoverEvent",value:function(e,t,n){var i=this._initBaseEvent(e,t),r=!1;return!1===n.hover&&(n.hover=!0,this._addToHover(n),r=!0,n instanceof nl?(i.node=n.id,this.body.emitter.emit("hoverNode",i)):(i.edge=n.id,this.body.emitter.emit("hoverEdge",i))),r}},{key:"hoverObject",value:function(e,t){var n=this.getNodeAt(t);void 0===n&&(n=this.getEdgeAt(t));var i=!1;for(var r in this.hoverObj.nodes)this.hoverObj.nodes.hasOwnProperty(r)&&(void 0===n||n instanceof nl&&n.id!=r||n instanceof Dl)&&(this.emitBlurEvent(e,t,this.hoverObj.nodes[r]),delete this.hoverObj.nodes[r],i=!0);for(var o in this.hoverObj.edges)this.hoverObj.edges.hasOwnProperty(o)&&(!0===i?(this.hoverObj.edges[o].hover=!1,delete this.hoverObj.edges[o]):(void 0===n||n instanceof Dl&&n.id!=o||n instanceof nl&&!n.hover)&&(this.emitBlurEvent(e,t,this.hoverObj.edges[o]),delete this.hoverObj.edges[o],i=!0));if(void 0!==n){var s=Object.keys(this.hoverObj.edges).length,a=Object.keys(this.hoverObj.nodes).length;(i||n instanceof Dl&&0===s&&0===a||n instanceof nl&&0===s&&0===a)&&(i=this.emitHoverEvent(e,t,n)),n instanceof nl&&!0===this.options.hoverConnectedEdges&&this._hoverConnectedEdges(n)}!0===i&&this.body.emitter.emit("_requestRedraw")}},{key:"getSelection",value:function(){return{nodes:this.getSelectedNodes(),edges:this.getSelectedEdges()}}},{key:"getSelectedNodes",value:function(){var e=[];if(!0===this.options.selectable)for(var t in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(t)&&e.push(this.selectionObj.nodes[t].id);return e}},{key:"getSelectedEdges",value:function(){var e=[];if(!0===this.options.selectable)for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&e.push(this.selectionObj.edges[t].id);return e}},{key:"setSelection",value:function(e){var t,n,i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(!e||!e.nodes&&!e.edges)throw"Selection must be an object with nodes and/or edges properties";if((i.unselectAll||void 0===i.unselectAll)&&this.unselectAll(),e.nodes)for(t=0;t<e.nodes.length;t++){n=e.nodes[t];var r=this.body.nodes[n];if(!r)throw new RangeError('Node with id "'+n+'" not found');this.selectObject(r,i.highlightEdges)}if(e.edges)for(t=0;t<e.edges.length;t++){n=e.edges[t];var o=this.body.edges[n];if(!o)throw new RangeError('Edge with id "'+n+'" not found');this.selectObject(o)}this.body.emitter.emit("_requestRedraw")}},{key:"selectNodes",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if(!e||void 0===e.length)throw"Selection must be an array with ids";this.setSelection({nodes:e},{highlightEdges:t})}},{key:"selectEdges",value:function(e){if(!e||void 0===e.length)throw"Selection must be an array with ids";this.setSelection({edges:e})}},{key:"updateSelection",value:function(){for(var e in this.selectionObj.nodes)this.selectionObj.nodes.hasOwnProperty(e)&&(this.body.nodes.hasOwnProperty(e)||delete this.selectionObj.nodes[e]);for(var t in this.selectionObj.edges)this.selectionObj.edges.hasOwnProperty(t)&&(this.body.edges.hasOwnProperty(t)||delete this.selectionObj.edges[t])}},{key:"getClickedItems",value:function(e){for(var t=this.canvas.DOMtoCanvas(e),n=[],i=this.body.nodeIndices,r=this.body.nodes,o=i.length-1;0<=o;o--){var s=r[i[o]].getItemsOnPoint(t);n.push.apply(n,s)}for(var a=this.body.edgeIndices,l=this.body.edges,u=a.length-1;0<=u;u--){var d=l[a[u]].getItemsOnPoint(t);n.push.apply(n,d)}return n}}]),e}(),Ql=Hr((function(e,t){!function(e){function t(e){return 1e5>e?100>e?10>e?0:1:1e4>e?1e3>e?2:3:4:1e7>e?1e6>e?5:6:1e9>e?1e8>e?7:8:9}function n(e,n){if(e===n)return 0;if(~~e===e&&~~n===n){if(0===e||0===n)return e<n?-1:1;if(0>e||0>n){if(0<=n)return-1;if(0<=e)return 1;e=-e,n=-n}var i=t(e),r=t(n),o=0;return i<r?(e*=a[r-i-1],n/=10,o=-1):i>r&&(n*=a[i-r-1],e/=10,o=1),e===n?o:e<n?-1:1}var s=e+"",l=n+"";return s===l?0:s<l?-1:1}function i(e,t,n,i){var r=t+1;if(r===n)return 1;if(0>i(e[r++],e[t])){for(;r<n&&0>i(e[r],e[r-1]);)r++;!function(e,t,n){for(n--;t<n;){var i=e[t];e[t++]=e[n],e[n--]=i}}(e,t,r)}else for(;r<n&&0<=i(e[r],e[r-1]);)r++;return r-t}function r(e,t,n,i,r){for(i===t&&i++;i<n;i++){for(var o=e[i],s=t,a=i;s<a;){var l=s+a>>>1;0>r(o,e[l])?a=l:s=l+1}var u=i-s;switch(u){case 3:e[s+3]=e[s+2];case 2:e[s+2]=e[s+1];case 1:e[s+1]=e[s];break;default:for(;0<u;)e[s+u]=e[s+u-1],u--}e[s]=o}}function o(e,t,n,i,r,o){var s=0,a=0,l=1;if(0<o(e,t[n+r])){for(a=i-r;l<a&&0<o(e,t[n+r+l]);)s=l,0>=(l=1+(l<<1))&&(l=a);l>a&&(l=a),s+=r,l+=r}else{for(a=r+1;l<a&&0>=o(e,t[n+r-l]);)s=l,0>=(l=1+(l<<1))&&(l=a);l>a&&(l=a);var u=s;s=r-l,l=r-u}for(s++;s<l;){var d=s+(l-s>>>1);0<o(e,t[n+d])?s=d+1:l=d}return l}function s(e,t,n,i,r,o){var s=0,a=0,l=1;if(0>o(e,t[n+r])){for(a=r+1;l<a&&0>o(e,t[n+r-l]);)s=l,0>=(l=1+(l<<1))&&(l=a);l>a&&(l=a);var u=s;s=r-l,l=r-u}else{for(a=i-r;l<a&&0<=o(e,t[n+r+l]);)s=l,0>=(l=1+(l<<1))&&(l=a);l>a&&(l=a),s+=r,l+=r}for(s++;s<l;){var d=s+(l-s>>>1);0>o(e,t[n+d])?l=d:s=d+1}return l}e.__esModule=!0,e.sort=function(e,t,o,s){if(!Array.isArray(e))throw new TypeError("Can only sort arrays");t?"function"!=typeof t&&(s=o,o=t,t=n):t=n,o||(o=0),s||(s=e.length);var a=s-o;if(!(2>a)){var u=0;if(32>a)return void r(e,o,s,o+(u=i(e,o,s,t)),t);var d=new l(e,t),c=function(e){for(var t=0;e>=32;)t|=1&e,e>>=1;return e+t}(a);do{if((u=i(e,o,s,t))<c){var h=a;h>c&&(h=c),r(e,o,o+h,o+u,t),u=h}d.pushRun(o,u),d.mergeRuns(),a-=u,o+=u}while(0!==a);d.forceMergeRuns()}};var a=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9],l=function(){function e(t,n){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.array=null,this.compare=null,this.minGallop=7,this.length=0,this.tmpStorageLength=256,this.stackLength=0,this.runStart=null,this.runLength=null,this.stackSize=0,this.array=t,this.compare=n,this.length=t.length,this.length<512&&(this.tmpStorageLength=this.length>>>1),this.tmp=Array(this.tmpStorageLength),this.stackLength=120>this.length?5:1542>this.length?10:119151>this.length?19:40,this.runStart=Array(this.stackLength),this.runLength=Array(this.stackLength)}return e.prototype.pushRun=function(e,t){this.runStart[this.stackSize]=e,this.runLength[this.stackSize]=t,this.stackSize+=1},e.prototype.mergeRuns=function(){for(;1<this.stackSize;){var e=this.stackSize-2;if(1<=e&&this.runLength[e-1]<=this.runLength[e]+this.runLength[e+1]||2<=e&&this.runLength[e-2]<=this.runLength[e]+this.runLength[e-1])this.runLength[e-1]<this.runLength[e+1]&&e--;else if(this.runLength[e]>this.runLength[e+1])break;this.mergeAt(e)}},e.prototype.forceMergeRuns=function(){for(;1<this.stackSize;){var e=this.stackSize-2;0<e&&this.runLength[e-1]<this.runLength[e+1]&&e--,this.mergeAt(e)}},e.prototype.mergeAt=function(e){var t=this.compare,n=this.array,i=this.runStart[e],r=this.runLength[e],a=this.runStart[e+1],l=this.runLength[e+1];this.runLength[e]=r+l,e===this.stackSize-3&&(this.runStart[e+1]=this.runStart[e+2],this.runLength[e+1]=this.runLength[e+2]),this.stackSize--;var u=s(n[a],n,i,r,0,t);i+=u,0!=(r-=u)&&(0===(l=o(n[i+r-1],n,a,l,l-1,t))||(r<=l?this.mergeLow(i,r,a,l):this.mergeHigh(i,r,a,l)))},e.prototype.mergeLow=function(e,t,n,i){var r=this.compare,a=this.array,l=this.tmp,u=0;for(u=0;u<t;u++)l[u]=a[e+u];var d=0,c=n,h=e;if(a[h++]=a[c++],0!=--i)if(1!==t){for(var f=this.minGallop;;){var p=0,v=0,m=!1;do{if(0>r(a[c],l[d])){if(a[h++]=a[c++],v++,p=0,0==--i){m=!0;break}}else if(a[h++]=l[d++],p++,v=0,1==--t){m=!0;break}}while((p|v)<f);if(m)break;do{if(0!==(p=s(a[c],l,d,t,0,r))){for(u=0;u<p;u++)a[h+u]=l[d+u];if(h+=p,d+=p,1>=(t-=p)){m=!0;break}}if(a[h++]=a[c++],0==--i){m=!0;break}if(0!==(v=o(l[d],a,c,i,0,r))){for(u=0;u<v;u++)a[h+u]=a[c+u];if(h+=v,c+=v,0==(i-=v)){m=!0;break}}if(a[h++]=l[d++],1==--t){m=!0;break}f--}while(p>=7||v>=7);if(m)break;0>f&&(f=0),f+=2}if(this.minGallop=f,1>f&&(this.minGallop=1),1===t){for(u=0;u<i;u++)a[h+u]=a[c+u];a[h+i]=l[d]}else{if(0===t)throw new Error("mergeLow preconditions were not respected");for(u=0;u<t;u++)a[h+u]=l[d+u]}}else{for(u=0;u<i;u++)a[h+u]=a[c+u];a[h+i]=l[d]}else for(u=0;u<t;u++)a[h+u]=l[d+u]},e.prototype.mergeHigh=function(e,t,n,i){var r=this.compare,a=this.array,l=this.tmp,u=0;for(u=0;u<i;u++)l[u]=a[n+u];var d=e+t-1,c=i-1,h=n+i-1,f=0,p=0;if(a[h--]=a[d--],0!=--t)if(1!==i){for(var v=this.minGallop;;){var m=0,y=0,g=!1;do{if(0>r(l[c],a[d])){if(a[h--]=a[d--],m++,y=0,0==--t){g=!0;break}}else if(a[h--]=l[c--],y++,m=0,1==--i){g=!0;break}}while((m|y)<v);if(g)break;do{if(0!=(m=t-s(l[c],a,e,t,t-1,r))){for(t-=m,p=1+(h-=m),f=1+(d-=m),u=m-1;0<=u;u--)a[p+u]=a[f+u];if(0===t){g=!0;break}}if(a[h--]=l[c--],1==--i){g=!0;break}if(0!=(y=i-o(a[d],l,0,i,i-1,r))){for(i-=y,p=1+(h-=y),f=1+(c-=y),u=0;u<y;u++)a[p+u]=l[f+u];if(1>=i){g=!0;break}}if(a[h--]=a[d--],0==--t){g=!0;break}v--}while(m>=7||y>=7);if(g)break;0>v&&(v=0),v+=2}if(this.minGallop=v,1>v&&(this.minGallop=1),1===i){for(p=1+(h-=t),f=1+(d-=t),u=t-1;0<=u;u--)a[p+u]=a[f+u];a[h]=l[c]}else{if(0===i)throw new Error("mergeHigh preconditions were not respected");for(f=h-(i-1),u=0;u<i;u++)a[f+u]=l[u]}}else{for(p=1+(h-=t),f=1+(d-=t),u=t-1;0<=u;u--)a[p+u]=a[f+u];a[h]=l[c]}else for(f=h-(i-1),u=0;u<i;u++)a[f+u]=l[u]},e}()}(t)}));!function(e){e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")&&e.default}(Ql);var Xl=Ql,Kl=function(){function e(){ua(this,e)}return ca(e,[{key:"abstract",value:function(){throw new Error("Can't instantiate abstract class!")}},{key:"fake_use",value:function(){}},{key:"curveType",value:function(){return this.abstract()}},{key:"getPosition",value:function(e){return this.fake_use(e),this.abstract()}},{key:"setPosition",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;this.fake_use(e,t,n),this.abstract()}},{key:"getTreeSize",value:function(e){return this.fake_use(e),this.abstract()}},{key:"sort",value:function(e){this.fake_use(e),this.abstract()}},{key:"fix",value:function(e,t){this.fake_use(e,t),this.abstract()}},{key:"shift",value:function(e,t){this.fake_use(e,t),this.abstract()}}]),e}(),Jl=function(e){function t(e){var n;return ua(this,t),(n=Ca(this,Ma(t).call(this))).layout=e,n}return Fa(t,e),ca(t,[{key:"curveType",value:function(){return"horizontal"}},{key:"getPosition",value:function(e){return e.x}},{key:"setPosition",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;void 0!==n&&this.layout.hierarchical.addToOrdering(e,n),e.x=t}},{key:"getTreeSize",value:function(e){var t=this.layout.hierarchical.getTreeSize(this.layout.body.nodes,e);return{min:t.min_x,max:t.max_x}}},{key:"sort",value:function(e){Xl.sort(e,(function(e,t){return e.x-t.x}))}},{key:"fix",value:function(e,t){e.y=this.layout.options.hierarchical.levelSeparation*t,e.options.fixed.y=!0}},{key:"shift",value:function(e,t){this.layout.body.nodes[e].x+=t}}]),t}(Kl),eu=function(e){function t(e){var n;return ua(this,t),(n=Ca(this,Ma(t).call(this))).layout=e,n}return Fa(t,e),ca(t,[{key:"curveType",value:function(){return"vertical"}},{key:"getPosition",value:function(e){return e.y}},{key:"setPosition",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:void 0;void 0!==n&&this.layout.hierarchical.addToOrdering(e,n),e.y=t}},{key:"getTreeSize",value:function(e){var t=this.layout.hierarchical.getTreeSize(this.layout.body.nodes,e);return{min:t.min_y,max:t.max_y}}},{key:"sort",value:function(e){Xl.sort(e,(function(e,t){return e.y-t.y}))}},{key:"fix",value:function(e,t){e.x=this.layout.options.hierarchical.levelSeparation*t,e.options.fixed.x=!0}},{key:"shift",value:function(e,t){this.layout.body.nodes[e].y+=t}}]),t}(Kl),tu=function(){var e=Math.max,t=Math.min;function n(){ua(this,n),this.childrenReference={},this.parentReference={},this.trees={},this.distributionOrdering={},this.levels={},this.distributionIndex={},this.isTree=!1,this.treeIndex=-1}return ca(n,[{key:"addRelation",value:function(e,t){void 0===this.childrenReference[e]&&(this.childrenReference[e]=[]),this.childrenReference[e].push(t),void 0===this.parentReference[t]&&(this.parentReference[t]=[]),this.parentReference[t].push(e)}},{key:"checkIfTree",value:function(){for(var e in this.parentReference)if(1<this.parentReference[e].length)return void(this.isTree=!1);this.isTree=!0}},{key:"numTrees",value:function(){return this.treeIndex+1}},{key:"setTreeIndex",value:function(t,n){void 0===n||void 0===this.trees[t.id]&&(this.trees[t.id]=n,this.treeIndex=e(n,this.treeIndex))}},{key:"ensureLevel",value:function(e){void 0===this.levels[e]&&(this.levels[e]=0)}},{key:"getMaxLevel",value:function(t){var n=this,i={};return function t(r){if(void 0!==i[r])return i[r];var o=n.levels[r];if(n.childrenReference[r]){var s=n.childrenReference[r];if(0<s.length)for(var a=0;a<s.length;a++)o=e(o,t(s[a]))}return i[r]=o,o}(t)}},{key:"levelDownstream",value:function(e,t){void 0===this.levels[t.id]&&(void 0===this.levels[e.id]&&(this.levels[e.id]=0),this.levels[t.id]=this.levels[e.id]+1)}},{key:"setMinLevelToZero",value:function(e){var n=1e9;for(var i in e)e.hasOwnProperty(i)&&void 0!==this.levels[i]&&(n=t(this.levels[i],n));for(var r in e)e.hasOwnProperty(r)&&void 0!==this.levels[r]&&(this.levels[r]-=n)}},{key:"getTreeSize",value:function(n,i){var r=1e9,o=-1e9,s=1e9,a=-1e9;for(var l in this.trees)if(this.trees.hasOwnProperty(l)&&this.trees[l]===i){var u=n[l];r=t(u.x,r),o=e(u.x,o),s=t(u.y,s),a=e(u.y,a)}return{min_x:r,max_x:o,min_y:s,max_y:a}}},{key:"hasSameParent",value:function(e,t){var n=this.parentReference[e.id],i=this.parentReference[t.id];if(void 0===n||void 0===i)return!1;for(var r=0;r<n.length;r++)for(var o=0;o<i.length;o++)if(n[r]==i[o])return!0;return!1}},{key:"inSameSubNetwork",value:function(e,t){return this.trees[e.id]===this.trees[t.id]}},{key:"getLevels",value:function(){return Object.keys(this.distributionOrdering)}},{key:"addToOrdering",value:function(e,t){void 0===this.distributionOrdering[t]&&(this.distributionOrdering[t]=[]);var n=!1,i=this.distributionOrdering[t];for(var r in i)if(i[r]===e){n=!0;break}n||(this.distributionOrdering[t].push(e),this.distributionIndex[e.id]=this.distributionOrdering[t].length-1)}}]),n}(),nu=function(){var e=Math.cos,t=Math.sin,n=Math.sqrt,i=Math.PI,r=Math.round,o=Math.pow,s=Math.max,a=Math.abs,l=Math.min,u=Math.floor;function d(e){ua(this,d),this.body=e,this.initialRandomSeed=r(1e6*Math.random()),this.randomSeed=this.initialRandomSeed,this.setPhysics=!1,this.options={},this.optionsBackup={physics:{}},this.defaultOptions={randomSeed:void 0,improvedLayout:!0,clusterThreshold:150,hierarchical:{enabled:!1,levelSeparation:150,nodeSpacing:100,treeSpacing:200,blockShifting:!0,edgeMinimization:!0,parentCentralization:!0,direction:"UD",sortMethod:"hubsize"}},Xi.extend(this.options,this.defaultOptions),this.bindEventListeners()}return ca(d,[{key:"bindEventListeners",value:function(){var e=this;this.body.emitter.on("_dataChanged",(function(){e.setupHierarchicalLayout()})),this.body.emitter.on("_dataLoaded",(function(){e.layoutNetwork()})),this.body.emitter.on("_resetHierarchicalLayout",(function(){e.setupHierarchicalLayout()})),this.body.emitter.on("_adjustEdgesForHierarchicalLayout",(function(){if(!0===e.options.hierarchical.enabled){var t=e.direction.curveType();e.body.emitter.emit("_forceDisableDynamicCurves",t,!1)}}))}},{key:"setOptions",value:function(e,t){if(void 0!==e){var n=this.options.hierarchical,i=n.enabled;if(Xi.selectiveDeepExtend(["randomSeed","improvedLayout","clusterThreshold"],this.options,e),Xi.mergeOptions(this.options,e,"hierarchical"),void 0!==e.randomSeed&&(this.initialRandomSeed=e.randomSeed),!0===n.enabled)return!0===i&&this.body.emitter.emit("refresh",!0),"RL"===n.direction||"DU"===n.direction?0<n.levelSeparation&&(n.levelSeparation*=-1):0>n.levelSeparation&&(n.levelSeparation*=-1),this.setDirectionStrategy(),this.body.emitter.emit("_resetHierarchicalLayout"),this.adaptAllOptionsForHierarchicalLayout(t);if(!0===i)return this.body.emitter.emit("refresh"),Xi.deepExtend(t,this.optionsBackup)}return t}},{key:"adaptAllOptionsForHierarchicalLayout",value:function(e){if(!0===this.options.hierarchical.enabled){var t=this.optionsBackup.physics;void 0===e.physics||!0===e.physics?(e.physics={enabled:void 0===t.enabled||t.enabled,solver:"hierarchicalRepulsion"},t.enabled=void 0===t.enabled||t.enabled,t.solver=t.solver||"barnesHut"):"object"===_a(e.physics)?(t.enabled=void 0===e.physics.enabled||e.physics.enabled,t.solver=e.physics.solver||"barnesHut",e.physics.solver="hierarchicalRepulsion"):!1!==e.physics&&(t.solver="barnesHut",e.physics={solver:"hierarchicalRepulsion"});var n=this.direction.curveType();if(void 0===e.edges)this.optionsBackup.edges={smooth:{enabled:!0,type:"dynamic"}},e.edges={smooth:!1};else if(void 0===e.edges.smooth)this.optionsBackup.edges={smooth:{enabled:!0,type:"dynamic"}},e.edges.smooth=!1;else if("boolean"==typeof e.edges.smooth)this.optionsBackup.edges={smooth:e.edges.smooth},e.edges.smooth={enabled:e.edges.smooth,type:n};else{var i=e.edges.smooth;void 0!==i.type&&"dynamic"!==i.type&&(n=i.type),this.optionsBackup.edges={smooth:void 0===i.enabled||i.enabled,type:void 0===i.type?"dynamic":i.type,roundness:void 0===i.roundness?.5:i.roundness,forceDirection:void 0!==i.forceDirection&&i.forceDirection},e.edges.smooth={enabled:void 0===i.enabled||i.enabled,type:n,roundness:void 0===i.roundness?.5:i.roundness,forceDirection:void 0!==i.forceDirection&&i.forceDirection}}this.body.emitter.emit("_forceDisableDynamicCurves",n)}return e}},{key:"seededRandom",value:function(){var e=1e4*t(this.randomSeed++);return e-u(e)}},{key:"positionInitially",value:function(n){if(!0!==this.options.hierarchical.enabled){this.randomSeed=this.initialRandomSeed;for(var r=n.length+50,o=0;o<n.length;o++){var s=n[o],a=2*i*this.seededRandom();void 0===s.x&&(s.x=r*e(a)),void 0===s.y&&(s.y=r*t(a))}}}},{key:"layoutNetwork",value:function(){if(!0!==this.options.hierarchical.enabled&&!0===this.options.improvedLayout){for(var e=this.body.nodeIndices,t=0,n=0;n<e.length;n++)!0===this.body.nodes[e[n]].predefinedPosition&&(t+=1);if(t<.5*e.length){var i=0,r=this.options.clusterThreshold,o={clusterNodeProperties:{shape:"ellipse",label:"",group:"",font:{multi:!1}},clusterEdgeProperties:{label:"",font:{multi:!1},smooth:{enabled:!1}}};if(e.length>r){for(var a=e.length;e.length>r&&10>=i;){i+=1;var l=e.length;if(0==i%3?this.body.modules.clustering.clusterBridges(o):this.body.modules.clustering.clusterOutliers(o),l==e.length&&0!=i%3)return this._declusterAll(),this.body.emitter.emit("_layoutFailed"),void console.info("This network could not be positioned by this version of the improved layout algorithm. Please disable improvedLayout for better performance.")}this.body.modules.kamadaKawai.setOptions({springLength:s(150,2*a)})}10<i&&console.info("The clustering didn't succeed within the amount of interations allowed, progressing with partial result."),this.body.modules.kamadaKawai.solve(e,this.body.edgeIndices,!0),this._shiftToCenter();for(var u,d=0;d<e.length;d++)!1===(u=this.body.nodes[e[d]]).predefinedPosition&&(u.x+=70*(.5-this.seededRandom()),u.y+=70*(.5-this.seededRandom()));this._declusterAll(),this.body.emitter.emit("_repositionBezierNodes")}}}},{key:"_shiftToCenter",value:function(){for(var e,t=Ll.getRangeCore(this.body.nodes,this.body.nodeIndices),n=Ll.findCenter(t),i=0;i<this.body.nodeIndices.length;i++)(e=this.body.nodes[this.body.nodeIndices[i]]).x-=n.x,e.y-=n.y}},{key:"_declusterAll",value:function(){for(var e=!0;!0===e;){e=!1;for(var t=0;t<this.body.nodeIndices.length;t++)!0===this.body.nodes[this.body.nodeIndices[t]].isCluster&&(e=!0,this.body.modules.clustering.openCluster(this.body.nodeIndices[t],{},!1));!0===e&&this.body.emitter.emit("_dataChanged")}}},{key:"getSeed",value:function(){return this.initialRandomSeed}},{key:"setupHierarchicalLayout",value:function(){if(!0===this.options.hierarchical.enabled&&0<this.body.nodeIndices.length){var e,t,n=!1,i=!1;for(t in this.lastNodeOnLevel={},this.hierarchical=new tu,this.body.nodes)this.body.nodes.hasOwnProperty(t)&&(void 0===(e=this.body.nodes[t]).options.level?i=!0:(n=!0,this.hierarchical.levels[t]=e.options.level));if(!0===i&&!0===n)throw new Error("To use the hierarchical layout, nodes require either no predefined levels or levels have to be defined for all nodes.");if(!0===i){var r=this.options.hierarchical.sortMethod;"hubsize"===r?this._determineLevelsByHubsize():"directed"===r?this._determineLevelsDirected():"custom"===r&&this._determineLevelsCustomCallback()}for(var o in this.body.nodes)this.body.nodes.hasOwnProperty(o)&&this.hierarchical.ensureLevel(o);var s=this._getDistribution();this._generateMap(),this._placeNodesByHierarchy(s),this._condenseHierarchy(),this._shiftToCenter()}}},{key:"_condenseHierarchy",value:function(){var e=this,t=!1,i={},u=function(t,n){var i=e.hierarchical.trees;for(var r in i)i.hasOwnProperty(r)&&i[r]===t&&e.direction.shift(r,n)},d=function(){for(var t=[],n=0;n<e.hierarchical.numTrees();n++)t.push(e.direction.getTreeSize(n));return t},c=function t(n,i){if(!i[n.id]&&(i[n.id]=!0,e.hierarchical.childrenReference[n.id])){var r=e.hierarchical.childrenReference[n.id];if(0<r.length)for(var o=0;o<r.length;o++)t(e.body.nodes[r[o]],i)}},h=function(t){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1e9,i=1e9,r=1e9,o=1e9,a=-1e9;for(var u in t)if(t.hasOwnProperty(u)){var d=e.body.nodes[u],c=e.hierarchical.levels[d.id],h=e.direction.getPosition(d),f=e._getSpaceAroundNode(d,t),p=ba(f,2),v=p[0],m=p[1];i=l(v,i),r=l(m,r),c<=n&&(o=l(h,o),a=s(h,a))}return[o,a,i,r]},f=function(t,n){var i=e.hierarchical.getMaxLevel(t.id),r=e.hierarchical.getMaxLevel(n.id);return l(i,r)},p=function(t,n,i){for(var r=e.hierarchical,o=0;o<n.length;o++){var s=n[o],a=r.distributionOrdering[s];if(1<a.length)for(var l=0;l<a.length-1;l++){var u=a[l],d=a[l+1];r.hasSameParent(u,d)&&r.inSameSubNetwork(u,d)&&t(u,d,i)}}},v=function(n,i){var r=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],o=e.direction.getPosition(n),s=e.direction.getPosition(i),l=a(s-o),u=e.options.hierarchical.nodeSpacing;if(l>u){var d={},p={};c(n,d),c(i,p);var v=f(n,i),m=h(d,v),y=h(p,v),g=m[1],b=y[0],_=y[2],w=a(g-b);if(w>u){var k=g-b+u;k<-_+u&&(k=-_+u),0>k&&(e._shiftBlock(i.id,k),t=!0,!0===r&&e._centerParent(i))}}},m=function(a,u){for(var d,f=u.id,p=u.edges,v=e.hierarchical.levels[u.id],m=e.options.hierarchical.levelSeparation*e.options.hierarchical.levelSeparation,y={},g=[],b=0;b<p.length;b++)if((d=p[b]).toId!=d.fromId){var _=d.toId==f?d.from:d.to;y[p[b].id]=_,e.hierarchical.levels[_.id]<v&&g.push(d)}var w=function(t,i){for(var r=0,o=0;o<i.length;o++)if(void 0!==y[i[o].id]){var s=e.direction.getPosition(y[i[o].id])-t;r+=s/n(s*s+m)}return r},k=function(t,n){for(var i=0,r=0;r<n.length;r++)if(void 0!==y[n[r].id]){var s=e.direction.getPosition(y[n[r].id])-t;i-=m*o(s*s+m,-1.5)}return i},x=function(t,n){for(var i=e.direction.getPosition(u),o={},a=0;a<t;a++){var d=w(i,n),c=k(i,n);if(void 0!==o[i-=s(-40,l(40,r(d/c)))])break;o[i]=a}return i},S=x(a,g);(function(n){var r=e.direction.getPosition(u);if(void 0===i[u.id]){var o={};c(u,o),i[u.id]=o}var s=h(i[u.id]),a=s[2],d=s[3],f=n-r,p=0;0<f?p=l(f,d-e.options.hierarchical.nodeSpacing):0>f&&(p=-l(-f,a-e.options.hierarchical.nodeSpacing)),0!=p&&(e._shiftBlock(u.id,p),t=!0)})(S),function(n){var i=e.direction.getPosition(u),r=e._getSpaceAroundNode(u),o=ba(r,2),a=o[0],d=o[1],c=n-i,h=i;0<c?h=l(i+(d-e.options.hierarchical.nodeSpacing),n):0>c&&(h=s(i-(a-e.options.hierarchical.nodeSpacing),n)),h!==i&&(e.direction.setPosition(u,h),t=!0)}(S=x(a,p))};!0===this.options.hierarchical.blockShifting&&(function(n){var i=e.hierarchical.getLevels();i=i.reverse();for(var r=0;r<n&&(t=!1,p(v,i,!0),!0===t);r++);}(5),function(){for(var t in e.body.nodes)e.body.nodes.hasOwnProperty(t)&&e._centerParent(e.body.nodes[t])}()),!0===this.options.hierarchical.edgeMinimization&&function(n){var i=e.hierarchical.getLevels();i=i.reverse();for(var r=0;r<n;r++){t=!1;for(var o=0;o<i.length;o++)for(var s=i[o],a=e.hierarchical.distributionOrdering[s],l=0;l<a.length;l++)m(1e3,a[l]);if(!0!==t)break}}(20),!0===this.options.hierarchical.parentCentralization&&function(){var t=e.hierarchical.getLevels();t=t.reverse();for(var n=0;n<t.length;n++)for(var i=t[n],r=e.hierarchical.distributionOrdering[i],o=0;o<r.length;o++)e._centerParent(r[o])}(),function(){for(var t=d(),n=0,i=0;i<t.length-1;i++)n+=t[i].max-t[i+1].min+e.options.hierarchical.treeSpacing,u(i+1,n)}()}},{key:"_getSpaceAroundNode",value:function(e,t){var n=!0;void 0===t&&(n=!1);var i=this.hierarchical.levels[e.id];if(void 0!==i){var r=this.hierarchical.distributionIndex[e.id],o=this.direction.getPosition(e),s=this.hierarchical.distributionOrdering[i],a=1e9,u=1e9;if(0!==r){var d=s[r-1];if(1==n&&void 0===t[d.id]||0==n)a=o-this.direction.getPosition(d)}if(r!=s.length-1){var c=s[r+1];if(1==n&&void 0===t[c.id]||0==n){var h=this.direction.getPosition(c);u=l(u,h-o)}}return[a,u]}return[0,0]}},{key:"_centerParent",value:function(e){if(this.hierarchical.parentReference[e.id])for(var t=this.hierarchical.parentReference[e.id],n=0;n<t.length;n++){var i=t[n],r=this.body.nodes[i],o=this.hierarchical.childrenReference[i];if(void 0!==o){var s=this._getCenterPosition(o),l=this.direction.getPosition(r),u=this._getSpaceAroundNode(r),d=ba(u,2),c=d[0],h=d[1],f=l-s;(0>f&&a(f)<h-this.options.hierarchical.nodeSpacing||0<f&&a(f)<c-this.options.hierarchical.nodeSpacing)&&this.direction.setPosition(r,s)}}}},{key:"_placeNodesByHierarchy",value:function(e){for(var t in this.positionedNodes={},e)if(e.hasOwnProperty(t)){var n=Object.keys(e[t]);n=this._indexArrayToNodes(n),this.direction.sort(n);for(var i,r=0,o=0;o<n.length;o++)if(i=n[o],void 0===this.positionedNodes[i.id]){var s=this.options.hierarchical.nodeSpacing,a=s*r;0<r&&(a=this.direction.getPosition(n[o-1])+s),this.direction.setPosition(i,a,t),this._validatePositionAndContinue(i,t,a),r++}}}},{key:"_placeBranchNodes",value:function(e,t){var n=this.hierarchical.childrenReference[e];if(void 0!==n){for(var i=[],r=0;r<n.length;r++)i.push(this.body.nodes[n[r]]);this.direction.sort(i);for(var o=0;o<i.length;o++){var s=i[o],a=this.hierarchical.levels[s.id];if(!(a>t&&void 0===this.positionedNodes[s.id]))return;var l,u=this.options.hierarchical.nodeSpacing;l=0==o?this.direction.getPosition(this.body.nodes[e]):this.direction.getPosition(i[o-1])+u,this.direction.setPosition(s,l,a),this._validatePositionAndContinue(s,a,l)}var d=this._getCenterPosition(i);this.direction.setPosition(this.body.nodes[e],d,t)}}},{key:"_validatePositionAndContinue",value:function(e,t,n){if(this.hierarchical.isTree){if(void 0!==this.lastNodeOnLevel[t]){var i=this.direction.getPosition(this.body.nodes[this.lastNodeOnLevel[t]]);if(n-i<this.options.hierarchical.nodeSpacing){var r=i+this.options.hierarchical.nodeSpacing-n,o=this._findCommonParent(this.lastNodeOnLevel[t],e.id);this._shiftBlock(o.withChild,r)}}this.lastNodeOnLevel[t]=e.id,this.positionedNodes[e.id]=!0,this._placeBranchNodes(e.id,t)}}},{key:"_indexArrayToNodes",value:function(e){for(var t=[],n=0;n<e.length;n++)t.push(this.body.nodes[e[n]]);return t}},{key:"_getDistribution",value:function(){var e,t,n={};for(e in this.body.nodes)if(this.body.nodes.hasOwnProperty(e)){t=this.body.nodes[e];var i=void 0===this.hierarchical.levels[e]?0:this.hierarchical.levels[e];this.direction.fix(t,i),void 0===n[i]&&(n[i]={}),n[i][e]=t}return n}},{key:"_getActiveEdges",value:function(e){var t=this,n=[];return Xi.forEach(e.edges,(function(e){-1!==t.body.edgeIndices.indexOf(e.id)&&n.push(e)})),n}},{key:"_getHubSizes",value:function(){var e=this,t={},n=this.body.nodeIndices;Xi.forEach(n,(function(n){var i=e.body.nodes[n],r=e._getActiveEdges(i).length;t[r]=!0}));var i=[];return Xi.forEach(t,(function(e){i.push(+e)})),Xl.sort(i,(function(e,t){return t-e})),i}},{key:"_determineLevelsByHubsize",value:function(){for(var e=this,t=function(t,n){e.hierarchical.levelDownstream(t,n)},n=this._getHubSizes(),i=function(i){var r=n[i];return 0===r?"break":void Xi.forEach(e.body.nodeIndices,(function(n){var i=e.body.nodes[n];r===e._getActiveEdges(i).length&&e._crawlNetwork(t,n)}))},r=0;r<n.length&&"break"!==i(r);++r);}},{key:"_determineLevelsCustomCallback",value:function(){var e=this;this._crawlNetwork((function(t,n,i){var r=e.hierarchical.levels[t.id];void 0===r&&(r=e.hierarchical.levels[t.id]=1e5);var o=(Ll.cloneOptions(t,"node"),Ll.cloneOptions(n,"node"),void Ll.cloneOptions(i,"edge"));e.hierarchical.levels[n.id]=r+o})),this.hierarchical.setMinLevelToZero(this.body.nodes)}},{key:"_determineLevelsDirected",value:function(){var e=this;this._crawlNetwork((function(t,n,i){var r=e.hierarchical.levels[t.id];e.hierarchical.levels[n.id];!function(t){Xi.forEach(e.body.edges,(function(e){if(e.toId===t.fromId&&e.fromId===t.toId)return!0}))}(i),void 0===r&&(r=e.hierarchical.levels[t.id]=1e4),e.hierarchical.levels[n.id]=i.toId==n.id?r+1:r-1})),this.hierarchical.setMinLevelToZero(this.body.nodes)}},{key:"_generateMap",value:function(){var e=this;this._crawlNetwork((function(t,n){e.hierarchical.levels[n.id]>e.hierarchical.levels[t.id]&&e.hierarchical.addRelation(t.id,n.id)})),this.hierarchical.checkIfTree()}},{key:"_crawlNetwork",value:function(){var e=this,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){},n=1<arguments.length?arguments[1]:void 0,i={},r=function n(r,o){if(void 0===i[r.id]){e.hierarchical.setTreeIndex(r,o),i[r.id]=!0;for(var s,a,l=e._getActiveEdges(r),u=0;u<l.length;u++)!0===(a=l[u]).connected&&(s=a.toId==r.id?a.from:a.to,r.id!=s.id&&(t(r,s,a),n(s,o)))}};if(void 0===n){for(var o,s=0,a=0;a<this.body.nodeIndices.length;a++)if(o=this.body.nodeIndices[a],void 0===i[o]){var l=this.body.nodes[o];r(l,s),s+=1}}else{var u=this.body.nodes[n];if(void 0===u)return void console.error("Node not found:",n);r(u)}}},{key:"_shiftBlock",value:function(e,t){var n=this,i={};!function e(r){if(!i[r]){i[r]=!0,n.direction.shift(r,t);var o=n.hierarchical.childrenReference[r];if(void 0!==o)for(var s=0;s<o.length;s++)e(o[s])}}(e)}},{key:"_findCommonParent",value:function(e,t){var n=this,i={};return function e(t,i){var r=n.hierarchical.parentReference[i];if(void 0!==r)for(var o,s=0;s<r.length;s++)t[o=r[s]]=!0,e(t,o)}(i,e),function e(t,i){var r=n.hierarchical.parentReference[i];if(void 0!==r)for(var o,s=0;s<r.length;s++){if(void 0!==t[o=r[s]])return{foundParent:o,withChild:i};var a=e(t,o);if(null!==a.foundParent)return a}return{foundParent:null,withChild:i}}(i,t)}},{key:"setDirectionStrategy",value:function(){var e="UD"===this.options.hierarchical.direction||"DU"===this.options.hierarchical.direction;this.direction=e?new Jl(this):new eu(this)}},{key:"_getCenterPosition",value:function(e){for(var t,n=1e9,i=-1e9,r=0;r<e.length;r++){if(t=void 0,void 0!==e[r].id)t=e[r];else{var o=e[r];t=this.body.nodes[o]}var a=this.direction.getPosition(t);n=l(n,a),i=s(i,a)}return.5*(n+i)}}]),d}(),iu=function(){function e(t,n,i){var r=this;ua(this,e),this.body=t,this.canvas=n,this.selectionHandler=i,this.editMode=!1,this.manipulationDiv=void 0,this.editModeDiv=void 0,this.closeDiv=void 0,this.manipulationHammers=[],this.temporaryUIFunctions={},this.temporaryEventFunctions=[],this.touchTime=0,this.temporaryIds={nodes:[],edges:[]},this.guiEnabled=!1,this.inMode=!1,this.selectedControlNode=void 0,this.options={},this.defaultOptions={enabled:!1,initiallyActive:!1,addNode:!0,addEdge:!0,editNode:void 0,editEdge:!0,deleteNode:!0,deleteEdge:!0,controlNodeStyle:{shape:"dot",size:6,color:{background:"#ff0000",border:"#3c3c3c",highlight:{background:"#07f968",border:"#3c3c3c"}},borderWidth:2,borderWidthSelected:2}},Xi.extend(this.options,this.defaultOptions),this.body.emitter.on("destroy",(function(){r._clean()})),this.body.emitter.on("_dataChanged",this._restore.bind(this)),this.body.emitter.on("_resetData",this._restore.bind(this))}return ca(e,[{key:"_restore",value:function(){!1!==this.inMode&&(!0===this.options.initiallyActive?this.enableEditMode():this.disableEditMode())}},{key:"setOptions",value:function(e,t,n){void 0!==t&&(this.options.locale=void 0===t.locale?n.locale:t.locale,this.options.locales=void 0===t.locales?n.locales:t.locales),void 0!==e&&("boolean"==typeof e?this.options.enabled=e:(this.options.enabled=!0,Xi.deepExtend(this.options,e)),!0===this.options.initiallyActive&&(this.editMode=!0),this._setup())}},{key:"toggleEditMode",value:function(){!0===this.editMode?this.disableEditMode():this.enableEditMode()}},{key:"enableEditMode",value:function(){this.editMode=!0,this._clean(),!0===this.guiEnabled&&(this.manipulationDiv.style.display="block",this.closeDiv.style.display="block",this.editModeDiv.style.display="none",this.showManipulatorToolbar())}},{key:"disableEditMode",value:function(){this.editMode=!1,this._clean(),!0===this.guiEnabled&&(this.manipulationDiv.style.display="none",this.closeDiv.style.display="none",this.editModeDiv.style.display="block",this._createEditButton())}},{key:"showManipulatorToolbar",value:function(){if(this._clean(),this.manipulationDOM={},!0===this.guiEnabled){this.editMode=!0,this.manipulationDiv.style.display="block",this.closeDiv.style.display="block";var e=this.selectionHandler._getSelectedNodeCount(),t=this.selectionHandler._getSelectedEdgeCount(),n=this.options.locales[this.options.locale],i=!1;!1!==this.options.addNode&&(this._createAddNodeButton(n),i=!0),!1!==this.options.addEdge&&(!0===i?this._createSeperator(1):i=!0,this._createAddEdgeButton(n)),1===e&&"function"==typeof this.options.editNode?(!0===i?this._createSeperator(2):i=!0,this._createEditNodeButton(n)):1===t&&0===e&&!1!==this.options.editEdge&&(!0===i?this._createSeperator(3):i=!0,this._createEditEdgeButton(n)),0!==e+t&&(0<e&&!1!==this.options.deleteNode?(!0===i&&this._createSeperator(4),this._createDeleteButton(n)):0===e&&!1!==this.options.deleteEdge&&(!0===i&&this._createSeperator(4),this._createDeleteButton(n))),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this)),this._temporaryBindEvent("select",this.showManipulatorToolbar.bind(this))}this.body.emitter.emit("_redraw")}},{key:"addNodeMode",value:function(){if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="addNode",!0===this.guiEnabled){var e=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(e),this._createSeperator(),this._createDescription(e.addDescription||this.options.locales.en.addDescription),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this))}this._temporaryBindEvent("click",this._performAddNode.bind(this))}},{key:"editNode",value:function(){var e=this;!0!==this.editMode&&this.enableEditMode(),this._clean();var t=this.selectionHandler._getSelectedNode();if(void 0===t)this.showManipulatorToolbar();else{if(this.inMode="editNode","function"!=typeof this.options.editNode)throw new Error("No function has been configured to handle the editing of nodes.");if(!0!==t.isCluster){var n=Xi.deepExtend({},t.options,!1);if(n.x=t.x,n.y=t.y,2!==this.options.editNode.length)throw new Error("The function for edit does not support two arguments (data, callback)");this.options.editNode(n,(function(t){null!=t&&"editNode"===e.inMode&&e.body.data.nodes.getDataSet().update(t),e.showManipulatorToolbar()}))}else alert(this.options.locales[this.options.locale].editClusterError||this.options.locales.en.editClusterError)}}},{key:"addEdgeMode",value:function(){if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="addEdge",!0===this.guiEnabled){var e=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(e),this._createSeperator(),this._createDescription(e.edgeDescription||this.options.locales.en.edgeDescription),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this))}this._temporaryBindUI("onTouch",this._handleConnect.bind(this)),this._temporaryBindUI("onDragEnd",this._finishConnect.bind(this)),this._temporaryBindUI("onDrag",this._dragControlNode.bind(this)),this._temporaryBindUI("onRelease",this._finishConnect.bind(this)),this._temporaryBindUI("onDragStart",this._dragStartEdge.bind(this)),this._temporaryBindUI("onHold",(function(){}))}},{key:"editEdgeMode",value:function(){if(!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="editEdge","object"!==_a(this.options.editEdge)||"function"!=typeof this.options.editEdge.editWithoutDrag||(this.edgeBeingEditedId=this.selectionHandler.getSelectedEdges()[0],void 0===this.edgeBeingEditedId)){if(!0===this.guiEnabled){var e=this.options.locales[this.options.locale];this.manipulationDOM={},this._createBackButton(e),this._createSeperator(),this._createDescription(e.editEdgeDescription||this.options.locales.en.editEdgeDescription),this._bindHammerToDiv(this.closeDiv,this.toggleEditMode.bind(this))}if(this.edgeBeingEditedId=this.selectionHandler.getSelectedEdges()[0],void 0!==this.edgeBeingEditedId){var t=this.body.edges[this.edgeBeingEditedId],n=this._getNewTargetNode(t.from.x,t.from.y),i=this._getNewTargetNode(t.to.x,t.to.y);this.temporaryIds.nodes.push(n.id),this.temporaryIds.nodes.push(i.id),this.body.nodes[n.id]=n,this.body.nodeIndices.push(n.id),this.body.nodes[i.id]=i,this.body.nodeIndices.push(i.id),this._temporaryBindUI("onTouch",this._controlNodeTouch.bind(this)),this._temporaryBindUI("onTap",(function(){})),this._temporaryBindUI("onHold",(function(){})),this._temporaryBindUI("onDragStart",this._controlNodeDragStart.bind(this)),this._temporaryBindUI("onDrag",this._controlNodeDrag.bind(this)),this._temporaryBindUI("onDragEnd",this._controlNodeDragEnd.bind(this)),this._temporaryBindUI("onMouseMove",(function(){})),this._temporaryBindEvent("beforeDrawing",(function(e){var r=t.edgeType.findBorderPositions(e);!1===n.selected&&(n.x=r.from.x,n.y=r.from.y),!1===i.selected&&(i.x=r.to.x,i.y=r.to.y)})),this.body.emitter.emit("_redraw")}else this.showManipulatorToolbar()}else{var r=this.body.edges[this.edgeBeingEditedId];this._performEditEdge(r.from,r.to)}}},{key:"deleteSelected",value:function(){var e=this;!0!==this.editMode&&this.enableEditMode(),this._clean(),this.inMode="delete";var t=this.selectionHandler.getSelectedNodes(),n=this.selectionHandler.getSelectedEdges(),i=void 0;if(0<t.length){for(var r=0;r<t.length;r++)if(!0===this.body.nodes[t[r]].isCluster)return void alert(this.options.locales[this.options.locale].deleteClusterError||this.options.locales.en.deleteClusterError);"function"==typeof this.options.deleteNode&&(i=this.options.deleteNode)}else 0<n.length&&"function"==typeof this.options.deleteEdge&&(i=this.options.deleteEdge);if("function"==typeof i){if(2!==i.length)throw new Error("The function for delete does not support two arguments (data, callback)");i({nodes:t,edges:n},(function(t){null!=t&&"delete"===e.inMode?(e.body.data.edges.getDataSet().remove(t.edges),e.body.data.nodes.getDataSet().remove(t.nodes),e.body.emitter.emit("startSimulation"),e.showManipulatorToolbar()):(e.body.emitter.emit("startSimulation"),e.showManipulatorToolbar())}))}else this.body.data.edges.getDataSet().remove(n),this.body.data.nodes.getDataSet().remove(t),this.body.emitter.emit("startSimulation"),this.showManipulatorToolbar()}},{key:"_setup",value:function(){!0===this.options.enabled?(this.guiEnabled=!0,this._createWrappers(),!1===this.editMode?this._createEditButton():this.showManipulatorToolbar()):(this._removeManipulationDOM(),this.guiEnabled=!1)}},{key:"_createWrappers",value:function(){void 0===this.manipulationDiv&&(this.manipulationDiv=document.createElement("div"),this.manipulationDiv.className="vis-manipulation",this.manipulationDiv.style.display=!0===this.editMode?"block":"none",this.canvas.frame.appendChild(this.manipulationDiv)),void 0===this.editModeDiv&&(this.editModeDiv=document.createElement("div"),this.editModeDiv.className="vis-edit-mode",this.editModeDiv.style.display=!0===this.editMode?"none":"block",this.canvas.frame.appendChild(this.editModeDiv)),void 0===this.closeDiv&&(this.closeDiv=document.createElement("div"),this.closeDiv.className="vis-close",this.closeDiv.style.display=this.manipulationDiv.style.display,this.canvas.frame.appendChild(this.closeDiv))}},{key:"_getNewTargetNode",value:function(e,t){var n=Xi.deepExtend({},this.options.controlNodeStyle);n.id="targetNode"+Xi.randomUUID(),n.hidden=!1,n.physics=!1,n.x=e,n.y=t;var i=this.body.functions.createNode(n);return i.shape.boundingBox={left:e,right:e,top:t,bottom:t},i}},{key:"_createEditButton",value:function(){this._clean(),this.manipulationDOM={},Xi.recursiveDOMDelete(this.editModeDiv);var e=this.options.locales[this.options.locale],t=this._createButton("editMode","vis-button vis-edit vis-edit-mode",e.edit||this.options.locales.en.edit);this.editModeDiv.appendChild(t),this._bindHammerToDiv(t,this.toggleEditMode.bind(this))}},{key:"_clean",value:function(){this.inMode=!1,!0===this.guiEnabled&&(Xi.recursiveDOMDelete(this.editModeDiv),Xi.recursiveDOMDelete(this.manipulationDiv),this._cleanManipulatorHammers()),this._cleanupTemporaryNodesAndEdges(),this._unbindTemporaryUIs(),this._unbindTemporaryEvents(),this.body.emitter.emit("restorePhysics")}},{key:"_cleanManipulatorHammers",value:function(){if(0!=this.manipulationHammers.length){for(var e=0;e<this.manipulationHammers.length;e++)this.manipulationHammers[e].destroy();this.manipulationHammers=[]}}},{key:"_removeManipulationDOM",value:function(){this._clean(),Xi.recursiveDOMDelete(this.manipulationDiv),Xi.recursiveDOMDelete(this.editModeDiv),Xi.recursiveDOMDelete(this.closeDiv),this.manipulationDiv&&this.canvas.frame.removeChild(this.manipulationDiv),this.editModeDiv&&this.canvas.frame.removeChild(this.editModeDiv),this.closeDiv&&this.canvas.frame.removeChild(this.closeDiv),this.manipulationDiv=void 0,this.editModeDiv=void 0,this.closeDiv=void 0}},{key:"_createSeperator",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1;this.manipulationDOM["seperatorLineDiv"+e]=document.createElement("div"),this.manipulationDOM["seperatorLineDiv"+e].className="vis-separator-line",this.manipulationDiv.appendChild(this.manipulationDOM["seperatorLineDiv"+e])}},{key:"_createAddNodeButton",value:function(e){var t=this._createButton("addNode","vis-button vis-add",e.addNode||this.options.locales.en.addNode);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.addNodeMode.bind(this))}},{key:"_createAddEdgeButton",value:function(e){var t=this._createButton("addEdge","vis-button vis-connect",e.addEdge||this.options.locales.en.addEdge);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.addEdgeMode.bind(this))}},{key:"_createEditNodeButton",value:function(e){var t=this._createButton("editNode","vis-button vis-edit",e.editNode||this.options.locales.en.editNode);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.editNode.bind(this))}},{key:"_createEditEdgeButton",value:function(e){var t=this._createButton("editEdge","vis-button vis-edit",e.editEdge||this.options.locales.en.editEdge);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.editEdgeMode.bind(this))}},{key:"_createDeleteButton",value:function(e){var t=this.options.rtl?"vis-button vis-delete-rtl":"vis-button vis-delete",n=this._createButton("delete",t,e.del||this.options.locales.en.del);this.manipulationDiv.appendChild(n),this._bindHammerToDiv(n,this.deleteSelected.bind(this))}},{key:"_createBackButton",value:function(e){var t=this._createButton("back","vis-button vis-back",e.back||this.options.locales.en.back);this.manipulationDiv.appendChild(t),this._bindHammerToDiv(t,this.showManipulatorToolbar.bind(this))}},{key:"_createButton",value:function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"vis-label";return this.manipulationDOM[e+"Div"]=document.createElement("div"),this.manipulationDOM[e+"Div"].className=t,this.manipulationDOM[e+"Label"]=document.createElement("div"),this.manipulationDOM[e+"Label"].className=i,this.manipulationDOM[e+"Label"].innerHTML=n,this.manipulationDOM[e+"Div"].appendChild(this.manipulationDOM[e+"Label"]),this.manipulationDOM[e+"Div"]}},{key:"_createDescription",value:function(e){this.manipulationDiv.appendChild(this._createButton("description","vis-button vis-none",e))}},{key:"_temporaryBindEvent",value:function(e,t){this.temporaryEventFunctions.push({event:e,boundFunction:t}),this.body.emitter.on(e,t)}},{key:"_temporaryBindUI",value:function(e,t){if(void 0===this.body.eventListeners[e])throw new Error("This UI function does not exist. Typo? You tried: "+e+" possible are: "+JSON.stringify(Object.keys(this.body.eventListeners)));this.temporaryUIFunctions[e]=this.body.eventListeners[e],this.body.eventListeners[e]=t}},{key:"_unbindTemporaryUIs",value:function(){for(var e in this.temporaryUIFunctions)this.temporaryUIFunctions.hasOwnProperty(e)&&(this.body.eventListeners[e]=this.temporaryUIFunctions[e],delete this.temporaryUIFunctions[e]);this.temporaryUIFunctions={}}},{key:"_unbindTemporaryEvents",value:function(){for(var e=0;e<this.temporaryEventFunctions.length;e++){var t=this.temporaryEventFunctions[e].event,n=this.temporaryEventFunctions[e].boundFunction;this.body.emitter.off(t,n)}this.temporaryEventFunctions=[]}},{key:"_bindHammerToDiv",value:function(e,t){var n=new ra(e,{});Hl.onTouch(n,t),this.manipulationHammers.push(n)}},{key:"_cleanupTemporaryNodesAndEdges",value:function(){for(var e=0;e<this.temporaryIds.edges.length;e++){this.body.edges[this.temporaryIds.edges[e]].disconnect(),delete this.body.edges[this.temporaryIds.edges[e]];var t=this.body.edgeIndices.indexOf(this.temporaryIds.edges[e]);-1!==t&&this.body.edgeIndices.splice(t,1)}for(var n=0;n<this.temporaryIds.nodes.length;n++){delete this.body.nodes[this.temporaryIds.nodes[n]];var i=this.body.nodeIndices.indexOf(this.temporaryIds.nodes[n]);-1!==i&&this.body.nodeIndices.splice(i,1)}this.temporaryIds={nodes:[],edges:[]}}},{key:"_controlNodeTouch",value:function(e){this.selectionHandler.unselectAll(),this.lastTouch=this.body.functions.getPointer(e.center),this.lastTouch.translation=Xi.extend({},this.body.view.translation)}},{key:"_controlNodeDragStart",value:function(){var e=this.lastTouch,t=this.selectionHandler._pointerToPositionObject(e),n=this.body.nodes[this.temporaryIds.nodes[0]],i=this.body.nodes[this.temporaryIds.nodes[1]],r=this.body.edges[this.edgeBeingEditedId];this.selectedControlNode=void 0;var o=n.isOverlappingWith(t),s=i.isOverlappingWith(t);!0===o?(this.selectedControlNode=n,r.edgeType.from=n):!0===s&&(this.selectedControlNode=i,r.edgeType.to=i),void 0!==this.selectedControlNode&&this.selectionHandler.selectObject(this.selectedControlNode),this.body.emitter.emit("_redraw")}},{key:"_controlNodeDrag",value:function(e){this.body.emitter.emit("disablePhysics");var t=this.body.functions.getPointer(e.center),n=this.canvas.DOMtoCanvas(t);if(void 0!==this.selectedControlNode)this.selectedControlNode.x=n.x,this.selectedControlNode.y=n.y;else{var i=t.x-this.lastTouch.x,r=t.y-this.lastTouch.y;this.body.view.translation={x:this.lastTouch.translation.x+i,y:this.lastTouch.translation.y+r}}this.body.emitter.emit("_redraw")}},{key:"_controlNodeDragEnd",value:function(e){var t=this.body.functions.getPointer(e.center),n=this.selectionHandler._pointerToPositionObject(t),i=this.body.edges[this.edgeBeingEditedId];if(void 0!==this.selectedControlNode){this.selectionHandler.unselectAll();for(var r=this.selectionHandler._getAllNodesOverlappingWith(n),o=void 0,s=r.length-1;0<=s;s--)if(r[s]!==this.selectedControlNode.id){o=this.body.nodes[r[s]];break}if(void 0===o||void 0===this.selectedControlNode)i.updateEdgeType(),this.body.emitter.emit("restorePhysics");else if(!0===o.isCluster)alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError);else{var a=this.body.nodes[this.temporaryIds.nodes[0]];this.selectedControlNode.id===a.id?this._performEditEdge(o.id,i.to.id):this._performEditEdge(i.from.id,o.id)}this.body.emitter.emit("_redraw")}}},{key:"_handleConnect",value:function(e){if(100<(new Date).valueOf()-this.touchTime){this.lastTouch=this.body.functions.getPointer(e.center),this.lastTouch.translation=Xi.extend({},this.body.view.translation);var t=this.lastTouch,n=this.selectionHandler.getNodeAt(t);if(void 0!==n)if(!0===n.isCluster)alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError);else{var i=this._getNewTargetNode(n.x,n.y);this.body.nodes[i.id]=i,this.body.nodeIndices.push(i.id);var r=this.body.functions.createEdge({id:"connectionEdge"+Xi.randomUUID(),from:n.id,to:i.id,physics:!1,smooth:{enabled:!0,type:"continuous",roundness:.5}});this.body.edges[r.id]=r,this.body.edgeIndices.push(r.id),this.temporaryIds.nodes.push(i.id),this.temporaryIds.edges.push(r.id)}this.touchTime=(new Date).valueOf()}}},{key:"_dragControlNode",value:function(e){var t=this.body.functions.getPointer(e.center),n=this.selectionHandler._pointerToPositionObject(t),i=void 0;void 0!==this.temporaryIds.edges[0]&&(i=this.body.edges[this.temporaryIds.edges[0]].fromId);for(var r=this.selectionHandler._getAllNodesOverlappingWith(n),o=void 0,s=r.length-1;0<=s;s--)if(-1===this.temporaryIds.nodes.indexOf(r[s])){o=this.body.nodes[r[s]];break}if(e.controlEdge={from:i,to:o?o.id:void 0},this.selectionHandler._generateClickEvent("controlNodeDragging",e,t),void 0!==this.temporaryIds.nodes[0]){var a=this.body.nodes[this.temporaryIds.nodes[0]];a.x=this.canvas._XconvertDOMtoCanvas(t.x),a.y=this.canvas._YconvertDOMtoCanvas(t.y),this.body.emitter.emit("_redraw")}else{var l=t.x-this.lastTouch.x,u=t.y-this.lastTouch.y;this.body.view.translation={x:this.lastTouch.translation.x+l,y:this.lastTouch.translation.y+u}}}},{key:"_finishConnect",value:function(e){var t=this.body.functions.getPointer(e.center),n=this.selectionHandler._pointerToPositionObject(t),i=void 0;void 0!==this.temporaryIds.edges[0]&&(i=this.body.edges[this.temporaryIds.edges[0]].fromId);for(var r=this.selectionHandler._getAllNodesOverlappingWith(n),o=void 0,s=r.length-1;0<=s;s--)if(-1===this.temporaryIds.nodes.indexOf(r[s])){o=this.body.nodes[r[s]];break}this._cleanupTemporaryNodesAndEdges(),void 0!==o&&(!0===o.isCluster?alert(this.options.locales[this.options.locale].createEdgeError||this.options.locales.en.createEdgeError):void 0!==this.body.nodes[i]&&void 0!==this.body.nodes[o.id]&&this._performAddEdge(i,o.id)),e.controlEdge={from:i,to:o?o.id:void 0},this.selectionHandler._generateClickEvent("controlNodeDragEnd",e,t),this.body.emitter.emit("_redraw")}},{key:"_dragStartEdge",value:function(e){var t=this.lastTouch;this.selectionHandler._generateClickEvent("dragStart",e,t,void 0,!0)}},{key:"_performAddNode",value:function(e){var t=this,n={id:Xi.randomUUID(),x:e.pointer.canvas.x,y:e.pointer.canvas.y,label:"new"};if("function"!=typeof this.options.addNode)this.body.data.nodes.getDataSet().add(n),this.showManipulatorToolbar();else{if(2!==this.options.addNode.length)throw this.showManipulatorToolbar(),new Error("The function for add does not support two arguments (data,callback)");this.options.addNode(n,(function(e){null!=e&&"addNode"===t.inMode&&t.body.data.nodes.getDataSet().add(e),t.showManipulatorToolbar()}))}}},{key:"_performAddEdge",value:function(e,t){var n=this,i={from:e,to:t};if("function"!=typeof this.options.addEdge)this.body.data.edges.getDataSet().add(i),this.selectionHandler.unselectAll(),this.showManipulatorToolbar();else{if(2!==this.options.addEdge.length)throw new Error("The function for connect does not support two arguments (data,callback)");this.options.addEdge(i,(function(e){null!=e&&"addEdge"===n.inMode&&(n.body.data.edges.getDataSet().add(e),n.selectionHandler.unselectAll(),n.showManipulatorToolbar())}))}}},{key:"_performEditEdge",value:function(e,t){var n=this,i={id:this.edgeBeingEditedId,from:e,to:t,label:this.body.data.edges._data[this.edgeBeingEditedId].label},r=this.options.editEdge;if("object"===_a(r)&&(r=r.editWithoutDrag),"function"!=typeof r)this.body.data.edges.getDataSet().update(i),this.selectionHandler.unselectAll(),this.showManipulatorToolbar();else{if(2!==r.length)throw new Error("The function for edit does not support two arguments (data, callback)");r(i,(function(e){null==e||"editEdge"!==n.inMode?(n.body.edges[i.id].updateEdgeType(),n.body.emitter.emit("_redraw"),n.showManipulatorToolbar()):(n.body.data.edges.getDataSet().update(e),n.selectionHandler.unselectAll(),n.showManipulatorToolbar())}))}}}]),e}(),ru={black:"#000000",navy:"#000080",darkblue:"#00008B",mediumblue:"#0000CD",blue:"#0000FF",darkgreen:"#006400",green:"#008000",teal:"#008080",darkcyan:"#008B8B",deepskyblue:"#00BFFF",darkturquoise:"#00CED1",mediumspringgreen:"#00FA9A",lime:"#00FF00",springgreen:"#00FF7F",aqua:"#00FFFF",cyan:"#00FFFF",midnightblue:"#191970",dodgerblue:"#1E90FF",lightseagreen:"#20B2AA",forestgreen:"#228B22",seagreen:"#2E8B57",darkslategray:"#2F4F4F",limegreen:"#32CD32",mediumseagreen:"#3CB371",turquoise:"#40E0D0",royalblue:"#4169E1",steelblue:"#4682B4",darkslateblue:"#483D8B",mediumturquoise:"#48D1CC",indigo:"#4B0082",darkolivegreen:"#556B2F",cadetblue:"#5F9EA0",cornflowerblue:"#6495ED",mediumaquamarine:"#66CDAA",dimgray:"#696969",slateblue:"#6A5ACD",olivedrab:"#6B8E23",slategray:"#708090",lightslategray:"#778899",mediumslateblue:"#7B68EE",lawngreen:"#7CFC00",chartreuse:"#7FFF00",aquamarine:"#7FFFD4",maroon:"#800000",purple:"#800080",olive:"#808000",gray:"#808080",skyblue:"#87CEEB",lightskyblue:"#87CEFA",blueviolet:"#8A2BE2",darkred:"#8B0000",darkmagenta:"#8B008B",saddlebrown:"#8B4513",darkseagreen:"#8FBC8F",lightgreen:"#90EE90",mediumpurple:"#9370D8",darkviolet:"#9400D3",palegreen:"#98FB98",darkorchid:"#9932CC",yellowgreen:"#9ACD32",sienna:"#A0522D",brown:"#A52A2A",darkgray:"#A9A9A9",lightblue:"#ADD8E6",greenyellow:"#ADFF2F",paleturquoise:"#AFEEEE",lightsteelblue:"#B0C4DE",powderblue:"#B0E0E6",firebrick:"#B22222",darkgoldenrod:"#B8860B",mediumorchid:"#BA55D3",rosybrown:"#BC8F8F",darkkhaki:"#BDB76B",silver:"#C0C0C0",mediumvioletred:"#C71585",indianred:"#CD5C5C",peru:"#CD853F",chocolate:"#D2691E",tan:"#D2B48C",lightgrey:"#D3D3D3",palevioletred:"#D87093",thistle:"#D8BFD8",orchid:"#DA70D6",goldenrod:"#DAA520",crimson:"#DC143C",gainsboro:"#DCDCDC",plum:"#DDA0DD",burlywood:"#DEB887",lightcyan:"#E0FFFF",lavender:"#E6E6FA",darksalmon:"#E9967A",violet:"#EE82EE",palegoldenrod:"#EEE8AA",lightcoral:"#F08080",khaki:"#F0E68C",aliceblue:"#F0F8FF",honeydew:"#F0FFF0",azure:"#F0FFFF",sandybrown:"#F4A460",wheat:"#F5DEB3",beige:"#F5F5DC",whitesmoke:"#F5F5F5",mintcream:"#F5FFFA",ghostwhite:"#F8F8FF",salmon:"#FA8072",antiquewhite:"#FAEBD7",linen:"#FAF0E6",lightgoldenrodyellow:"#FAFAD2",oldlace:"#FDF5E6",red:"#FF0000",fuchsia:"#FF00FF",magenta:"#FF00FF",deeppink:"#FF1493",orangered:"#FF4500",tomato:"#FF6347",hotpink:"#FF69B4",coral:"#FF7F50",darkorange:"#FF8C00",lightsalmon:"#FFA07A",orange:"#FFA500",lightpink:"#FFB6C1",pink:"#FFC0CB",gold:"#FFD700",peachpuff:"#FFDAB9",navajowhite:"#FFDEAD",moccasin:"#FFE4B5",bisque:"#FFE4C4",mistyrose:"#FFE4E1",blanchedalmond:"#FFEBCD",papayawhip:"#FFEFD5",lavenderblush:"#FFF0F5",seashell:"#FFF5EE",cornsilk:"#FFF8DC",lemonchiffon:"#FFFACD",floralwhite:"#FFFAF0",snow:"#FFFAFA",yellow:"#FFFF00",lightyellow:"#FFFFE0",ivory:"#FFFFF0",white:"#FFFFFF"},ou=function(){var e=Math.atan2,t=Math.cos,n=Math.sin,i=Math.sqrt,r=Math.PI,o=Math.min;function s(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1;ua(this,s),this.pixelRatio=e,this.generated=!1,this.centerCoordinates={x:144.5,y:144.5},this.r=289*.49,this.color={r:255,g:255,b:255,a:1},this.hueCircle=void 0,this.initialColor={r:255,g:255,b:255,a:1},this.previousColor=void 0,this.applied=!1,this.updateCallback=function(){},this.closeCallback=function(){},this._create()}return ca(s,[{key:"insertTo",value:function(e){void 0!==this.hammer&&(this.hammer.destroy(),this.hammer=void 0),this.container=e,this.container.appendChild(this.frame),this._bindHammer(),this._setSize()}},{key:"setUpdateCallback",value:function(e){if("function"!=typeof e)throw new Error("Function attempted to set as colorPicker update callback is not a function.");this.updateCallback=e}},{key:"setCloseCallback",value:function(e){if("function"!=typeof e)throw new Error("Function attempted to set as colorPicker closing callback is not a function.");this.closeCallback=e}},{key:"_isColorString",value:function(e){if("string"==typeof e)return ru[e]}},{key:"setColor",value:function(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];if("none"!==e){var n,i=this._isColorString(e);if(void 0!==i&&(e=i),!0===Xi.isString(e)){if(!0===Xi.isValidRGB(e)){var r=e.substr(4).substr(0,e.length-5).split(",");n={r:r[0],g:r[1],b:r[2],a:1}}else if(!0===Xi.isValidRGBA(e)){var o=e.substr(5).substr(0,e.length-6).split(",");n={r:o[0],g:o[1],b:o[2],a:o[3]}}else if(!0===Xi.isValidHex(e)){var s=Xi.hexToRGB(e);n={r:s.r,g:s.g,b:s.b,a:1}}}else if(e instanceof Object&&void 0!==e.r&&void 0!==e.g&&void 0!==e.b){var a=void 0===e.a?"1.0":e.a;n={r:e.r,g:e.g,b:e.b,a:a}}if(void 0===n)throw new Error("Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: "+JSON.stringify(e));this._setColor(n,t)}}},{key:"show",value:function(){void 0!==this.closeCallback&&(this.closeCallback(),this.closeCallback=void 0),this.applied=!1,this.frame.style.display="block",this._generateHueCircle()}},{key:"_hide",value:function(){var e=this,t=!(0<arguments.length&&void 0!==arguments[0])||arguments[0];!0===t&&(this.previousColor=Xi.extend({},this.color)),!0===this.applied&&this.updateCallback(this.initialColor),this.frame.style.display="none",setTimeout((function(){void 0!==e.closeCallback&&(e.closeCallback(),e.closeCallback=void 0)}),0)}},{key:"_save",value:function(){this.updateCallback(this.color),this.applied=!1,this._hide()}},{key:"_apply",value:function(){this.applied=!0,this.updateCallback(this.color),this._updatePicker(this.color)}},{key:"_loadLast",value:function(){void 0===this.previousColor?alert("There is no last color to load..."):this.setColor(this.previousColor,!1)}},{key:"_setColor",value:function(e){var i=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];!0===i&&(this.initialColor=Xi.extend({},e)),this.color=e;var o=Xi.RGBToHSV(e.r,e.g,e.b),s=2*r,a=this.r*o.s,l=this.centerCoordinates.x+a*n(s*o.h),u=this.centerCoordinates.y+a*t(s*o.h);this.colorPickerSelector.style.left=l-.5*this.colorPickerSelector.clientWidth+"px",this.colorPickerSelector.style.top=u-.5*this.colorPickerSelector.clientHeight+"px",this._updatePicker(e)}},{key:"_setOpacity",value:function(e){this.color.a=e/100,this._updatePicker(this.color)}},{key:"_setBrightness",value:function(e){var t=Xi.RGBToHSV(this.color.r,this.color.g,this.color.b);t.v=e/100;var n=Xi.HSVToRGB(t.h,t.s,t.v);n.a=this.color.a,this.color=n,this._updatePicker()}},{key:"_updatePicker",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.color,t=Xi.RGBToHSV(e.r,e.g,e.b),n=this.colorPickerCanvas.getContext("2d");void 0===this.pixelRation&&(this.pixelRatio=(window.devicePixelRatio||1)/(n.webkitBackingStorePixelRatio||n.mozBackingStorePixelRatio||n.msBackingStorePixelRatio||n.oBackingStorePixelRatio||n.backingStorePixelRatio||1)),n.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);var i=this.colorPickerCanvas.clientWidth,r=this.colorPickerCanvas.clientHeight;n.clearRect(0,0,i,r),n.putImageData(this.hueCircle,0,0),n.fillStyle="rgba(0,0,0,"+(1-t.v)+")",n.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r),n.fill(),this.brightnessRange.value=100*t.v,this.opacityRange.value=100*e.a,this.initialColorDiv.style.backgroundColor="rgba("+this.initialColor.r+","+this.initialColor.g+","+this.initialColor.b+","+this.initialColor.a+")",this.newColorDiv.style.backgroundColor="rgba("+this.color.r+","+this.color.g+","+this.color.b+","+this.color.a+")"}},{key:"_setSize",value:function(){this.colorPickerCanvas.style.width="100%",this.colorPickerCanvas.style.height="100%",this.colorPickerCanvas.width=289*this.pixelRatio,this.colorPickerCanvas.height=289*this.pixelRatio}},{key:"_create",value:function(){if(this.frame=document.createElement("div"),this.frame.className="vis-color-picker",this.colorPickerDiv=document.createElement("div"),this.colorPickerSelector=document.createElement("div"),this.colorPickerSelector.className="vis-selector",this.colorPickerDiv.appendChild(this.colorPickerSelector),this.colorPickerCanvas=document.createElement("canvas"),this.colorPickerDiv.appendChild(this.colorPickerCanvas),this.colorPickerCanvas.getContext){var e=this.colorPickerCanvas.getContext("2d");this.pixelRatio=(window.devicePixelRatio||1)/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1),this.colorPickerCanvas.getContext("2d").setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0)}else{var t=document.createElement("DIV");t.style.color="red",t.style.fontWeight="bold",t.style.padding="10px",t.innerHTML="Error: your browser does not support HTML canvas",this.colorPickerCanvas.appendChild(t)}this.colorPickerDiv.className="vis-color",this.opacityDiv=document.createElement("div"),this.opacityDiv.className="vis-opacity",this.brightnessDiv=document.createElement("div"),this.brightnessDiv.className="vis-brightness",this.arrowDiv=document.createElement("div"),this.arrowDiv.className="vis-arrow",this.opacityRange=document.createElement("input");try{this.opacityRange.type="range",this.opacityRange.min="0",this.opacityRange.max="100"}catch(t){}this.opacityRange.value="100",this.opacityRange.className="vis-range",this.brightnessRange=document.createElement("input");try{this.brightnessRange.type="range",this.brightnessRange.min="0",this.brightnessRange.max="100"}catch(t){}this.brightnessRange.value="100",this.brightnessRange.className="vis-range",this.opacityDiv.appendChild(this.opacityRange),this.brightnessDiv.appendChild(this.brightnessRange);var n=this;this.opacityRange.onchange=function(){n._setOpacity(this.value)},this.opacityRange.oninput=function(){n._setOpacity(this.value)},this.brightnessRange.onchange=function(){n._setBrightness(this.value)},this.brightnessRange.oninput=function(){n._setBrightness(this.value)},this.brightnessLabel=document.createElement("div"),this.brightnessLabel.className="vis-label vis-brightness",this.brightnessLabel.innerHTML="brightness:",this.opacityLabel=document.createElement("div"),this.opacityLabel.className="vis-label vis-opacity",this.opacityLabel.innerHTML="opacity:",this.newColorDiv=document.createElement("div"),this.newColorDiv.className="vis-new-color",this.newColorDiv.innerHTML="new",this.initialColorDiv=document.createElement("div"),this.initialColorDiv.className="vis-initial-color",this.initialColorDiv.innerHTML="initial",this.cancelButton=document.createElement("div"),this.cancelButton.className="vis-button vis-cancel",this.cancelButton.innerHTML="cancel",this.cancelButton.onclick=this._hide.bind(this,!1),this.applyButton=document.createElement("div"),this.applyButton.className="vis-button vis-apply",this.applyButton.innerHTML="apply",this.applyButton.onclick=this._apply.bind(this),this.saveButton=document.createElement("div"),this.saveButton.className="vis-button vis-save",this.saveButton.innerHTML="save",this.saveButton.onclick=this._save.bind(this),this.loadButton=document.createElement("div"),this.loadButton.className="vis-button vis-load",this.loadButton.innerHTML="load last",this.loadButton.onclick=this._loadLast.bind(this),this.frame.appendChild(this.colorPickerDiv),this.frame.appendChild(this.arrowDiv),this.frame.appendChild(this.brightnessLabel),this.frame.appendChild(this.brightnessDiv),this.frame.appendChild(this.opacityLabel),this.frame.appendChild(this.opacityDiv),this.frame.appendChild(this.newColorDiv),this.frame.appendChild(this.initialColorDiv),this.frame.appendChild(this.cancelButton),this.frame.appendChild(this.applyButton),this.frame.appendChild(this.saveButton),this.frame.appendChild(this.loadButton)}},{key:"_bindHammer",value:function(){var e=this;this.drag={},this.pinch={},this.hammer=new ra(this.colorPickerCanvas),this.hammer.get("pinch").set({enable:!0}),Hl.onTouch(this.hammer,(function(t){e._moveSelector(t)})),this.hammer.on("tap",(function(t){e._moveSelector(t)})),this.hammer.on("panstart",(function(t){e._moveSelector(t)})),this.hammer.on("panmove",(function(t){e._moveSelector(t)})),this.hammer.on("panend",(function(t){e._moveSelector(t)}))}},{key:"_generateHueCircle",value:function(){if(!1===this.generated){var e=this.colorPickerCanvas.getContext("2d");void 0===this.pixelRation&&(this.pixelRatio=(window.devicePixelRatio||1)/(e.webkitBackingStorePixelRatio||e.mozBackingStorePixelRatio||e.msBackingStorePixelRatio||e.oBackingStorePixelRatio||e.backingStorePixelRatio||1)),e.setTransform(this.pixelRatio,0,0,this.pixelRatio,0,0);var i,o,s,a,l=this.colorPickerCanvas.clientWidth,u=this.colorPickerCanvas.clientHeight;e.clearRect(0,0,l,u),this.centerCoordinates={x:.5*l,y:.5*u},this.r=.49*l;var d,c=2*r/360,h=1/this.r;for(s=0;360>s;s++)for(a=0;a<this.r;a++)i=this.centerCoordinates.x+a*n(c*s),o=this.centerCoordinates.y+a*t(c*s),d=Xi.HSVToRGB(s*(1/360),a*h,1),e.fillStyle="rgb("+d.r+","+d.g+","+d.b+")",e.fillRect(i-.5,o-.5,2,2);e.strokeStyle="rgba(0,0,0,1)",e.circle(this.centerCoordinates.x,this.centerCoordinates.y,this.r),e.stroke(),this.hueCircle=e.getImageData(0,0,l,u)}this.generated=!0}},{key:"_moveSelector",value:function(s){var a=this.colorPickerDiv.getBoundingClientRect(),l=s.center.x-a.left,u=s.center.y-a.top,d=.5*this.colorPickerDiv.clientHeight,c=.5*this.colorPickerDiv.clientWidth,h=l-c,f=u-d,p=e(h,f),v=.98*o(i(h*h+f*f),c),m=t(p)*v+d,y=n(p)*v+c;this.colorPickerSelector.style.top=m-.5*this.colorPickerSelector.clientHeight+"px",this.colorPickerSelector.style.left=y-.5*this.colorPickerSelector.clientWidth+"px";var g=p/(2*r);g=0>g?g+1:g;var b=v/this.r,_=Xi.RGBToHSV(this.color.r,this.color.g,this.color.b);_.h=g,_.s=b;var w=Xi.HSVToRGB(_.h,_.s,_.v);w.a=this.color.a,this.color=w,this.initialColorDiv.style.backgroundColor="rgba("+this.initialColor.r+","+this.initialColor.g+","+this.initialColor.b+","+this.initialColor.a+")",this.newColorDiv.style.backgroundColor="rgba("+this.color.r+","+this.color.g+","+this.color.b+","+this.color.a+")"}}]),s}(),su=function(){var e=Math.ceil;function t(e,n,i){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;ua(this,t),this.parent=e,this.changedOptions=[],this.container=n,this.allowCreation=!1,this.options={},this.initialized=!1,this.popupCounter=0,this.defaultOptions={enabled:!1,filter:!0,container:void 0,showButton:!0},Xi.extend(this.options,this.defaultOptions),this.configureOptions=i,this.moduleOptions={},this.domElements=[],this.popupDiv={},this.popupLimit=5,this.popupHistory={},this.colorPicker=new ou(r),this.wrapper=void 0}return ca(t,[{key:"setOptions",value:function(e){if(void 0!==e){this.popupHistory={},this._removePopup();var t=!0;if("string"==typeof e)this.options.filter=e;else if(e instanceof Array)this.options.filter=e.join();else if("object"===_a(e)){if(null==e)throw new TypeError("options cannot be null");void 0!==e.container&&(this.options.container=e.container),void 0!==e.filter&&(this.options.filter=e.filter),void 0!==e.showButton&&(this.options.showButton=e.showButton),void 0!==e.enabled&&(t=e.enabled)}else"boolean"==typeof e?(this.options.filter=!0,t=e):"function"==typeof e&&(this.options.filter=e,t=!0);!1===this.options.filter&&(t=!1),this.options.enabled=t}this._clean()}},{key:"setModuleOptions",value:function(e){this.moduleOptions=e,!0===this.options.enabled&&(this._clean(),void 0!==this.options.container&&(this.container=this.options.container),this._create())}},{key:"_create",value:function(){this._clean(),this.changedOptions=[];var e=this.options.filter,t=0,n=!1;for(var i in this.configureOptions)this.configureOptions.hasOwnProperty(i)&&(this.allowCreation=!1,n=!1,"function"==typeof e?n=(n=e(i,[]))||this._handleObject(this.configureOptions[i],[i],!0):(!0===e||-1!==e.indexOf(i))&&(n=!0),!1!==n&&(this.allowCreation=!0,0<t&&this._makeItem([]),this._makeHeader(i),this._handleObject(this.configureOptions[i],[i])),t++);this._makeButton(),this._push()}},{key:"_push",value:function(){this.wrapper=document.createElement("div"),this.wrapper.className="vis-configuration-wrapper",this.container.appendChild(this.wrapper);for(var e=0;e<this.domElements.length;e++)this.wrapper.appendChild(this.domElements[e]);this._showPopupIfNeeded()}},{key:"_clean",value:function(){for(var e=0;e<this.domElements.length;e++)this.wrapper.removeChild(this.domElements[e]);void 0!==this.wrapper&&(this.container.removeChild(this.wrapper),this.wrapper=void 0),this.domElements=[],this._removePopup()}},{key:"_getValue",value:function(e){for(var t=this.moduleOptions,n=0;n<e.length;n++){if(void 0===t[e[n]]){t=void 0;break}t=t[e[n]]}return t}},{key:"_makeItem",value:function(e){if(!0===this.allowCreation){var t=document.createElement("div");t.className="vis-configuration vis-config-item vis-config-s"+e.length;for(var n=arguments.length,i=Array(1<n?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r];return i.forEach((function(e){t.appendChild(e)})),this.domElements.push(t),this.domElements.length}return 0}},{key:"_makeHeader",value:function(e){var t=document.createElement("div");t.className="vis-configuration vis-config-header",t.innerHTML=e,this._makeItem([],t)}},{key:"_makeLabel",value:function(e,t){var n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],i=document.createElement("div");return i.className="vis-configuration vis-config-label vis-config-s"+t.length,i.innerHTML=!0===n?"<i><b>"+e+":</b></i>":e+":",i}},{key:"_makeDropdown",value:function(e,t,n){var i=document.createElement("select");i.className="vis-configuration vis-config-select";var r=0;void 0!==t&&-1!==e.indexOf(t)&&(r=e.indexOf(t));for(var o,s=0;s<e.length;s++)(o=document.createElement("option")).value=e[s],s==r&&(o.selected="selected"),o.innerHTML=e[s],i.appendChild(o);var a=this;i.onchange=function(){a._update(this.value,n)};var l=this._makeLabel(n[n.length-1],n);this._makeItem(n,l,i)}},{key:"_makeRange",value:function(t,n,i){var r=t[0],o=t[1],s=t[2],a=t[3],l=document.createElement("input");l.className="vis-configuration vis-config-range";try{l.type="range",l.min=o,l.max=s}catch(t){}l.step=a;var u="",d=0;if(void 0!==n){var c=1.2;0>n&&n*c<o?(l.min=e(n*c),d=l.min,u="range increased"):n/c<o&&(l.min=e(n/c),d=l.min,u="range increased"),n*c>s&&1!==s&&(l.max=e(n*c),d=l.max,u="range increased"),l.value=n}else l.value=r;var h=document.createElement("input");h.className="vis-configuration vis-config-rangeinput",h.value=l.value;var f=this;l.onchange=function(){h.value=this.value,f._update(+this.value,i)},l.oninput=function(){h.value=this.value};var p=this._makeLabel(i[i.length-1],i),v=this._makeItem(i,p,l,h);""!=u&&this.popupHistory[v]!==d&&(this.popupHistory[v]=d,this._setupPopup(u,v))}},{key:"_makeButton",value:function(){var e=this;if(!0===this.options.showButton){var t=document.createElement("div");t.className="vis-configuration vis-config-button",t.innerHTML="generate options",t.onclick=function(){e._printOptions()},t.onmouseover=function(){t.className="vis-configuration vis-config-button hover"},t.onmouseout=function(){t.className="vis-configuration vis-config-button"},this.optionsContainer=document.createElement("div"),this.optionsContainer.className="vis-configuration vis-config-option-container",this.domElements.push(this.optionsContainer),this.domElements.push(t)}}},{key:"_setupPopup",value:function(e,t){var n=this;if(!0===this.initialized&&!0===this.allowCreation&&this.popupCounter<this.popupLimit){var i=document.createElement("div");i.id="vis-configuration-popup",i.className="vis-configuration-popup",i.innerHTML=e,i.onclick=function(){n._removePopup()},this.popupCounter+=1,this.popupDiv={html:i,index:t}}}},{key:"_removePopup",value:function(){void 0!==this.popupDiv.html&&(this.popupDiv.html.parentNode.removeChild(this.popupDiv.html),clearTimeout(this.popupDiv.hideTimeout),clearTimeout(this.popupDiv.deleteTimeout),this.popupDiv={})}},{key:"_showPopupIfNeeded",value:function(){var e=this;if(void 0!==this.popupDiv.html){var t=this.domElements[this.popupDiv.index].getBoundingClientRect();this.popupDiv.html.style.left=t.left+"px",this.popupDiv.html.style.top=t.top-30+"px",document.body.appendChild(this.popupDiv.html),this.popupDiv.hideTimeout=setTimeout((function(){e.popupDiv.html.style.opacity=0}),1500),this.popupDiv.deleteTimeout=setTimeout((function(){e._removePopup()}),1800)}}},{key:"_makeCheckbox",value:function(e,t,n){var i=document.createElement("input");i.type="checkbox",i.className="vis-configuration vis-config-checkbox",i.checked=e,void 0!==t&&(i.checked=t,t!==e&&("object"===_a(e)?t!==e.enabled&&this.changedOptions.push({path:n,value:t}):this.changedOptions.push({path:n,value:t})));var r=this;i.onchange=function(){r._update(this.checked,n)};var o=this._makeLabel(n[n.length-1],n);this._makeItem(n,o,i)}},{key:"_makeTextInput",value:function(e,t,n){var i=document.createElement("input");i.type="text",i.className="vis-configuration vis-config-text",i.value=t,t!==e&&this.changedOptions.push({path:n,value:t});var r=this;i.onchange=function(){r._update(this.value,n)};var o=this._makeLabel(n[n.length-1],n);this._makeItem(n,o,i)}},{key:"_makeColorField",value:function(e,t,n){var i=this,r=e[1],o=document.createElement("div");"none"===(t=void 0===t?r:t)?o.className="vis-configuration vis-config-colorBlock none":(o.className="vis-configuration vis-config-colorBlock",o.style.backgroundColor=t),t=void 0===t?r:t,o.onclick=function(){i._showColorPicker(t,o,n)};var s=this._makeLabel(n[n.length-1],n);this._makeItem(n,s,o)}},{key:"_showColorPicker",value:function(e,t,n){var i=this;t.onclick=function(){},this.colorPicker.insertTo(t),this.colorPicker.show(),this.colorPicker.setColor(e),this.colorPicker.setUpdateCallback((function(e){var r="rgba("+e.r+","+e.g+","+e.b+","+e.a+")";t.style.backgroundColor=r,i._update(r,n)})),this.colorPicker.setCloseCallback((function(){t.onclick=function(){i._showColorPicker(e,t,n)}}))}},{key:"_handleObject",value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[],n=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],i=!1,r=this.options.filter,o=!1;for(var s in e)if(e.hasOwnProperty(s)){i=!0;var a=e[s],l=Xi.copyAndExtendArray(t,s);if("function"==typeof r&&(!1===(i=r(s,t))&&!(a instanceof Array)&&"string"!=typeof a&&"boolean"!=typeof a&&a instanceof Object&&(this.allowCreation=!1,i=this._handleObject(a,l,!0),this.allowCreation=!1===n)),!1!==i){o=!0;var u=this._getValue(l);if(a instanceof Array)this._handleArray(a,u,l);else if("string"==typeof a)this._makeTextInput(a,u,l);else if("boolean"==typeof a)this._makeCheckbox(a,u,l);else if(a instanceof Object){var d=!0;if(-1!==t.indexOf("physics")&&this.moduleOptions.physics.solver!==s&&(d=!1),1==d)if(void 0!==a.enabled){var c=Xi.copyAndExtendArray(l,"enabled"),h=this._getValue(c);if(!0===h){var f=this._makeLabel(s,l,!0);this._makeItem(l,f),o=this._handleObject(a,l)||o}else this._makeCheckbox(a,h,l)}else{var p=this._makeLabel(s,l,!0);this._makeItem(l,p),o=this._handleObject(a,l)||o}}else console.error("dont know how to handle",a,s,l)}}return o}},{key:"_handleArray",value:function(e,t,n){"string"==typeof e[0]&&"color"===e[0]?(this._makeColorField(e,t,n),e[1]!==t&&this.changedOptions.push({path:n,value:t})):"string"==typeof e[0]?(this._makeDropdown(e,t,n),e[0]!==t&&this.changedOptions.push({path:n,value:t})):"number"==typeof e[0]&&(this._makeRange(e,t,n),e[0]!==t&&this.changedOptions.push({path:n,value:+t}))}},{key:"_update",value:function(e,t){var n=this._constructOptions(e,t);this.parent.body&&this.parent.body.emitter&&this.parent.body.emitter.emit&&this.parent.body.emitter.emit("configChange",n),this.initialized=!0,this.parent.setOptions(n)}},{key:"_constructOptions",value:function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},i=n;e="false"!==(e="true"===e||e)&&e;for(var r=0;r<t.length;r++)"global"!==t[r]&&(void 0===i[t[r]]&&(i[t[r]]={}),r==t.length-1?i[t[r]]=e:i=i[t[r]]);return n}},{key:"_printOptions",value:function(){var e=this.getOptions();this.optionsContainer.innerHTML="<pre>var options = "+JSON.stringify(e,null,2)+"</pre>"}},{key:"getOptions",value:function(){for(var e={},t=0;t<this.changedOptions.length;t++)this._constructOptions(this.changedOptions[t].value,this.changedOptions[t].path,e);return e}}]),t}(),au="string",lu="boolean",uu="number",du="object",cu=["arrow","circle","bar"],hu={configure:{enabled:{boolean:lu},filter:{boolean:lu,string:au,array:"array",function:"function"},container:{dom:"dom"},showButton:{boolean:lu},__type__:{object:du,boolean:lu,string:au,array:"array",function:"function"}},edges:{arrows:{to:{enabled:{boolean:lu},scaleFactor:{number:uu},type:{string:cu},__type__:{object:du,boolean:lu}},middle:{enabled:{boolean:lu},scaleFactor:{number:uu},type:{string:cu},__type__:{object:du,boolean:lu}},from:{enabled:{boolean:lu},scaleFactor:{number:uu},type:{string:cu},__type__:{object:du,boolean:lu}},__type__:{string:["from","to","middle"],object:du}},arrowStrikethrough:{boolean:lu},background:{enabled:{boolean:lu},color:{string:au},size:{number:uu},dashes:{boolean:lu,array:"array"},__type__:{object:du,boolean:lu}},chosen:{label:{boolean:lu,function:"function"},edge:{boolean:lu,function:"function"},__type__:{object:du,boolean:lu}},color:{color:{string:au},highlight:{string:au},hover:{string:au},inherit:{string:["from","to","both"],boolean:lu},opacity:{number:uu},__type__:{object:du,string:au}},dashes:{boolean:lu,array:"array"},font:{color:{string:au},size:{number:uu},face:{string:au},background:{string:au},strokeWidth:{number:uu},strokeColor:{string:au},align:{string:["horizontal","top","middle","bottom"]},vadjust:{number:uu},multi:{boolean:lu,string:au},bold:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},boldital:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},ital:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},mono:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},__type__:{object:du,string:au}},hidden:{boolean:lu},hoverWidth:{function:"function",number:uu},label:{string:au,undefined:"undefined"},labelHighlightBold:{boolean:lu},length:{number:uu,undefined:"undefined"},physics:{boolean:lu},scaling:{min:{number:uu},max:{number:uu},label:{enabled:{boolean:lu},min:{number:uu},max:{number:uu},maxVisible:{number:uu},drawThreshold:{number:uu},__type__:{object:du,boolean:lu}},customScalingFunction:{function:"function"},__type__:{object:du}},selectionWidth:{function:"function",number:uu},selfReferenceSize:{number:uu},shadow:{enabled:{boolean:lu},color:{string:au},size:{number:uu},x:{number:uu},y:{number:uu},__type__:{object:du,boolean:lu}},smooth:{enabled:{boolean:lu},type:{string:["dynamic","continuous","discrete","diagonalCross","straightCross","horizontal","vertical","curvedCW","curvedCCW","cubicBezier"]},roundness:{number:uu},forceDirection:{string:["horizontal","vertical","none"],boolean:lu},__type__:{object:du,boolean:lu}},title:{string:au,undefined:"undefined"},width:{number:uu},widthConstraint:{maximum:{number:uu},__type__:{object:du,boolean:lu,number:uu}},value:{number:uu,undefined:"undefined"},__type__:{object:du}},groups:{useDefaultGroups:{boolean:lu},__any__:"get from nodes, will be overwritten below",__type__:{object:du}},interaction:{dragNodes:{boolean:lu},dragView:{boolean:lu},hideEdgesOnDrag:{boolean:lu},hideEdgesOnZoom:{boolean:lu},hideNodesOnDrag:{boolean:lu},hover:{boolean:lu},keyboard:{enabled:{boolean:lu},speed:{x:{number:uu},y:{number:uu},zoom:{number:uu},__type__:{object:du}},bindToWindow:{boolean:lu},__type__:{object:du,boolean:lu}},multiselect:{boolean:lu},navigationButtons:{boolean:lu},selectable:{boolean:lu},selectConnectedEdges:{boolean:lu},hoverConnectedEdges:{boolean:lu},tooltipDelay:{number:uu},zoomView:{boolean:lu},zoomSpeed:{number:uu},__type__:{object:du}},layout:{randomSeed:{undefined:"undefined",number:uu},improvedLayout:{boolean:lu},clusterThreshold:{number:uu},hierarchical:{enabled:{boolean:lu},levelSeparation:{number:uu},nodeSpacing:{number:uu},treeSpacing:{number:uu},blockShifting:{boolean:lu},edgeMinimization:{boolean:lu},parentCentralization:{boolean:lu},direction:{string:["UD","DU","LR","RL"]},sortMethod:{string:["hubsize","directed"]},__type__:{object:du,boolean:lu}},__type__:{object:du}},manipulation:{enabled:{boolean:lu},initiallyActive:{boolean:lu},addNode:{boolean:lu,function:"function"},addEdge:{boolean:lu,function:"function"},editNode:{function:"function"},editEdge:{editWithoutDrag:{function:"function"},__type__:{object:du,boolean:lu,function:"function"}},deleteNode:{boolean:lu,function:"function"},deleteEdge:{boolean:lu,function:"function"},controlNodeStyle:"get from nodes, will be overwritten below",__type__:{object:du,boolean:lu}},nodes:{borderWidth:{number:uu},borderWidthSelected:{number:uu,undefined:"undefined"},brokenImage:{string:au,undefined:"undefined"},chosen:{label:{boolean:lu,function:"function"},node:{boolean:lu,function:"function"},__type__:{object:du,boolean:lu}},color:{border:{string:au},background:{string:au},highlight:{border:{string:au},background:{string:au},__type__:{object:du,string:au}},hover:{border:{string:au},background:{string:au},__type__:{object:du,string:au}},__type__:{object:du,string:au}},fixed:{x:{boolean:lu},y:{boolean:lu},__type__:{object:du,boolean:lu}},font:{align:{string:au},color:{string:au},size:{number:uu},face:{string:au},background:{string:au},strokeWidth:{number:uu},strokeColor:{string:au},vadjust:{number:uu},multi:{boolean:lu,string:au},bold:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},boldital:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},ital:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},mono:{color:{string:au},size:{number:uu},face:{string:au},mod:{string:au},vadjust:{number:uu},__type__:{object:du,string:au}},__type__:{object:du,string:au}},group:{string:au,number:uu,undefined:"undefined"},heightConstraint:{minimum:{number:uu},valign:{string:au},__type__:{object:du,boolean:lu,number:uu}},hidden:{boolean:lu},icon:{face:{string:au},code:{string:au},size:{number:uu},color:{string:au},__type__:{object:du}},id:{string:au,number:uu},image:{selected:{string:au,undefined:"undefined"},unselected:{string:au,undefined:"undefined"},__type__:{object:du,string:au}},imagePadding:{top:{number:uu},right:{number:uu},bottom:{number:uu},left:{number:uu},__type__:{object:du,number:uu}},label:{string:au,undefined:"undefined"},labelHighlightBold:{boolean:lu},level:{number:uu,undefined:"undefined"},margin:{top:{number:uu},right:{number:uu},bottom:{number:uu},left:{number:uu},__type__:{object:du,number:uu}},mass:{number:uu},physics:{boolean:lu},scaling:{min:{number:uu},max:{number:uu},label:{enabled:{boolean:lu},min:{number:uu},max:{number:uu},maxVisible:{number:uu},drawThreshold:{number:uu},__type__:{object:du,boolean:lu}},customScalingFunction:{function:"function"},__type__:{object:du}},shadow:{enabled:{boolean:lu},color:{string:au},size:{number:uu},x:{number:uu},y:{number:uu},__type__:{object:du,boolean:lu}},shape:{string:["ellipse","circle","database","box","text","image","circularImage","diamond","dot","star","triangle","triangleDown","square","icon","hexagon"]},shapeProperties:{borderDashes:{boolean:lu,array:"array"},borderRadius:{number:uu},interpolation:{boolean:lu},useImageSize:{boolean:lu},useBorderWithImage:{boolean:lu},__type__:{object:du}},size:{number:uu},title:{string:au,dom:"dom",undefined:"undefined"},value:{number:uu,undefined:"undefined"},widthConstraint:{minimum:{number:uu},maximum:{number:uu},__type__:{object:du,boolean:lu,number:uu}},x:{number:uu},y:{number:uu},__type__:{object:du}},physics:{enabled:{boolean:lu},barnesHut:{gravitationalConstant:{number:uu},centralGravity:{number:uu},springLength:{number:uu},springConstant:{number:uu},damping:{number:uu},avoidOverlap:{number:uu},__type__:{object:du}},forceAtlas2Based:{gravitationalConstant:{number:uu},centralGravity:{number:uu},springLength:{number:uu},springConstant:{number:uu},damping:{number:uu},avoidOverlap:{number:uu},__type__:{object:du}},repulsion:{centralGravity:{number:uu},springLength:{number:uu},springConstant:{number:uu},nodeDistance:{number:uu},damping:{number:uu},__type__:{object:du}},hierarchicalRepulsion:{centralGravity:{number:uu},springLength:{number:uu},springConstant:{number:uu},nodeDistance:{number:uu},damping:{number:uu},__type__:{object:du}},maxVelocity:{number:uu},minVelocity:{number:uu},solver:{string:["barnesHut","repulsion","hierarchicalRepulsion","forceAtlas2Based"]},stabilization:{enabled:{boolean:lu},iterations:{number:uu},updateInterval:{number:uu},onlyDynamicEdges:{boolean:lu},fit:{boolean:lu},__type__:{object:du,boolean:lu}},timestep:{number:uu},adaptiveTimestep:{boolean:lu},__type__:{object:du,boolean:lu}},autoResize:{boolean:lu},clickToUse:{boolean:lu},locale:{string:au},locales:{__any__:{any:"any"},__type__:{object:du}},height:{string:au},width:{string:au},__type__:{object:du}};hu.groups.__any__=hu.nodes,hu.manipulation.controlNodeStyle=hu.nodes;var fu={nodes:{borderWidth:[1,0,10,1],borderWidthSelected:[2,0,10,1],color:{border:["color","#2B7CE9"],background:["color","#97C2FC"],highlight:{border:["color","#2B7CE9"],background:["color","#D2E5FF"]},hover:{border:["color","#2B7CE9"],background:["color","#D2E5FF"]}},fixed:{x:!1,y:!1},font:{color:["color","#343434"],size:[14,0,100,1],face:["arial","verdana","tahoma"],background:["color","none"],strokeWidth:[0,0,50,1],strokeColor:["color","#ffffff"]},hidden:!1,labelHighlightBold:!0,physics:!0,scaling:{min:[10,0,200,1],max:[30,0,200,1],label:{enabled:!1,min:[14,0,200,1],max:[30,0,200,1],maxVisible:[30,0,200,1],drawThreshold:[5,0,20,1]}},shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:[10,0,20,1],x:[5,-30,30,1],y:[5,-30,30,1]},shape:["ellipse","box","circle","database","diamond","dot","square","star","text","triangle","triangleDown","hexagon"],shapeProperties:{borderDashes:!1,borderRadius:[6,0,20,1],interpolation:!0,useImageSize:!1},size:[25,0,200,1]},edges:{arrows:{to:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"},middle:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"},from:{enabled:!1,scaleFactor:[1,0,3,.05],type:"arrow"}},arrowStrikethrough:!0,color:{color:["color","#848484"],highlight:["color","#848484"],hover:["color","#848484"],inherit:["from","to","both",!0,!1],opacity:[1,0,1,.05]},dashes:!1,font:{color:["color","#343434"],size:[14,0,100,1],face:["arial","verdana","tahoma"],background:["color","none"],strokeWidth:[2,0,50,1],strokeColor:["color","#ffffff"],align:["horizontal","top","middle","bottom"]},hidden:!1,hoverWidth:[1.5,0,5,.1],labelHighlightBold:!0,physics:!0,scaling:{min:[1,0,100,1],max:[15,0,100,1],label:{enabled:!0,min:[14,0,200,1],max:[30,0,200,1],maxVisible:[30,0,200,1],drawThreshold:[5,0,20,1]}},selectionWidth:[1.5,0,5,.1],selfReferenceSize:[20,0,200,1],shadow:{enabled:!1,color:"rgba(0,0,0,0.5)",size:[10,0,20,1],x:[5,-30,30,1],y:[5,-30,30,1]},smooth:{enabled:!0,type:["dynamic","continuous","discrete","diagonalCross","straightCross","horizontal","vertical","curvedCW","curvedCCW","cubicBezier"],forceDirection:["horizontal","vertical","none"],roundness:[.5,0,1,.05]},width:[1,0,30,1]},layout:{hierarchical:{enabled:!1,levelSeparation:[150,20,500,5],nodeSpacing:[100,20,500,5],treeSpacing:[200,20,500,5],blockShifting:!0,edgeMinimization:!0,parentCentralization:!0,direction:["UD","DU","LR","RL"],sortMethod:["hubsize","directed"]}},interaction:{dragNodes:!0,dragView:!0,hideEdgesOnDrag:!1,hideEdgesOnZoom:!1,hideNodesOnDrag:!1,hover:!1,keyboard:{enabled:!1,speed:{x:[10,0,40,1],y:[10,0,40,1],zoom:[.02,0,.1,.005]},bindToWindow:!0},multiselect:!1,navigationButtons:!1,selectable:!0,selectConnectedEdges:!0,hoverConnectedEdges:!0,tooltipDelay:[300,0,1e3,25],zoomView:!0,zoomSpeed:[1,1,1,1]},manipulation:{enabled:!1,initiallyActive:!1},physics:{enabled:!0,barnesHut:{gravitationalConstant:[-2e3,-3e4,0,50],centralGravity:[.3,0,10,.05],springLength:[95,0,500,5],springConstant:[.04,0,1.2,.005],damping:[.09,0,1,.01],avoidOverlap:[0,0,1,.01]},forceAtlas2Based:{gravitationalConstant:[-50,-500,0,1],centralGravity:[.01,0,1,.005],springLength:[95,0,500,5],springConstant:[.08,0,1.2,.005],damping:[.4,0,1,.01],avoidOverlap:[0,0,1,.01]},repulsion:{centralGravity:[.2,0,10,.05],springLength:[200,0,500,5],springConstant:[.05,0,1.2,.005],nodeDistance:[100,0,500,5],damping:[.09,0,1,.01]},hierarchicalRepulsion:{centralGravity:[.2,0,10,.05],springLength:[100,0,500,5],springConstant:[.01,0,1.2,.005],nodeDistance:[120,0,500,5],damping:[.09,0,1,.01]},maxVelocity:[50,0,150,1],minVelocity:[.1,.01,.5,.01],solver:["barnesHut","forceAtlas2Based","repulsion","hierarchicalRepulsion"],timestep:[.5,.01,1,.01]}},pu=Object.freeze({allOptions:hu,configureOptions:fu}),vu=function(){var e=Math.min;function t(){ua(this,t)}return ca(t,[{key:"getDistances",value:function(t,n,i){for(var r={},o=t.edges,s=0;s<n.length;s++){var a={};r[n[s]]=a;for(var l=0;l<n.length;l++)a[n[l]]=s==l?0:1e9}for(var u,d=0;d<i.length;d++)!0===(u=o[i[d]]).connected&&void 0!==r[u.fromId]&&void 0!==r[u.toId]&&(r[u.fromId][u.toId]=1,r[u.toId][u.fromId]=1);for(var c=n.length,h=0;h<c;h++)for(var f=n[h],p=r[f],v=0;v<c-1;v++)for(var m=n[v],y=r[m],g=v+1;g<c;g++){var b=n[g],_=r[b],w=e(y[b],y[f]+p[b]);y[b]=w,_[m]=w}return r}}]),t}(),mu=function(){var e=Math.sqrt,t=Math.pow,n=Math.max,i=Math.min;function r(e,t,n){ua(this,r),this.body=e,this.springLength=t,this.springConstant=n,this.distanceSolver=new vu}return ca(r,[{key:"setOptions",value:function(e){e&&(e.springLength&&(this.springLength=e.springLength),e.springConstant&&(this.springConstant=e.springConstant))}},{key:"solve",value:function(e,t){var r=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2],o=this.distanceSolver.getDistances(this.body,e,t);this._createL_matrix(o),this._createK_matrix(o),this._createE_matrix();for(var s=0,a=n(1e3,i(10*this.body.nodeIndices.length,6e3)),l=1e9,u=0,d=0,c=0,h=0,f=0;l>.01&&s<a;){s+=1;var p=this._getHighestEnergyNode(r),v=ba(p,4);for(u=v[0],l=v[1],d=v[2],c=v[3],h=l,f=0;h>1&&f<5;){f+=1,this._moveNode(u,d,c);var m=this._getEnergy(u),y=ba(m,3);h=y[0],d=y[1],c=y[2]}}}},{key:"_getHighestEnergyNode",value:function(e){for(var t,n=this.body.nodeIndices,i=this.body.nodes,r=0,o=n[0],s=0,a=0,l=0;l<n.length;l++)if(!1===i[t=n[l]].predefinedPosition||!0===i[t].isCluster&&!0===e||!0===i[t].options.fixed.x||!0===i[t].options.fixed.y){var u=this._getEnergy(t),d=ba(u,3),c=d[0],h=d[1],f=d[2];r<c&&(r=c,o=t,s=h,a=f)}return[o,r,s,a]}},{key:"_getEnergy",value:function(n){var i=ba(this.E_sums[n],2),r=i[0],o=i[1];return[e(t(r,2)+t(o,2)),r,o]}},{key:"_moveNode",value:function(e,n,i){for(var r,o=this.body.nodeIndices,s=this.body.nodes,a=0,l=0,u=0,d=s[e].x,c=s[e].y,h=this.K_matrix[e],f=this.L_matrix[e],p=0;p<o.length;p++)if((r=o[p])!==e){var v=s[r].x,m=s[r].y,y=h[r],g=f[r],b=1/t(t(d-v,2)+t(c-m,2),1.5);a+=y*(1-g*t(c-m,2)*b),l+=y*(g*(d-v)*(c-m)*b),u+=y*(1-g*t(d-v,2)*b)}var _=a,w=l,k=n,x=(k/_+i/w)/(w/_-u/w);s[e].x+=-(w*x+k)/_,s[e].y+=x,this._updateE_matrix(e)}},{key:"_createL_matrix",value:function(e){var t=this.body.nodeIndices,n=this.springLength;this.L_matrix=[];for(var i=0;i<t.length;i++){this.L_matrix[t[i]]={};for(var r=0;r<t.length;r++)this.L_matrix[t[i]][t[r]]=n*e[t[i]][t[r]]}}},{key:"_createK_matrix",value:function(e){var n=this.body.nodeIndices,i=this.springConstant;this.K_matrix=[];for(var r=0;r<n.length;r++){this.K_matrix[n[r]]={};for(var o=0;o<n.length;o++)this.K_matrix[n[r]][n[o]]=i*t(e[n[r]][n[o]],-2)}}},{key:"_createE_matrix",value:function(){var n=this.body.nodeIndices,i=this.body.nodes;this.E_matrix={},this.E_sums={};for(var r=0;r<n.length;r++)this.E_matrix[n[r]]=[];for(var o=0;o<n.length;o++){for(var s,a=n[o],l=i[a].x,u=i[a].y,d=0,c=0,h=o;h<n.length;h++)if((s=n[h])!==a){var f=i[s].x,p=i[s].y,v=1/e(t(l-f,2)+t(u-p,2));this.E_matrix[a][h]=[this.K_matrix[a][s]*(l-f-this.L_matrix[a][s]*(l-f)*v),this.K_matrix[a][s]*(u-p-this.L_matrix[a][s]*(u-p)*v)],this.E_matrix[s][o]=this.E_matrix[a][h],d+=this.E_matrix[a][h][0],c+=this.E_matrix[a][h][1]}this.E_sums[a]=[d,c]}}},{key:"_updateE_matrix",value:function(n){for(var i,r=this.body.nodeIndices,o=this.body.nodes,s=this.E_matrix[n],a=this.K_matrix[n],l=this.L_matrix[n],u=o[n].x,d=o[n].y,c=0,h=0,f=0;f<r.length;f++)if((i=r[f])!==n){var p=s[f],v=p[0],m=p[1],y=o[i].x,g=o[i].y,b=1/e(t(u-y,2)+t(d-g,2)),_=a[i]*(u-y-l[i]*(u-y)*b),w=a[i]*(d-g-l[i]*(d-g)*b);s[f]=[_,w],c+=_,h+=w;var k=this.E_sums[i];k[0]+=_-v,k[1]+=w-m}this.E_sums[n]=[c,h]}}]),r}();function yu(e,t,n){var i=this;if(!(this instanceof yu))throw new SyntaxError("Constructor must be called with the new operator");this.options={},this.defaultOptions={locale:"en",locales:la,clickToUse:!1},Xi.extend(this.options,this.defaultOptions),this.body={container:e,nodes:{},nodeIndices:[],edges:{},edgeIndices:[],emitter:{on:this.on.bind(this),off:this.off.bind(this),emit:this.emit.bind(this),once:this.once.bind(this)},eventListeners:{onTap:function(){},onTouch:function(){},onDoubleTap:function(){},onHold:function(){},onDragStart:function(){},onDrag:function(){},onDragEnd:function(){},onMouseWheel:function(){},onPinch:function(){},onMouseMove:function(){},onRelease:function(){},onContext:function(){}},data:{nodes:null,edges:null},functions:{createNode:function(){},createEdge:function(){},getPointer:function(){}},modules:{},view:{scale:1,translation:{x:0,y:0}}},this.bindEventListeners(),this.images=new fa((function(){return i.body.emitter.emit("_requestRedraw")})),this.groups=new pa,this.canvas=new Vl(this.body),this.selectionHandler=new Zl(this.body,this.canvas),this.interactionHandler=new $l(this.body,this.canvas,this.selectionHandler),this.view=new Ul(this.body,this.canvas),this.renderer=new Wl(this.body,this.canvas),this.physics=new zl(this.body),this.layoutEngine=new nu(this.body),this.clustering=new Bl(this.body),this.manipulation=new iu(this.body,this.canvas,this.selectionHandler),this.nodesHandler=new il(this.body,this.images,this.groups,this.layoutEngine),this.edgesHandler=new Cl(this.body,this.images,this.groups),this.body.modules.kamadaKawai=new mu(this.body,150,.05),this.body.modules.clustering=this.clustering,this.canvas._create(),this.setOptions(n),this.setData(t)}Vr(yu.prototype),yu.prototype.setOptions=function(e){var t=this;if(null===e&&(e=void 0),void 0!==e){if(!0===el.validate(e,hu)&&console.log("%cErrors have been found in the supplied options object.",Ja),Xi.selectiveDeepExtend(["locale","locales","clickToUse"],this.options,e),e=this.layoutEngine.setOptions(e.layout,e),this.canvas.setOptions(e),this.groups.setOptions(e.groups),this.nodesHandler.setOptions(e.nodes),this.edgesHandler.setOptions(e.edges),this.physics.setOptions(e.physics),this.manipulation.setOptions(e.manipulation,e,this.options),this.interactionHandler.setOptions(e.interaction),this.renderer.setOptions(e.interaction),this.selectionHandler.setOptions(e.interaction),void 0!==e.groups&&this.body.emitter.emit("refreshNodes"),"configure"in e&&(!this.configurator&&(this.configurator=new su(this,this.body.container,fu,this.canvas.pixelRatio)),this.configurator.setOptions(e.configure)),this.configurator&&!0===this.configurator.options.enabled){var n={nodes:{},edges:{},layout:{},interaction:{},manipulation:{},physics:{},global:{}};Xi.deepExtend(n.nodes,this.nodesHandler.options),Xi.deepExtend(n.edges,this.edgesHandler.options),Xi.deepExtend(n.layout,this.layoutEngine.options),Xi.deepExtend(n.interaction,this.selectionHandler.options),Xi.deepExtend(n.interaction,this.renderer.options),Xi.deepExtend(n.interaction,this.interactionHandler.options),Xi.deepExtend(n.manipulation,this.manipulation.options),Xi.deepExtend(n.physics,this.physics.options),Xi.deepExtend(n.global,this.canvas.options),Xi.deepExtend(n.global,this.options),this.configurator.setModuleOptions(n)}void 0===e.clickToUse?this.body.emitter.emit("activate"):!0===e.clickToUse?void 0===this.activator&&(this.activator=new aa(this.canvas.frame),this.activator.on("change",(function(){t.body.emitter.emit("activate")}))):(void 0!==this.activator&&(this.activator.destroy(),delete this.activator),this.body.emitter.emit("activate")),this.canvas.setSize(),this.body.emitter.emit("startSimulation")}},yu.prototype._updateVisibleIndices=function(){var e=this.body.nodes,t=this.body.edges;for(var n in this.body.nodeIndices=[],this.body.edgeIndices=[],e)e.hasOwnProperty(n)&&(this.clustering._isClusteredNode(n)||!1!==e[n].options.hidden||this.body.nodeIndices.push(e[n].id));for(var i in t)if(t.hasOwnProperty(i)){var r=t[i],o=e[r.fromId],s=e[r.toId];!this.clustering._isClusteredEdge(i)&&!1===r.options.hidden&&void 0!==o&&void 0!==s&&!1===o.options.hidden&&!1===s.options.hidden&&this.body.edgeIndices.push(r.id)}},yu.prototype.bindEventListeners=function(){var e=this;this.body.emitter.on("_dataChanged",(function(){e.edgesHandler._updateState(),e.body.emitter.emit("_dataUpdated")})),this.body.emitter.on("_dataUpdated",(function(){e.clustering._updateState(),e._updateVisibleIndices(),e._updateValueRange(e.body.nodes),e._updateValueRange(e.body.edges),e.body.emitter.emit("startSimulation"),e.body.emitter.emit("_requestRedraw")}))},yu.prototype.setData=function(e){if(this.body.emitter.emit("resetPhysics"),this.body.emitter.emit("_resetData"),this.selectionHandler.unselectAll(),e&&e.dot&&(e.nodes||e.edges))throw new SyntaxError('Data must contain either parameter "dot" or  parameter pair "nodes" and "edges", but not both.');if(this.setOptions(e&&e.options),e&&e.dot){console.log("The dot property has been deprecated. Please use the static convertDot method to convert DOT into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertDot(dotString);");var t=Eo.DOTToGraph(e.dot);this.setData(t)}else if(e&&e.gephi){console.log("The gephi property has been deprecated. Please use the static convertGephi method to convert gephi into vis.network format and use the normal data format with nodes and edges. This converter is used like this: var data = vis.network.convertGephi(gephiJson);");var n=Do(e.gephi);this.setData(n)}else this.nodesHandler.setData(e&&e.nodes,!0),this.edgesHandler.setData(e&&e.edges,!0),this.body.emitter.emit("_dataChanged"),this.body.emitter.emit("_dataLoaded"),this.body.emitter.emit("initPhysics")},yu.prototype.destroy=function(){for(var e in this.body.emitter.emit("destroy"),this.body.emitter.off(),this.off(),delete this.groups,delete this.canvas,delete this.selectionHandler,delete this.interactionHandler,delete this.view,delete this.renderer,delete this.physics,delete this.layoutEngine,delete this.clustering,delete this.manipulation,delete this.nodesHandler,delete this.edgesHandler,delete this.configurator,delete this.images,this.body.nodes)this.body.nodes.hasOwnProperty(e)&&delete this.body.nodes[e];for(var t in this.body.edges)this.body.edges.hasOwnProperty(t)&&delete this.body.edges[t];Xi.recursiveDOMDelete(this.body.container)},yu.prototype._updateValueRange=function(e){var t,n=void 0,i=void 0,r=0;for(t in e)if(e.hasOwnProperty(t)){var o=e[t].getValue();void 0!==o&&(n=void 0===n?o:Math.min(o,n),i=void 0===i?o:Math.max(o,i),r+=o)}if(void 0!==n&&void 0!==i)for(t in e)e.hasOwnProperty(t)&&e[t].setValueRange(n,i,r)},yu.prototype.isActive=function(){return!this.activator||this.activator.active},yu.prototype.setSize=function(){return this.canvas.setSize.apply(this.canvas,arguments)},yu.prototype.canvasToDOM=function(){return this.canvas.canvasToDOM.apply(this.canvas,arguments)},yu.prototype.DOMtoCanvas=function(){return this.canvas.DOMtoCanvas.apply(this.canvas,arguments)},yu.prototype.findNode=function(){return this.clustering.findNode.apply(this.clustering,arguments)},yu.prototype.isCluster=function(){return this.clustering.isCluster.apply(this.clustering,arguments)},yu.prototype.openCluster=function(){return this.clustering.openCluster.apply(this.clustering,arguments)},yu.prototype.cluster=function(){return this.clustering.cluster.apply(this.clustering,arguments)},yu.prototype.getNodesInCluster=function(){return this.clustering.getNodesInCluster.apply(this.clustering,arguments)},yu.prototype.clusterByConnection=function(){return this.clustering.clusterByConnection.apply(this.clustering,arguments)},yu.prototype.clusterByHubsize=function(){return this.clustering.clusterByHubsize.apply(this.clustering,arguments)},yu.prototype.clusterOutliers=function(){return this.clustering.clusterOutliers.apply(this.clustering,arguments)},yu.prototype.getSeed=function(){return this.layoutEngine.getSeed.apply(this.layoutEngine,arguments)},yu.prototype.enableEditMode=function(){return this.manipulation.enableEditMode.apply(this.manipulation,arguments)},yu.prototype.disableEditMode=function(){return this.manipulation.disableEditMode.apply(this.manipulation,arguments)},yu.prototype.addNodeMode=function(){return this.manipulation.addNodeMode.apply(this.manipulation,arguments)},yu.prototype.editNode=function(){return this.manipulation.editNode.apply(this.manipulation,arguments)},yu.prototype.editNodeMode=function(){return console.log("Deprecated: Please use editNode instead of editNodeMode."),this.manipulation.editNode.apply(this.manipulation,arguments)},yu.prototype.addEdgeMode=function(){return this.manipulation.addEdgeMode.apply(this.manipulation,arguments)},yu.prototype.editEdgeMode=function(){return this.manipulation.editEdgeMode.apply(this.manipulation,arguments)},yu.prototype.deleteSelected=function(){return this.manipulation.deleteSelected.apply(this.manipulation,arguments)},yu.prototype.getPositions=function(){return this.nodesHandler.getPositions.apply(this.nodesHandler,arguments)},yu.prototype.storePositions=function(){return this.nodesHandler.storePositions.apply(this.nodesHandler,arguments)},yu.prototype.moveNode=function(){return this.nodesHandler.moveNode.apply(this.nodesHandler,arguments)},yu.prototype.getBoundingBox=function(){return this.nodesHandler.getBoundingBox.apply(this.nodesHandler,arguments)},yu.prototype.getConnectedNodes=function(e){return void 0===this.body.nodes[e]?this.edgesHandler.getConnectedNodes.apply(this.edgesHandler,arguments):this.nodesHandler.getConnectedNodes.apply(this.nodesHandler,arguments)},yu.prototype.getConnectedEdges=function(){return this.nodesHandler.getConnectedEdges.apply(this.nodesHandler,arguments)},yu.prototype.startSimulation=function(){return this.physics.startSimulation.apply(this.physics,arguments)},yu.prototype.stopSimulation=function(){return this.physics.stopSimulation.apply(this.physics,arguments)},yu.prototype.stabilize=function(){return this.physics.stabilize.apply(this.physics,arguments)},yu.prototype.getSelection=function(){return this.selectionHandler.getSelection.apply(this.selectionHandler,arguments)},yu.prototype.setSelection=function(){return this.selectionHandler.setSelection.apply(this.selectionHandler,arguments)},yu.prototype.getSelectedNodes=function(){return this.selectionHandler.getSelectedNodes.apply(this.selectionHandler,arguments)},yu.prototype.getSelectedEdges=function(){return this.selectionHandler.getSelectedEdges.apply(this.selectionHandler,arguments)},yu.prototype.getNodeAt=function(){var e=this.selectionHandler.getNodeAt.apply(this.selectionHandler,arguments);return void 0!==e&&void 0!==e.id?e.id:e},yu.prototype.getEdgeAt=function(){var e=this.selectionHandler.getEdgeAt.apply(this.selectionHandler,arguments);return void 0!==e&&void 0!==e.id?e.id:e},yu.prototype.selectNodes=function(){return this.selectionHandler.selectNodes.apply(this.selectionHandler,arguments)},yu.prototype.selectEdges=function(){return this.selectionHandler.selectEdges.apply(this.selectionHandler,arguments)},yu.prototype.unselectAll=function(){this.selectionHandler.unselectAll.apply(this.selectionHandler,arguments),this.redraw()},yu.prototype.redraw=function(){return this.renderer.redraw.apply(this.renderer,arguments)},yu.prototype.getScale=function(){return this.view.getScale.apply(this.view,arguments)},yu.prototype.getViewPosition=function(){return this.view.getViewPosition.apply(this.view,arguments)},yu.prototype.fit=function(){return this.view.fit.apply(this.view,arguments)},yu.prototype.moveTo=function(){return this.view.moveTo.apply(this.view,arguments)},yu.prototype.focus=function(){return this.view.focus.apply(this.view,arguments)},yu.prototype.releaseNode=function(){return this.view.releaseNode.apply(this.view,arguments)},yu.prototype.getOptionsFromConfigurator=function(){var e={};return this.configurator&&(e=this.configurator.getOptions.apply(this.configurator)),e};var gu=Hr((function(e,t){t.prepareElements=function(e){for(var t in e)e.hasOwnProperty(t)&&(e[t].redundant=e[t].used,e[t].used=[])},t.cleanupElements=function(e){for(var t in e)if(e.hasOwnProperty(t)&&e[t].redundant){for(var n=0;n<e[t].redundant.length;n++)e[t].redundant[n].parentNode.removeChild(e[t].redundant[n]);e[t].redundant=[]}},t.resetElements=function(e){t.prepareElements(e),t.cleanupElements(e),t.prepareElements(e)},t.getSVGElement=function(e,t,n){var i;return t.hasOwnProperty(e)?0<t[e].redundant.length?(i=t[e].redundant[0],t[e].redundant.shift()):(i=document.createElementNS("http://www.w3.org/2000/svg",e),n.appendChild(i)):(i=document.createElementNS("http://www.w3.org/2000/svg",e),t[e]={used:[],redundant:[]},n.appendChild(i)),t[e].used.push(i),i},t.getDOMElement=function(e,t,n,i){var r;return t.hasOwnProperty(e)?0<t[e].redundant.length?(r=t[e].redundant[0],t[e].redundant.shift()):(r=document.createElement(e),void 0===i?n.appendChild(r):n.insertBefore(r,i)):(r=document.createElement(e),t[e]={used:[],redundant:[]},void 0===i?n.appendChild(r):n.insertBefore(r,i)),t[e].used.push(r),r},t.drawPoint=function(e,n,i,r,o,s){var a;if("circle"==i.style?((a=t.getSVGElement("circle",r,o)).setAttributeNS(null,"cx",e),a.setAttributeNS(null,"cy",n),a.setAttributeNS(null,"r",.5*i.size)):((a=t.getSVGElement("rect",r,o)).setAttributeNS(null,"x",e-.5*i.size),a.setAttributeNS(null,"y",n-.5*i.size),a.setAttributeNS(null,"width",i.size),a.setAttributeNS(null,"height",i.size)),void 0!==i.styles&&a.setAttributeNS(null,"style",i.styles),a.setAttributeNS(null,"class",i.className+" vis-point"),s){var l=t.getSVGElement("text",r,o);s.xOffset&&(e+=s.xOffset),s.yOffset&&(n+=s.yOffset),s.content&&(l.textContent=s.content),s.className&&l.setAttributeNS(null,"class",s.className+" vis-label"),l.setAttributeNS(null,"x",e),l.setAttributeNS(null,"y",n)}return a},t.drawBar=function(e,n,i,r,o,s,a,l){if(0!=r){0>r&&(n-=r*=-1);var u=t.getSVGElement("rect",s,a);u.setAttributeNS(null,"x",e-.5*i),u.setAttributeNS(null,"y",n),u.setAttributeNS(null,"width",i),u.setAttributeNS(null,"height",r),u.setAttributeNS(null,"class",o),l&&u.setAttributeNS(null,"style",l)}}})),bu=gu.prepareElements,_u=gu.cleanupElements,wu=gu.resetElements,ku=gu.getSVGElement,xu=gu.getDOMElement,Su=gu.drawPoint,Ou=gu.drawBar,Eu=Object.freeze({default:gu,__moduleExports:gu,prepareElements:bu,cleanupElements:_u,resetElements:wu,getSVGElement:ku,getDOMElement:xu,drawPoint:Su,drawBar:Ou}),Tu=Hr((function(e){var t=Math.round,n=Math.pow,i=Math.max,r=Math.abs,o=Math.min,s=Math.floor,a=Math.ceil;!function(t,n){e.exports=n()}(0,(function(){function l(){return pt.apply(null,arguments)}function u(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function d(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function c(e){return void 0===e}function h(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function f(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function p(e,t){var n,i=[];for(n=0;n<e.length;++n)i.push(t(e[n],n));return i}function v(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function m(e,t){for(var n in t)v(t,n)&&(e[n]=t[n]);return v(t,"toString")&&(e.toString=t.toString),v(t,"valueOf")&&(e.valueOf=t.valueOf),e}function y(e,t,n,i){return Ce(e,t,n,i,!0).utc()}function g(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function b(e){if(null==e._isValid){var t=g(e),n=vt.call(t.parsedDateParts,(function(e){return null!=e})),i=!isNaN(e._d.getTime())&&0>t.overflow&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&n);if(e._strict&&(i=i&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return i;e._isValid=i}return e._isValid}function _(e){var t=y(NaN);return null==e?g(t).userInvalidated=!0:m(g(t),e),t}function w(e,t){var n,i,r;if(c(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),c(t._i)||(e._i=t._i),c(t._f)||(e._f=t._f),c(t._l)||(e._l=t._l),c(t._strict)||(e._strict=t._strict),c(t._tzm)||(e._tzm=t._tzm),c(t._isUTC)||(e._isUTC=t._isUTC),c(t._offset)||(e._offset=t._offset),c(t._pf)||(e._pf=g(t)),c(t._locale)||(e._locale=t._locale),0<mt.length)for(n=0;n<mt.length;n++)c(r=t[i=mt[n]])||(e[i]=r);return e}function k(e){w(this,e),this._d=new Date(null==e._d?NaN:e._d.getTime()),this.isValid()||(this._d=new Date(NaN)),!1===yt&&(yt=!0,l.updateOffset(this),yt=!1)}function x(e){return e instanceof k||null!=e&&null!=e._isAMomentObject}function S(e){return 0>e?a(e)||0:s(e)}function O(e){var t=+e,n=0;return 0!=t&&isFinite(t)&&(n=S(t)),n}function E(e,t,n){var i,s=o(e.length,t.length),a=r(e.length-t.length),l=0;for(i=0;i<s;i++)(n&&e[i]!==t[i]||!n&&O(e[i])!==O(t[i]))&&l++;return l+a}function T(e){!1===l.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function D(e,t){var n=!0;return m((function(){if(null!=l.deprecationHandler&&l.deprecationHandler(null,e),n){for(var i,r=[],o=0;o<arguments.length;o++){if(i="","object"==typeof arguments[o]){for(var s in i+="\n["+o+"] ",arguments[0])i+=s+": "+arguments[0][s]+", ";i=i.slice(0,-2)}else i=arguments[o];r.push(i)}T(e+"\nArguments: "+Array.prototype.slice.call(r).join("")+"\n"+(new Error).stack),n=!1}return t.apply(this,arguments)}),t)}function C(e,t){null!=l.deprecationHandler&&l.deprecationHandler(e,t),gt[e]||(T(t),gt[e]=!0)}function M(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function P(e,t){var n,i=m({},e);for(n in t)v(t,n)&&(d(e[n])&&d(t[n])?(i[n]={},m(i[n],e[n]),m(i[n],t[n])):null==t[n]?delete i[n]:i[n]=t[n]);for(n in e)v(e,n)&&!v(t,n)&&d(e[n])&&(i[n]=m({},i[n]));return i}function N(e){null!=e&&this.set(e)}function F(e,t){var n=e.toLowerCase();_t[n]=_t[n+"s"]=_t[t]=e}function I(e){return"string"==typeof e?_t[e]||_t[e.toLowerCase()]:void 0}function j(e){var t,n,i={};for(n in e)v(e,n)&&((t=I(n))&&(i[t]=e[n]));return i}function R(e,t){wt[e]=t}function A(e,t,o){var s=""+r(e);return(0<=e?o?"+":"":"-")+n(10,i(0,t-s.length)).toString().substr(1)+s}function z(e,t,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),e&&(Ot[e]=r),t&&(Ot[t[0]]=function(){return A(r.apply(this,arguments),t[1],t[2])}),n&&(Ot[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),e)})}function L(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function Y(e,t){return e.isValid()?(t=B(t,e.localeData()),St[t]=St[t]||function(e){var t,n,i=e.match(kt);for(t=0,n=i.length;t<n;t++)i[t]=Ot[i[t]]?Ot[i[t]]:L(i[t]);return function(t){var r,o="";for(r=0;r<n;r++)o+=M(i[r])?i[r].call(t,e):i[r];return o}}(t),St[t](e)):e.localeData().invalidDate()}function B(e,t){function n(e){return t.longDateFormat(e)||e}var i=5;for(xt.lastIndex=0;0<=i&&xt.test(e);)e=e.replace(xt,n),xt.lastIndex=0,i-=1;return e}function W(e,t,n){Wt[e]=M(t)?t:function(e){return e&&n?n:t}}function H(e,t){return v(Wt,e)?Wt[e](t._strict,t._locale):new RegExp(function(e){return V(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,n,i,r){return t||n||i||r})))}(e))}function V(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function U(e,t){var n,i=t;for("string"==typeof e&&(e=[e]),h(t)&&(i=function(e,n){n[t]=O(e)}),n=0;n<e.length;n++)Ht[e[n]]=i}function G(e,t){U(e,(function(e,n,i,r){i._w=i._w||{},t(e,i._w,i,r)}))}function q(e,t,n){null!=t&&v(Ht,e)&&Ht[e](t,n._a,n,e)}function $(e){return Z(e)?366:365}function Z(e){return 0==e%4&&0!=e%100||0==e%400}function Q(e,t){return function(n){return null==n?X(this,e):(K(this,e,n),l.updateOffset(this,t),this)}}function X(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function K(e,t,n){e.isValid()&&!isNaN(n)&&("FullYear"===t&&Z(e.year())&&1===e.month()&&29===e.date()?e._d["set"+(e._isUTC?"UTC":"")+t](n,e.month(),J(n,e.month())):e._d["set"+(e._isUTC?"UTC":"")+t](n))}function J(e,t){if(isNaN(e)||isNaN(t))return NaN;var n=function(e,t){return(e%t+t)%t}(t,12);return e+=(t-n)/12,1===n?Z(e)?29:28:31-n%7%2}function ee(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;12>i;++i)o=y([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===t?-1===(r=Vt.call(this._shortMonthsParse,s))?null:r:-1===(r=Vt.call(this._longMonthsParse,s))?null:r:"MMM"===t?-1!==(r=Vt.call(this._shortMonthsParse,s))?r:-1===(r=Vt.call(this._longMonthsParse,s))?null:r:-1!==(r=Vt.call(this._longMonthsParse,s))?r:-1===(r=Vt.call(this._shortMonthsParse,s))?null:r}function te(e,t){var n;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=O(t);else if(!h(t=e.localeData().monthsParse(t)))return e;return n=o(e.date(),J(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,n),e}function ne(e){return null==e?X(this,"Month"):(te(this,e),l.updateOffset(this,!0),this)}function ie(){function e(e,t){return t.length-e.length}var t,n,i=[],r=[],o=[];for(t=0;12>t;t++)n=y([2e3,t]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(e),r.sort(e),o.sort(e),t=0;12>t;t++)i[t]=V(i[t]),r[t]=V(r[t]);for(t=0;24>t;t++)o[t]=V(o[t]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function re(e,t,n,i,r,o,s){var a;return 100>e&&0<=e?(a=new Date(e+400,t,n,i,r,o,s),isFinite(a.getFullYear())&&a.setFullYear(e)):a=new Date(e,t,n,i,r,o,s),a}function oe(e){var t;if(100>e&&0<=e){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function se(e,t,n){var i=7+t-n;return-((7+oe(e,0,i).getUTCDay()-t)%7)+i-1}function ae(e,t,n,i,r){var o,s,a=1+7*(t-1)+(7+n-i)%7+se(e,i,r);return 0>=a?s=$(o=e-1)+a:a>$(e)?(o=e+1,s=a-$(e)):(o=e,s=a),{year:o,dayOfYear:s}}function le(e,t,n){var i,r,o=se(e.year(),t,n),a=s((e.dayOfYear()-o-1)/7)+1;return 1>a?i=a+ue(r=e.year()-1,t,n):a>ue(e.year(),t,n)?(i=a-ue(e.year(),t,n),r=e.year()+1):(r=e.year(),i=a),{week:i,year:r}}function ue(e,t,n){var i=se(e,t,n),r=se(e+1,t,n);return($(e)-i+r)/7}function de(e,t){return e.slice(t,7).concat(e.slice(0,t))}function ce(e,t,n){var i,r,o,s=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;7>i;++i)o=y([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===t?-1===(r=Vt.call(this._weekdaysParse,s))?null:r:"ddd"===t?-1===(r=Vt.call(this._shortWeekdaysParse,s))?null:r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:"dddd"===t?-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1!==(r=Vt.call(this._shortWeekdaysParse,s))?r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:"ddd"===t?-1!==(r=Vt.call(this._shortWeekdaysParse,s))?r:-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1===(r=Vt.call(this._minWeekdaysParse,s))?null:r:-1!==(r=Vt.call(this._minWeekdaysParse,s))?r:-1!==(r=Vt.call(this._weekdaysParse,s))?r:-1===(r=Vt.call(this._shortWeekdaysParse,s))?null:r}function he(){function e(e,t){return t.length-e.length}var t,n,i,r,o,s=[],a=[],l=[],u=[];for(t=0;7>t;t++)n=y([2e3,1]).day(t),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),s.push(i),a.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(s.sort(e),a.sort(e),l.sort(e),u.sort(e),t=0;7>t;t++)a[t]=V(a[t]),l[t]=V(l[t]),u[t]=V(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+s.join("|")+")","i")}function fe(){return this.hours()%12||12}function pe(e,t){z(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function ve(e,t){return t._meridiemParse}function me(e){return e?e.toLowerCase().replace("_","-"):e}function ye(t){var n=null;if(!Kt[t]&&e&&e.exports)try{n=Zt._abbr,function(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}(),ge(n)}catch(t){}return Kt[t]}function ge(e,t){var n;return e&&((n=c(t)?_e(e):be(e,t))?Zt=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Zt._abbr}function be(e,t){if(null!==t){var n,i=Xt;if(t.abbr=e,null!=Kt[e])C("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=Kt[e]._config;else if(null!=t.parentLocale)if(null!=Kt[t.parentLocale])i=Kt[t.parentLocale]._config;else{if(null==(n=ye(t.parentLocale)))return Jt[t.parentLocale]||(Jt[t.parentLocale]=[]),Jt[t.parentLocale].push({name:e,config:t}),null;i=n._config}return Kt[e]=new N(P(i,t)),Jt[e]&&Jt[e].forEach((function(e){be(e.name,e.config)})),ge(e),Kt[e]}return delete Kt[e],null}function _e(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Zt;if(!u(e)){if(t=ye(e))return t;e=[e]}return function(e){for(var t,n,i,r,o=0;o<e.length;){for(t=(r=me(e[o]).split("-")).length,n=(n=me(e[o+1]))?n.split("-"):null;0<t;){if(i=ye(r.slice(0,t).join("-")))return i;if(n&&n.length>=t&&E(r,n,!0)>=t-1)break;t--}o++}return Zt}(e)}function we(e){var t,n=e._a;return n&&-2===g(e).overflow&&(t=0>n[1]||11<n[1]?1:1>n[2]||n[2]>J(n[0],n[1])?2:0>n[3]||24<n[3]||24===n[3]&&(0!==n[4]||0!==n[5]||0!==n[6])?3:0>n[4]||59<n[4]?4:0>n[5]||59<n[5]?5:0>n[6]||999<n[6]?6:-1,g(e)._overflowDayOfYear&&(0>t||2<t)&&(t=2),g(e)._overflowWeeks&&-1===t&&(t=7),g(e)._overflowWeekday&&-1===t&&(t=8),g(e).overflow=t),e}function ke(e,t,n){return null==e?null==t?n:t:e}function xe(e){var t,n,i,r,o,s=[];if(!e._d){for(i=function(e){var t=new Date(l.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[2]&&null==e._a[1]&&function(e){var t,n,i,r,o,s,a,l;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)o=1,s=4,n=ke(t.GG,e._a[0],le(Me(),1,4).year),i=ke(t.W,1),(1>(r=ke(t.E,1))||7<r)&&(l=!0);else{o=e._locale._week.dow,s=e._locale._week.doy;var u=le(Me(),o,s);n=ke(t.gg,e._a[0],u.year),i=ke(t.w,u.week),null==t.d?null==t.e?r=o:(r=t.e+o,(0>t.e||6<t.e)&&(l=!0)):(0>(r=t.d)||6<r)&&(l=!0)}1>i||i>ue(n,o,s)?g(e)._overflowWeeks=!0:null==l?(a=ae(n,i,r,o,s),e._a[0]=a.year,e._dayOfYear=a.dayOfYear):g(e)._overflowWeekday=!0}(e),null!=e._dayOfYear&&(o=ke(e._a[0],i[0]),(e._dayOfYear>$(o)||0===e._dayOfYear)&&(g(e)._overflowDayOfYear=!0),n=oe(o,0,e._dayOfYear),e._a[1]=n.getUTCMonth(),e._a[2]=n.getUTCDate()),t=0;3>t&&null==e._a[t];++t)e._a[t]=s[t]=i[t];for(;7>t;t++)e._a[t]=s[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[3]&&0===e._a[4]&&0===e._a[5]&&0===e._a[6]&&(e._nextDay=!0,e._a[3]=0),e._d=(e._useUTC?oe:re).apply(null,s),r=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[3]=24),e._w&&void 0!==e._w.d&&e._w.d!==r&&(g(e).weekdayMismatch=!0)}}function Se(e){var t,n,i,r,o,s,a=e._i,l=en.exec(a)||tn.exec(a);if(l){for(g(e).iso=!0,t=0,n=rn.length;t<n;t++)if(rn[t][1].exec(l[1])){r=rn[t][0],i=!1!==rn[t][2];break}if(null==r)return void(e._isValid=!1);if(l[3]){for(t=0,n=on.length;t<n;t++)if(on[t][1].exec(l[3])){o=(l[2]||" ")+on[t][0];break}if(null==o)return void(e._isValid=!1)}if(!i&&null!=o)return void(e._isValid=!1);if(l[4]){if(!nn.exec(l[4]))return void(e._isValid=!1);s="Z"}e._f=r+(o||"")+(s||""),Te(e)}else e._isValid=!1}function Oe(e){var t=parseInt(e,10);return 49>=t?2e3+t:999>=t?1900+t:t}function Ee(e){var t=an.exec(function(e){return e.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}(e._i));if(t){var n=function(e,t,n,i,r,o){var s=[Oe(e),qt.indexOf(t),parseInt(n,10),parseInt(i,10),parseInt(r,10)];return o&&s.push(parseInt(o,10)),s}(t[4],t[3],t[2],t[5],t[6],t[7]);if(!function(e,t,n){return!e||$t.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(g(n).weekdayMismatch=!0,n._isValid=!1,!1)}(t[1],n,e))return;e._a=n,e._tzm=function(e,t,n){if(e)return ln[e];if(t)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(t[8],t[9],t[10]),e._d=oe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),g(e).rfc2822=!0}else e._isValid=!1}function Te(e){if(e._f!==l.ISO_8601)if(e._f!==l.RFC_2822){e._a=[],g(e).empty=!0;var t,n,i,r,o,s=""+e._i,a=s.length,u=0;for(i=B(e._f,e._locale).match(kt)||[],t=0;t<i.length;t++)r=i[t],(n=(s.match(H(r,e))||[])[0])&&(0<(o=s.substr(0,s.indexOf(n))).length&&g(e).unusedInput.push(o),s=s.slice(s.indexOf(n)+n.length),u+=n.length),Ot[r]?(n?g(e).empty=!1:g(e).unusedTokens.push(r),q(r,n,e)):e._strict&&!n&&g(e).unusedTokens.push(r);g(e).charsLeftOver=a-u,0<s.length&&g(e).unusedInput.push(s),12>=e._a[3]&&!0===g(e).bigHour&&0<e._a[3]&&(g(e).bigHour=void 0),g(e).parsedDateParts=e._a.slice(0),g(e).meridiem=e._meridiem,e._a[3]=function(e,t,n){var i;return null==n?t:null==e.meridiemHour?null==e.isPM?t:((i=e.isPM(n))&&12>t&&(t+=12),i||12!==t||(t=0),t):e.meridiemHour(t,n)}(e._locale,e._a[3],e._meridiem),xe(e),we(e)}else Ee(e);else Se(e)}function De(e){var t=e._i,n=e._f;return e._locale=e._locale||_e(e._l),null===t||void 0===n&&""===t?_({nullInput:!0}):("string"==typeof t&&(e._i=t=e._locale.preparse(t)),x(t)?new k(we(t)):(f(t)?e._d=t:u(n)?function(e){var t,n,i,r,o;if(0===e._f.length)return g(e).invalidFormat=!0,void(e._d=new Date(NaN));for(r=0;r<e._f.length;r++)o=0,t=w({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[r],Te(t),b(t)&&(o+=g(t).charsLeftOver,o+=10*g(t).unusedTokens.length,g(t).score=o,(null==i||o<i)&&(i=o,n=t));m(e,n||t)}(e):n?Te(e):function(e){var t=e._i;c(t)?e._d=new Date(l.now()):f(t)?e._d=new Date(t.valueOf()):"string"==typeof t?function(e){var t=sn.exec(e._i);null===t?(Se(e),!1===e._isValid&&(delete e._isValid,Ee(e),!1===e._isValid&&(delete e._isValid,l.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):u(t)?(e._a=p(t.slice(0),(function(e){return parseInt(e,10)})),xe(e)):d(t)?function(e){if(!e._d){var t=j(e._i);e._a=p([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),xe(e)}}(e):h(t)?e._d=new Date(t):l.createFromInputFallback(e)}(e),b(e)||(e._d=null),e))}function Ce(e,t,n,i,r){var o={};return(!0===n||!1===n)&&(i=n,n=void 0),(d(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||u(e)&&0===e.length)&&(e=void 0),o._isAMomentObject=!0,o._useUTC=o._isUTC=r,o._l=n,o._i=e,o._f=t,o._strict=i,function(e){var t=new k(we(De(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}(o)}function Me(e,t,n,i){return Ce(e,t,n,i,!1)}function Pe(e,t){var n,i;if(1===t.length&&u(t[0])&&(t=t[0]),!t.length)return Me();for(n=t[0],i=1;i<t.length;++i)(!t[i].isValid()||t[i][e](n))&&(n=t[i]);return n}function Ne(e){var t=j(e),n=t.year||0,i=t.quarter||0,r=t.month||0,o=t.week||t.isoWeek||0,s=t.day||0,a=t.hour||0,l=t.minute||0,u=t.second||0,d=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===Vt.call(cn,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,i=0;i<cn.length;++i)if(e[cn[i]]){if(n)return!1;parseFloat(e[cn[i]])!==O(e[cn[i]])&&(n=!0)}return!0}(t),this._milliseconds=+d+1e3*u+6e4*l+1e3*a*60*60,this._days=+s+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=_e(),this._bubble()}function Fe(e){return e instanceof Ne}function Ie(e){return 0>e?-1*t(-1*e):t(e)}function je(e,t){z(e,0,0,(function(){var e=this.utcOffset(),n="+";return 0>e&&(e=-e,n="-"),n+A(~~(e/60),2)+t+A(~~e%60,2)}))}function Re(e,t){var n=(t||"").match(e);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(hn)||["-",0,0],r=60*i[1]+O(i[2]);return 0===r?0:"+"===i[0]?r:-r}function Ae(e,t){var n,i;return t._isUTC?(n=t.clone(),i=(x(e)||f(e)?e.valueOf():Me(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+i),l.updateOffset(n,!1),n):Me(e).local()}function ze(e){return 15*-t(e._d.getTimezoneOffset()/15)}function Le(){return!!this.isValid()&&this._isUTC&&0===this._offset}function Ye(e,t){var n,i,r,o=e,s=null;return Fe(e)?o={ms:e._milliseconds,d:e._days,M:e._months}:h(e)?(o={},t?o[t]=e:o.milliseconds=e):(s=fn.exec(e))?(n="-"===s[1]?-1:1,o={y:0,d:O(s[2])*n,h:O(s[3])*n,m:O(s[4])*n,s:O(s[5])*n,ms:O(Ie(1e3*s[6]))*n}):(s=pn.exec(e))?(n="-"===s[1]?-1:1,o={y:Be(s[2],n),M:Be(s[3],n),w:Be(s[4],n),d:Be(s[5],n),h:Be(s[6],n),m:Be(s[7],n),s:Be(s[8],n)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(r=function(e,t){var n;return e.isValid()&&t.isValid()?(t=Ae(t,e),e.isBefore(t)?n=We(e,t):((n=We(t,e)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(Me(o.from),Me(o.to)),(o={}).ms=r.milliseconds,o.M=r.months),i=new Ne(o),Fe(e)&&v(e,"_locale")&&(i._locale=e._locale),i}function Be(e,t){var n=e&&parseFloat(e.replace(",","."));return(isNaN(n)?0:n)*t}function We(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,"M").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,"M"),n}function He(e,t){return function(n,i){var r;return null===i||isNaN(+i)||(C(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),Ve(this,Ye(n="string"==typeof n?+n:n,i),e),this}}function Ve(e,t,n,i){var r=t._milliseconds,o=Ie(t._days),s=Ie(t._months);e.isValid()&&(i=null==i||i,s&&te(e,X(e,"Month")+s*n),o&&K(e,"Date",X(e,"Date")+o*n),r&&e._d.setTime(e._d.valueOf()+r*n),i&&l.updateOffset(e,o||s))}function Ue(e,t){var n,i=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(i,"months");return 0>t-r?n=(t-r)/(r-e.clone().add(i-1,"months")):n=(t-r)/(e.clone().add(i+1,"months")-r),-(i+n)||0}function Ge(e){var t;return void 0===e?this._locale._abbr:(null!=(t=_e(e))&&(this._locale=t),this)}function qe(){return this._locale}function $e(e,t){return(e%t+t)%t}function Ze(e,t,n){return 100>e&&0<=e?new Date(e+400,t,n)-126227808e5:new Date(e,t,n).valueOf()}function Qe(e,t,n){return 100>e&&0<=e?Date.UTC(e+400,t,n)-126227808e5:Date.UTC(e,t,n)}function Xe(e,t){z(0,[e,e.length],0,t)}function Ke(e,t,n,i,r){var o;return null==e?le(this,i,r).year:(t>(o=ue(e,i,r))&&(t=o),Je.call(this,e,t,n,i,r))}function Je(e,t,n,i,r){var o=ae(e,t,n,i,r),s=oe(o.year,0,o.dayOfYear);return this.year(s.getUTCFullYear()),this.month(s.getUTCMonth()),this.date(s.getUTCDate()),this}function et(e,t){t[6]=O(1e3*("0."+e))}function tt(e){return e}function nt(e,t,n,i){var r=_e(),o=y().set(i,t);return r[n](o,e)}function it(e,t,n){if(h(e)&&(t=e,e=void 0),e=e||"",null!=t)return nt(e,t,n,"month");var i,r=[];for(i=0;12>i;i++)r[i]=nt(e,i,n,"month");return r}function rt(e,t,n,i){"boolean"==typeof e?(h(t)&&(n=t,t=void 0),t=t||""):(n=t=e,e=!1,h(t)&&(n=t,t=void 0),t=t||"");var r=_e(),o=e?r._week.dow:0;if(null!=n)return nt(t,(n+o)%7,i,"day");var s,a=[];for(s=0;7>s;s++)a[s]=nt(t,(s+o)%7,i,"day");return a}function ot(e,t,n,i){var r=Ye(t,n);return e._milliseconds+=i*r._milliseconds,e._days+=i*r._days,e._months+=i*r._months,e._bubble()}function st(e){return 0>e?s(e):a(e)}function at(e){return 4800*e/146097}function lt(e){return 146097*e/4800}function ut(e){return function(){return this.as(e)}}function dt(e){return function(){return this.isValid()?this._data[e]:NaN}}function ct(e,t,n,i,r){return r.relativeTime(t||1,!!n,e,i)}function ht(e){return(0<e)-(0>e)||+e}function ft(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Vn(this._milliseconds)/1e3,i=Vn(this._days),r=Vn(this._months);e=S(n/60),t=S(e/60),n%=60,e%=60;var o=S(r/12),s=r%=12,a=i,l=t,u=e,d=n?n.toFixed(3).replace(/\.?0+$/,""):"",c=this.asSeconds();if(!c)return"P0D";var h=0>c?"-":"",f=ht(this._months)===ht(c)?"":"-",p=ht(this._days)===ht(c)?"":"-",v=ht(this._milliseconds)===ht(c)?"":"-";return h+"P"+(o?f+o+"Y":"")+(s?f+s+"M":"")+(a?p+a+"D":"")+(l||u||d?"T":"")+(l?v+l+"H":"")+(u?v+u+"M":"")+(d?v+d+"S":"")}var pt,vt;vt=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,i=0;i<n;i++)if(i in t&&e.call(this,t[i],i,t))return!0;return!1};var mt=l.momentProperties=[],yt=!1,gt={};l.suppressDeprecationWarnings=!1,l.deprecationHandler=null;var bt=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)v(e,t)&&n.push(t);return n},_t={},wt={},kt=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,xt=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,St={},Ot={},Et=/\d/,Tt=/\d\d/,Dt=/\d{3}/,Ct=/\d{4}/,Mt=/[+-]?\d{6}/,Pt=/\d\d?/,Nt=/\d\d\d\d?/,Ft=/\d\d\d\d\d\d?/,It=/\d{1,3}/,jt=/\d{1,4}/,Rt=/[+-]?\d{1,6}/,At=/\d+/,zt=/[+-]?\d+/,Lt=/Z|[+-]\d\d:?\d\d/gi,Yt=/Z|[+-]\d\d(?::?\d\d)?/gi,Bt=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Wt={},Ht={};z("Y",0,0,(function(){var e=this.year();return 9999>=e?""+e:"+"+e})),z(0,["YY",2],0,(function(){return this.year()%100})),z(0,["YYYY",4],0,"year"),z(0,["YYYYY",5],0,"year"),z(0,["YYYYYY",6,!0],0,"year"),F("year","y"),R("year",1),W("Y",zt),W("YY",Pt,Tt),W("YYYY",jt,Ct),W("YYYYY",Rt,Mt),W("YYYYYY",Rt,Mt),U(["YYYYY","YYYYYY"],0),U("YYYY",(function(e,t){t[0]=2===e.length?l.parseTwoDigitYear(e):O(e)})),U("YY",(function(e,t){t[0]=l.parseTwoDigitYear(e)})),U("Y",(function(e,t){t[0]=parseInt(e,10)})),l.parseTwoDigitYear=function(e){return O(e)+(68<O(e)?1900:2e3)};var Vt,Ut=Q("FullYear",!0);Vt=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},z("M",["MM",2],"Mo",(function(){return this.month()+1})),z("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),z("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),F("month","M"),R("month",8),W("M",Pt),W("MM",Pt,Tt),W("MMM",(function(e,t){return t.monthsShortRegex(e)})),W("MMMM",(function(e,t){return t.monthsRegex(e)})),U(["M","MM"],(function(e,t){t[1]=O(e)-1})),U(["MMM","MMMM"],(function(e,t,n,i){var r=n._locale.monthsParse(e,i,n._strict);null==r?g(n).invalidMonth=e:t[1]=r}));var Gt=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,qt=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];z("w",["ww",2],"wo","week"),z("W",["WW",2],"Wo","isoWeek"),F("week","w"),F("isoWeek","W"),R("week",5),R("isoWeek",5),W("w",Pt),W("ww",Pt,Tt),W("W",Pt),W("WW",Pt,Tt),G(["w","ww","W","WW"],(function(e,t,n,i){t[i.substr(0,1)]=O(e)})),z("d",0,"do","day"),z("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),z("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),z("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),z("e",0,0,"weekday"),z("E",0,0,"isoWeekday"),F("day","d"),F("weekday","e"),F("isoWeekday","E"),R("day",11),R("weekday",11),R("isoWeekday",11),W("d",Pt),W("e",Pt),W("E",Pt),W("dd",(function(e,t){return t.weekdaysMinRegex(e)})),W("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),W("dddd",(function(e,t){return t.weekdaysRegex(e)})),G(["dd","ddd","dddd"],(function(e,t,n,i){var r=n._locale.weekdaysParse(e,i,n._strict);null==r?g(n).invalidWeekday=e:t.d=r})),G(["d","e","E"],(function(e,t,n,i){t[i]=O(e)}));var $t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];z("H",["HH",2],0,"hour"),z("h",["hh",2],0,fe),z("k",["kk",2],0,(function(){return this.hours()||24})),z("hmm",0,0,(function(){return""+fe.apply(this)+A(this.minutes(),2)})),z("hmmss",0,0,(function(){return""+fe.apply(this)+A(this.minutes(),2)+A(this.seconds(),2)})),z("Hmm",0,0,(function(){return""+this.hours()+A(this.minutes(),2)})),z("Hmmss",0,0,(function(){return""+this.hours()+A(this.minutes(),2)+A(this.seconds(),2)})),pe("a",!0),pe("A",!1),F("hour","h"),R("hour",13),W("a",ve),W("A",ve),W("H",Pt),W("h",Pt),W("k",Pt),W("HH",Pt,Tt),W("hh",Pt,Tt),W("kk",Pt,Tt),W("hmm",Nt),W("hmmss",Ft),W("Hmm",Nt),W("Hmmss",Ft),U(["H","HH"],3),U(["k","kk"],(function(e,t){var n=O(e);t[3]=24===n?0:n})),U(["a","A"],(function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e})),U(["h","hh"],(function(e,t,n){t[3]=O(e),g(n).bigHour=!0})),U("hmm",(function(e,t,n){var i=e.length-2;t[3]=O(e.substr(0,i)),t[4]=O(e.substr(i)),g(n).bigHour=!0})),U("hmmss",(function(e,t,n){var i=e.length-4,r=e.length-2;t[3]=O(e.substr(0,i)),t[4]=O(e.substr(i,2)),t[5]=O(e.substr(r)),g(n).bigHour=!0})),U("Hmm",(function(e,t){var n=e.length-2;t[3]=O(e.substr(0,n)),t[4]=O(e.substr(n))})),U("Hmmss",(function(e,t){var n=e.length-4,i=e.length-2;t[3]=O(e.substr(0,n)),t[4]=O(e.substr(n,2)),t[5]=O(e.substr(i))}));var Zt,Qt=Q("Hours",!0),Xt={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:qt,week:{dow:0,doy:6},weekdays:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],weekdaysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekdaysShort:$t,meridiemParse:/[ap]\.?m?\.?/i},Kt={},Jt={},en=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tn=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,nn=/Z|[+-]\d\d(?::?\d\d)?/,rn=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],on=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],sn=/^\/?Date\((\-?\d+)/i,an=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,ln={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};l.createFromInputFallback=D("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),l.ISO_8601=function(){},l.RFC_2822=function(){};var un=D("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:_()})),dn=D("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:_()})),cn=["year","quarter","month","week","day","hour","minute","second","millisecond"];je("Z",":"),je("ZZ",""),W("Z",Yt),W("ZZ",Yt),U(["Z","ZZ"],(function(e,t,n){n._useUTC=!0,n._tzm=Re(Yt,e)}));var hn=/([\+\-]|\d\d)/gi;l.updateOffset=function(){};var fn=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,pn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;Ye.fn=Ne.prototype,Ye.invalid=function(){return Ye(NaN)};var vn=He(1,"add"),mn=He(-1,"subtract");l.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",l.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var yn=D("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));z(0,["gg",2],0,(function(){return this.weekYear()%100})),z(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),Xe("gggg","weekYear"),Xe("ggggg","weekYear"),Xe("GGGG","isoWeekYear"),Xe("GGGGG","isoWeekYear"),F("weekYear","gg"),F("isoWeekYear","GG"),R("weekYear",1),R("isoWeekYear",1),W("G",zt),W("g",zt),W("GG",Pt,Tt),W("gg",Pt,Tt),W("GGGG",jt,Ct),W("gggg",jt,Ct),W("GGGGG",Rt,Mt),W("ggggg",Rt,Mt),G(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,n,i){t[i.substr(0,2)]=O(e)})),G(["gg","GG"],(function(e,t,n,i){t[i]=l.parseTwoDigitYear(e)})),z("Q",0,"Qo","quarter"),F("quarter","Q"),R("quarter",7),W("Q",Et),U("Q",(function(e,t){t[1]=3*(O(e)-1)})),z("D",["DD",2],"Do","date"),F("date","D"),R("date",9),W("D",Pt),W("DD",Pt,Tt),W("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),U(["D","DD"],2),U("Do",(function(e,t){t[2]=O(e.match(Pt)[0])}));var gn=Q("Date",!0);z("DDD",["DDDD",3],"DDDo","dayOfYear"),F("dayOfYear","DDD"),R("dayOfYear",4),W("DDD",It),W("DDDD",Dt),U(["DDD","DDDD"],(function(e,t,n){n._dayOfYear=O(e)})),z("m",["mm",2],0,"minute"),F("minute","m"),R("minute",14),W("m",Pt),W("mm",Pt,Tt),U(["m","mm"],4);var bn=Q("Minutes",!1);z("s",["ss",2],0,"second"),F("second","s"),R("second",15),W("s",Pt),W("ss",Pt,Tt),U(["s","ss"],5);var _n,wn=Q("Seconds",!1);for(z("S",0,0,(function(){return~~(this.millisecond()/100)})),z(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),z(0,["SSS",3],0,"millisecond"),z(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),z(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),z(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),z(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),z(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),z(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),F("millisecond","ms"),R("millisecond",16),W("S",It,Et),W("SS",It,Tt),W("SSS",It,Dt),_n="SSSS";9>=_n.length;_n+="S")W(_n,At);for(_n="S";9>=_n.length;_n+="S")U(_n,et);var kn=Q("Milliseconds",!1);z("z",0,0,"zoneAbbr"),z("zz",0,0,"zoneName");var xn=k.prototype;xn.add=vn,xn.calendar=function(e,t){var n=e||Me(),i=Ae(n,this).startOf("day"),r=l.calendarFormat(this,i)||"sameElse",o=t&&(M(t[r])?t[r].call(this,n):t[r]);return this.format(o||this.localeData().calendar(r,this,Me(n)))},xn.clone=function(){return new k(this)},xn.diff=function(e,t,n){var i,r,o;return this.isValid()?(i=Ae(e,this)).isValid()?(r=6e4*(i.utcOffset()-this.utcOffset()),o="year"===(t=I(t))?Ue(this,i)/12:"month"===t?Ue(this,i):"quarter"===t?Ue(this,i)/3:"second"===t?(this-i)/1e3:"minute"===t?(this-i)/6e4:"hour"===t?(this-i)/36e5:"day"===t?(this-i-r)/864e5:"week"===t?(this-i-r)/6048e5:this-i,n?o:S(o)):NaN:NaN},xn.endOf=function(e){var t;if(void 0===(e=I(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Qe:Ze;return"year"===e?t=n(this.year()+1,0,1)-1:"quarter"===e?t=n(this.year(),this.month()-this.month()%3+3,1)-1:"month"===e?t=n(this.year(),this.month()+1,1)-1:"week"===e?t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1:"isoWeek"===e?t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1:"day"===e||"date"===e?t=n(this.year(),this.month(),this.date()+1)-1:"hour"===e?(t=this._d.valueOf(),t+=36e5-$e(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)-1):"minute"===e?(t=this._d.valueOf(),t+=6e4-$e(t,6e4)-1):"second"===e&&(t=this._d.valueOf(),t+=1e3-$e(t,1e3)-1),this._d.setTime(t),l.updateOffset(this,!0),this},xn.format=function(e){e||(e=this.isUtc()?l.defaultFormatUtc:l.defaultFormat);var t=Y(this,e);return this.localeData().postformat(t)},xn.from=function(e,t){return this.isValid()&&(x(e)&&e.isValid()||Me(e).isValid())?Ye({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},xn.fromNow=function(e){return this.from(Me(),e)},xn.to=function(e,t){return this.isValid()&&(x(e)&&e.isValid()||Me(e).isValid())?Ye({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},xn.toNow=function(e){return this.to(Me(),e)},xn.get=function(e){return M(this[e=I(e)])?this[e]():this},xn.invalidAt=function(){return g(this).overflow},xn.isAfter=function(e,t){var n=x(e)?e:Me(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},xn.isBefore=function(e,t){var n=x(e)?e:Me(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},xn.isBetween=function(e,t,n,i){var r=x(e)?e:Me(e),o=x(t)?t:Me(t);return!!(this.isValid()&&r.isValid()&&o.isValid())&&(("("===(i=i||"()")[0]?this.isAfter(r,n):!this.isBefore(r,n))&&(")"===i[1]?this.isBefore(o,n):!this.isAfter(o,n)))},xn.isSame=function(e,t){var n,i=x(e)?e:Me(e);return!(!this.isValid()||!i.isValid())&&("millisecond"===(t=I(t)||"millisecond")?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},xn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},xn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},xn.isValid=function(){return b(this)},xn.lang=yn,xn.locale=Ge,xn.localeData=qe,xn.max=dn,xn.min=un,xn.parsingFlags=function(){return m({},g(this))},xn.set=function(e,t){if("object"==typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:wt[n]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=j(e)),i=0;i<n.length;i++)this[n[i].unit](e[n[i].unit]);else if(M(this[e=I(e)]))return this[e](t);return this},xn.startOf=function(e){var t;if(void 0===(e=I(e))||"millisecond"===e||!this.isValid())return this;var n=this._isUTC?Qe:Ze;return"year"===e?t=n(this.year(),0,1):"quarter"===e?t=n(this.year(),this.month()-this.month()%3,1):"month"===e?t=n(this.year(),this.month(),1):"week"===e?t=n(this.year(),this.month(),this.date()-this.weekday()):"isoWeek"===e?t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)):"day"===e||"date"===e?t=n(this.year(),this.month(),this.date()):"hour"===e?(t=this._d.valueOf(),t-=$e(t+(this._isUTC?0:6e4*this.utcOffset()),36e5)):"minute"===e?(t=this._d.valueOf(),t-=$e(t,6e4)):"second"===e&&(t=this._d.valueOf(),t-=$e(t,1e3)),this._d.setTime(t),l.updateOffset(this,!0),this},xn.subtract=mn,xn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},xn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},xn.toDate=function(){return new Date(this.valueOf())},xn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return 0>n.year()||9999<n.year()?Y(n,t?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):M(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",Y(n,"Z")):Y(n,t?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")},xn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var n="["+e+'("]',i=0<=this.year()&&9999>=this.year()?"YYYY":"YYYYYY",r=t+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},xn.toJSON=function(){return this.isValid()?this.toISOString():null},xn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},xn.unix=function(){return s(this.valueOf()/1e3)},xn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},xn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},xn.year=Ut,xn.isLeapYear=function(){return Z(this.year())},xn.weekYear=function(e){return Ke.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},xn.isoWeekYear=function(e){return Ke.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},xn.quarter=xn.quarters=function(e){return null==e?a((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},xn.month=ne,xn.daysInMonth=function(){return J(this.year(),this.month())},xn.week=xn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},xn.isoWeek=xn.isoWeeks=function(e){var t=le(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},xn.weeksInYear=function(){var e=this.localeData()._week;return ue(this.year(),e.dow,e.doy)},xn.isoWeeksInYear=function(){return ue(this.year(),1,4)},xn.date=gn,xn.day=xn.days=function(e){if(!this.isValid())return null==e?NaN:this;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null==e?t:(e=function(e,t){return"string"==typeof e?isNaN(e)?"number"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10):e}(e,this.localeData()),this.add(e-t,"d"))},xn.weekday=function(e){if(!this.isValid())return null==e?NaN:this;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},xn.isoWeekday=function(e){if(!this.isValid())return null==e?NaN:this;if(null!=e){var t=function(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},xn.dayOfYear=function(e){var n=t((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?n:this.add(e-n,"d")},xn.hour=xn.hours=Qt,xn.minute=xn.minutes=bn,xn.second=xn.seconds=wn,xn.millisecond=xn.milliseconds=kn,xn.utcOffset=function(e,t,n){var i,o=this._offset||0;if(!this.isValid())return null==e?NaN:this;if(null!=e){if("string"!=typeof e)16>r(e)&&!n&&(e*=60);else if(null===(e=Re(Yt,e)))return this;return!this._isUTC&&t&&(i=ze(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,"m"),o!==e&&(!t||this._changeInProgress?Ve(this,Ye(e-o,"m"),1,!1):!this._changeInProgress&&(this._changeInProgress=!0,l.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?o:ze(this)},xn.utc=function(e){return this.utcOffset(0,e)},xn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(ze(this),"m")),this},xn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Re(Lt,this._i);null==e?this.utcOffset(0,!0):this.utcOffset(e)}return this},xn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Me(e).utcOffset():0,0==(this.utcOffset()-e)%60)},xn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},xn.isLocal=function(){return!!this.isValid()&&!this._isUTC},xn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},xn.isUtc=Le,xn.isUTC=Le,xn.zoneAbbr=function(){return this._isUTC?"UTC":""},xn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},xn.dates=D("dates accessor is deprecated. Use date instead.",gn),xn.months=D("months accessor is deprecated. Use month instead",ne),xn.years=D("years accessor is deprecated. Use year instead",Ut),xn.zone=D("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null==e?-this.utcOffset():("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this)})),xn.isDSTShifted=D("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!c(this._isDSTShifted))return this._isDSTShifted;var e={};if(w(e,this),(e=De(e))._a){var t=e._isUTC?y(e._a):Me(e._a);this._isDSTShifted=this.isValid()&&0<E(e._a,t.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted}));var Sn=N.prototype;Sn.calendar=function(e,t,n){var i=this._calendar[e]||this._calendar.sameElse;return M(i)?i.call(t,n):i},Sn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},Sn.invalidDate=function(){return this._invalidDate},Sn.ordinal=function(e){return this._ordinal.replace("%d",e)},Sn.preparse=tt,Sn.postformat=tt,Sn.relativeTime=function(e,t,n,i){var r=this._relativeTime[n];return M(r)?r(e,t,n,i):r.replace(/%d/i,e)},Sn.pastFuture=function(e,t){var n=this._relativeTime[0<e?"future":"past"];return M(n)?n(t):n.replace(/%s/i,t)},Sn.set=function(e){var t,n;for(n in e)M(t=e[n])?this[n]=t:this["_"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},Sn.months=function(e,t){return e?u(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Gt).test(t)?"format":"standalone"][e.month()]:u(this._months)?this._months:this._months.standalone},Sn.monthsShort=function(e,t){return e?u(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Gt.test(t)?"format":"standalone"][e.month()]:u(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},Sn.monthsParse=function(e,t,n){var i,r,o;if(this._monthsParseExact)return ee.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;12>i;i++){if(r=y([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===t&&this._longMonthsParse[i].test(e))return i;if(n&&"MMM"===t&&this._shortMonthsParse[i].test(e))return i;if(!n&&this._monthsParse[i].test(e))return i}},Sn.monthsRegex=function(e){return this._monthsParseExact?(v(this,"_monthsRegex")||ie.call(this),e?this._monthsStrictRegex:this._monthsRegex):(v(this,"_monthsRegex")||(this._monthsRegex=Bt),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},Sn.monthsShortRegex=function(e){return this._monthsParseExact?(v(this,"_monthsRegex")||ie.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(v(this,"_monthsShortRegex")||(this._monthsShortRegex=Bt),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},Sn.week=function(e){return le(e,this._week.dow,this._week.doy).week},Sn.firstDayOfYear=function(){return this._week.doy},Sn.firstDayOfWeek=function(){return this._week.dow},Sn.weekdays=function(e,t){var n=u(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?"format":"standalone"];return!0===e?de(n,this._week.dow):e?n[e.day()]:n},Sn.weekdaysMin=function(e){return!0===e?de(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},Sn.weekdaysShort=function(e){return!0===e?de(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},Sn.weekdaysParse=function(e,t,n){var i,r,o;if(this._weekdaysParseExact)return ce.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;7>i;i++){if(r=y([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===t&&this._fullWeekdaysParse[i].test(e))return i;if(n&&"ddd"===t&&this._shortWeekdaysParse[i].test(e))return i;if(n&&"dd"===t&&this._minWeekdaysParse[i].test(e))return i;if(!n&&this._weekdaysParse[i].test(e))return i}},Sn.weekdaysRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(v(this,"_weekdaysRegex")||(this._weekdaysRegex=Bt),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},Sn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(v(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Bt),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},Sn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(v(this,"_weekdaysRegex")||he.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(v(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Bt),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},Sn.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},Sn.meridiem=function(e,t,n){return 11<e?n?"pm":"PM":n?"am":"AM"},ge("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===O(e%100/10)?"th":1==t?"st":2==t?"nd":3==t?"rd":"th")}}),l.lang=D("moment.lang is deprecated. Use moment.locale instead.",ge),l.langData=D("moment.langData is deprecated. Use moment.localeData instead.",_e);var On=r,En=ut("ms"),Tn=ut("s"),Dn=ut("m"),Cn=ut("h"),Mn=ut("d"),Pn=ut("w"),Nn=ut("M"),Fn=ut("Q"),In=ut("y"),jn=dt("milliseconds"),Rn=dt("seconds"),An=dt("minutes"),zn=dt("hours"),Ln=dt("days"),Yn=dt("months"),Bn=dt("years"),Wn=t,Hn={ss:44,s:45,m:45,h:22,d:26,M:11},Vn=r,Un=Ne.prototype;return Un.isValid=function(){return this._isValid},Un.abs=function(){var e=this._data;return this._milliseconds=On(this._milliseconds),this._days=On(this._days),this._months=On(this._months),e.milliseconds=On(e.milliseconds),e.seconds=On(e.seconds),e.minutes=On(e.minutes),e.hours=On(e.hours),e.months=On(e.months),e.years=On(e.years),this},Un.add=function(e,t){return ot(this,e,t,1)},Un.subtract=function(e,t){return ot(this,e,t,-1)},Un.as=function(e){if(!this.isValid())return NaN;var n,i,r=this._milliseconds;if("month"===(e=I(e))||"quarter"===e||"year"===e)switch(n=this._days+r/864e5,i=this._months+at(n),e){case"month":return i;case"quarter":return i/3;case"year":return i/12}else switch(n=this._days+t(lt(this._months)),e){case"week":return n/7+r/6048e5;case"day":return n+r/864e5;case"hour":return 24*n+r/36e5;case"minute":return 1440*n+r/6e4;case"second":return 86400*n+r/1e3;case"millisecond":return s(864e5*n)+r;default:throw new Error("Unknown unit "+e)}},Un.asMilliseconds=En,Un.asSeconds=Tn,Un.asMinutes=Dn,Un.asHours=Cn,Un.asDays=Mn,Un.asWeeks=Pn,Un.asMonths=Nn,Un.asQuarters=Fn,Un.asYears=In,Un.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*O(this._months/12):NaN},Un._bubble=function(){var e,t,n,i,r,o=this._milliseconds,s=this._days,a=this._months,l=this._data;return 0<=o&&0<=s&&0<=a||0>=o&&0>=s&&0>=a||(o+=864e5*st(lt(a)+s),s=0,a=0),l.milliseconds=o%1e3,e=S(o/1e3),l.seconds=e%60,t=S(e/60),l.minutes=t%60,n=S(t/60),l.hours=n%24,s+=S(n/24),a+=r=S(at(s)),s-=st(lt(r)),i=S(a/12),a%=12,l.days=s,l.months=a,l.years=i,this},Un.clone=function(){return Ye(this)},Un.get=function(e){return e=I(e),this.isValid()?this[e+"s"]():NaN},Un.milliseconds=jn,Un.seconds=Rn,Un.minutes=An,Un.hours=zn,Un.days=Ln,Un.weeks=function(){return S(this.days()/7)},Un.months=Yn,Un.years=Bn,Un.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=function(e,t,n){var i=Ye(e).abs(),r=Wn(i.as("s")),o=Wn(i.as("m")),s=Wn(i.as("h")),a=Wn(i.as("d")),l=Wn(i.as("M")),u=Wn(i.as("y")),d=r<=Hn.ss&&["s",r]||r<Hn.s&&["ss",r]||1>=o&&["m"]||o<Hn.m&&["mm",o]||1>=s&&["h"]||s<Hn.h&&["hh",s]||1>=a&&["d"]||a<Hn.d&&["dd",a]||1>=l&&["M"]||l<Hn.M&&["MM",l]||1>=u&&["y"]||["yy",u];return d[2]=t,d[3]=0<+e,d[4]=n,ct.apply(null,d)}(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)},Un.toISOString=ft,Un.toString=ft,Un.toJSON=ft,Un.locale=Ge,Un.localeData=qe,Un.toIsoString=D("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",ft),Un.lang=yn,z("X",0,0,"unix"),z("x",0,0,"valueOf"),W("x",zt),W("X",/[+-]?\d+(\.\d{1,3})?/),U("X",(function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))})),U("x",(function(e,t,n){n._d=new Date(O(e))})),l.version="2.24.0",function(e){pt=e}(Me),l.fn=xn,l.min=function(){var e=[].slice.call(arguments,0);return Pe("isBefore",e)},l.max=function(){var e=[].slice.call(arguments,0);return Pe("isAfter",e)},l.now=function(){return Date.now?Date.now():+new Date},l.utc=y,l.unix=function(e){return Me(1e3*e)},l.months=function(e,t){return it(e,t,"months")},l.isDate=f,l.locale=ge,l.invalid=_,l.duration=Ye,l.isMoment=x,l.weekdays=function(e,t,n){return rt(e,t,n,"weekdays")},l.parseZone=function(){return Me.apply(null,arguments).parseZone()},l.localeData=_e,l.isDuration=Fe,l.monthsShort=function(e,t){return it(e,t,"monthsShort")},l.weekdaysMin=function(e,t,n){return rt(e,t,n,"weekdaysMin")},l.defineLocale=be,l.updateLocale=function(e,t){if(null!=t){var n,i,r=Xt;null!=(i=ye(e))&&(r=i._config),(n=new N(t=P(r,t))).parentLocale=Kt[e],Kt[e]=n,ge(e)}else null!=Kt[e]&&(null==Kt[e].parentLocale?null!=Kt[e]&&delete Kt[e]:Kt[e]=Kt[e].parentLocale);return Kt[e]},l.locales=function(){return bt(Kt)},l.weekdaysShort=function(e,t,n){return rt(e,t,n,"weekdaysShort")},l.normalizeUnits=I,l.relativeTimeRounding=function(e){return void 0===e?Wn:"function"==typeof e&&(Wn=e,!0)},l.relativeTimeThreshold=function(e,t){return void 0!==Hn[e]&&(void 0===t?Hn[e]:(Hn[e]=t,"s"===e&&(Hn.ss=t-1),!0))},l.calendarFormat=function(e,t){var n=e.diff(t,"days",!0);return-6>n?"sameElse":-1>n?"lastWeek":0>n?"lastDay":1>n?"sameDay":2>n?"nextDay":7>n?"nextWeek":"sameElse"},l.prototype=xn,l.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},l}))})),Du="undefined"!=typeof window&&window.moment||Tu,Cu=Object.freeze({default:Du,__moduleExports:Du}),Mu={Images:fa,dotparser:To,gephiParser:Co,allOptions:pu,convertDot:Oo,convertGephi:Do},Pu=Object.freeze({util:Ki,data:Wr,network:Mu,DOMutil:Eu,moment:Cu,Hammer:oa,keycharm:No,DataSet:Lr,DataView:Yr,Queue:Nr,Network:yu});t.default=Pu}.call(this,n(34))},function(e,t,n){for(var i=n(247),r=[],o={},s=0;s<256;s++)r[s]=(s+256).toString(16).substr(1),o[r[s]]=s;function a(e,t){var n=t||0,i=r;return i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+"-"+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]+i[e[n++]]}var l=i(),u=[1|l[0],l[1],l[2],l[3],l[4],l[5]],d=16383&(l[6]<<8|l[7]),c=0,h=0;function f(e,t,n){var r=t&&n||0;"string"==typeof e&&(t="binary"==e?new Array(16):null,e=null);var o=(e=e||{}).random||(e.rng||i)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t)for(var s=0;s<16;s++)t[r+s]=o[s];return t||a(o)}var p=f;p.v1=function(e,t,n){var i=t&&n||0,r=t||[],o=void 0!==(e=e||{}).clockseq?e.clockseq:d,s=void 0!==e.msecs?e.msecs:(new Date).getTime(),l=void 0!==e.nsecs?e.nsecs:h+1,f=s-c+(l-h)/1e4;if(f<0&&void 0===e.clockseq&&(o=o+1&16383),(f<0||s>c)&&void 0===e.nsecs&&(l=0),l>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");c=s,h=l,d=o;var p=(1e4*(268435455&(s+=122192928e5))+l)%4294967296;r[i++]=p>>>24&255,r[i++]=p>>>16&255,r[i++]=p>>>8&255,r[i++]=255&p;var v=s/4294967296*1e4&268435455;r[i++]=v>>>8&255,r[i++]=255&v,r[i++]=v>>>24&15|16,r[i++]=v>>>16&255,r[i++]=o>>>8|128,r[i++]=255&o;for(var m=e.node||u,y=0;y<6;y++)r[i+y]=m[y];return t||a(r)},p.v4=f,p.parse=function(e,t,n){var i=t&&n||0,r=0;for(t=t||[],e.toLowerCase().replace(/[0-9a-f]{2}/g,(function(e){r<16&&(t[i+r++]=o[e])}));r<16;)t[i+r++]=0;return t},p.unparse=a,e.exports=p},function(e,t,n){(function(t){var n,i=t.crypto||t.msCrypto;if(i&&i.getRandomValues){var r=new Uint8Array(16);n=function(){return i.getRandomValues(r),r}}if(!n){var o=new Array(16);n=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),o[t]=e>>>((3&t)<<3)&255;return o}}e.exports=n}).call(this,n(34))},function(e,t,n){"use strict";var i=n(249);function r(){}function o(){}o.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,o,s){if(s!==i){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:r};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){function t(t,n,i,r,o,s){var a=r||"<<anonymous>>",l=s||i;if(null==n[i])return t?new Error("Required "+o+" `"+l+"` was not specified in `"+a+"`."):null;for(var u=arguments.length,d=Array(u>6?u-6:0),c=6;c<u;c++)d[c-6]=arguments[c];return e.apply(void 0,[n,i,a,o,l].concat(d))}var n=t.bind(null,!1);return n.isRequired=t.bind(null,!0),n},e.exports=t.default},function(e,t,n){"use strict";n.r(t);var i=n(57),r=n.n(i),o=n(0),s=n.n(o),a=n(109),l=n.n(a),u=n(110),d=n.n(u);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function h(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}var f=n(1),p=n.n(f),v=s.a.createContext({});v.Consumer,v.Provider;function m(e,t){var n=Object(o.useContext)(v);return e||n[t]||t}var y=["xl","lg","md","sm","xs"],g=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.className,r=e.as,o=void 0===r?"div":r,a=h(e,["bsPrefix","className","as"]),l=m(n,"col"),u=[],d=[];return y.forEach((function(e){var t,n,i,r=a[e];if(delete a[e],"object"==typeof r&&null!=r){var o=r.span;t=void 0===o||o,n=r.offset,i=r.order}else t=r;var s="xs"!==e?"-"+e:"";t&&u.push(!0===t?""+l+s:""+l+s+"-"+t),null!=i&&d.push("order"+s+"-"+i),null!=n&&d.push("offset"+s+"-"+n)})),u.length||u.push(l),s.a.createElement(o,c({},a,{ref:t,className:p.a.apply(void 0,[i].concat(u,d))}))}));g.displayName="Col";var b=g,_=(n(56),n(15)),w=n.n(_),k={type:w.a.string,tooltip:w.a.bool,as:w.a.elementType},x=s.a.forwardRef((function(e,t){var n=e.as,i=void 0===n?"div":n,r=e.className,o=e.type,a=void 0===o?"valid":o,l=e.tooltip,u=void 0!==l&&l,d=h(e,["as","className","type","tooltip"]);return(s.a.createElement(i,c({},d,{ref:t,className:p()(r,a+"-"+(u?"tooltip":"feedback"))})))}));x.displayName="Feedback",x.propTypes=k;var S=x,O=s.a.createContext({controlId:void 0}),E=s.a.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,r=e.bsCustomPrefix,a=e.className,l=e.type,u=void 0===l?"checkbox":l,d=e.isValid,f=void 0!==d&&d,v=e.isInvalid,y=void 0!==v&&v,g=e.isStatic,b=e.as,_=void 0===b?"input":b,w=h(e,["id","bsPrefix","bsCustomPrefix","className","type","isValid","isInvalid","isStatic","as"]),k=Object(o.useContext)(O),x=k.controlId,S=k.custom?[r,"custom-control-input"]:[i,"form-check-input"];return i=m(S[0],S[1]),s.a.createElement(_,c({},w,{ref:t,type:u,id:n||x,className:p()(a,i,f&&"is-valid",y&&"is-invalid",g&&"position-static")}))}));E.displayName="FormCheckInput";var T=E,D=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.bsCustomPrefix,r=e.className,a=e.htmlFor,l=h(e,["bsPrefix","bsCustomPrefix","className","htmlFor"]),u=Object(o.useContext)(O),d=u.controlId,f=u.custom?[i,"custom-control-label"]:[n,"form-check-label"];return n=m(f[0],f[1]),s.a.createElement("label",c({},l,{ref:t,htmlFor:a||d,className:p()(r,n)}))}));D.displayName="FormCheckLabel";var C=D,M=s.a.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,r=e.bsCustomPrefix,a=e.inline,l=void 0!==a&&a,u=e.disabled,d=void 0!==u&&u,f=e.isValid,v=void 0!==f&&f,y=e.isInvalid,g=void 0!==y&&y,b=e.feedbackTooltip,_=void 0!==b&&b,w=e.feedback,k=e.className,x=e.style,E=e.title,D=void 0===E?"":E,M=e.type,P=void 0===M?"checkbox":M,N=e.label,F=e.children,I=e.custom,j=e.as,R=void 0===j?"input":j,A=h(e,["id","bsPrefix","bsCustomPrefix","inline","disabled","isValid","isInvalid","feedbackTooltip","feedback","className","style","title","type","label","children","custom","as"]),z="switch"===P||I,L=z?[r,"custom-control"]:[i,"form-check"];i=m(L[0],L[1]);var Y=Object(o.useContext)(O).controlId,B=Object(o.useMemo)((function(){return{controlId:n||Y,custom:z}}),[Y,z,n]),W=null!=N&&!1!==N&&!F,H=s.a.createElement(T,c({},A,{type:"switch"===P?"checkbox":P,ref:t,isValid:v,isInvalid:g,isStatic:!W,disabled:d,as:R}));return s.a.createElement(O.Provider,{value:B},s.a.createElement("div",{style:x,className:p()(k,i,z&&"custom-"+P,l&&i+"-inline")},F||s.a.createElement(s.a.Fragment,null,H,W&&s.a.createElement(C,{title:D},N),(v||g)&&s.a.createElement(S,{type:v?"valid":"invalid",tooltip:_},w))))}));M.displayName="FormCheck",M.Input=T,M.Label=C;var P=M,N=s.a.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,r=e.bsCustomPrefix,a=e.className,l=e.isValid,u=e.isInvalid,d=e.lang,f=e.as,v=void 0===f?"input":f,y=h(e,["id","bsPrefix","bsCustomPrefix","className","isValid","isInvalid","lang","as"]),g=Object(o.useContext)(O),b=g.controlId,_=g.custom?[r,"custom-file-input"]:[i,"form-control-file"];return i=m(_[0],_[1]),s.a.createElement(v,c({},y,{ref:t,id:n||b,type:"file",lang:d,className:p()(a,i,l&&"is-valid",u&&"is-invalid")}))}));N.displayName="FormFileInput";var F=N,I=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.bsCustomPrefix,r=e.className,a=e.htmlFor,l=h(e,["bsPrefix","bsCustomPrefix","className","htmlFor"]),u=Object(o.useContext)(O),d=u.controlId,f=u.custom?[i,"custom-file-label"]:[n,"form-file-label"];return n=m(f[0],f[1]),s.a.createElement("label",c({},l,{ref:t,htmlFor:a||d,className:p()(r,n),"data-browse":l["data-browse"]}))}));I.displayName="FormFileLabel";var j=I,R=s.a.forwardRef((function(e,t){var n=e.id,i=e.bsPrefix,r=e.bsCustomPrefix,a=e.disabled,l=void 0!==a&&a,u=e.isValid,d=void 0!==u&&u,f=e.isInvalid,v=void 0!==f&&f,y=e.feedbackTooltip,g=void 0!==y&&y,b=e.feedback,_=e.className,w=e.style,k=e.label,x=e.children,E=e.custom,T=e.lang,D=e["data-browse"],C=e.as,M=void 0===C?"div":C,P=e.inputAs,N=void 0===P?"input":P,I=h(e,["id","bsPrefix","bsCustomPrefix","disabled","isValid","isInvalid","feedbackTooltip","feedback","className","style","label","children","custom","lang","data-browse","as","inputAs"]),R=E?[r,"custom"]:[i,"form-file"];i=m(R[0],R[1]);var A=Object(o.useContext)(O).controlId,z=Object(o.useMemo)((function(){return{controlId:n||A,custom:E}}),[A,E,n]),L=null!=k&&!1!==k&&!x,Y=s.a.createElement(F,c({},I,{ref:t,isValid:d,isInvalid:v,disabled:l,as:N,lang:T}));return s.a.createElement(O.Provider,{value:z},s.a.createElement(M,{style:w,className:p()(_,i,E&&"custom-file")},x||s.a.createElement(s.a.Fragment,null,E?s.a.createElement(s.a.Fragment,null,Y,L&&s.a.createElement(j,{"data-browse":D},k)):s.a.createElement(s.a.Fragment,null,L&&s.a.createElement(j,null,k),Y),(d||v)&&s.a.createElement(S,{type:d?"valid":"invalid",tooltip:g},b))))}));R.displayName="FormFile",R.Input=F,R.Label=j;var A=R,z=(n(108),s.a.forwardRef((function(e,t){var n,i,r=e.bsPrefix,a=e.bsCustomPrefix,l=e.type,u=e.size,d=e.htmlSize,f=e.id,v=e.className,y=e.isValid,g=void 0!==y&&y,b=e.isInvalid,_=void 0!==b&&b,w=e.plaintext,k=e.readOnly,x=e.custom,S=e.as,E=void 0===S?"input":S,T=h(e,["bsPrefix","bsCustomPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","custom","as"]),D=Object(o.useContext)(O).controlId,C=x?[a,"custom"]:[r,"form-control"];if(r=m(C[0],C[1]),w)(i={})[r+"-plaintext"]=!0,n=i;else if("file"===l){var M;(M={})[r+"-file"]=!0,n=M}else if("range"===l){var P;(P={})[r+"-range"]=!0,n=P}else if("select"===E&&x){var N;(N={})[r+"-select"]=!0,N[r+"-select-"+u]=u,n=N}else{var F;(F={})[r]=!0,F[r+"-"+u]=u,n=F}return s.a.createElement(E,c({},T,{type:l,size:d,ref:t,readOnly:k,id:f||D,className:p()(v,n,g&&"is-valid",_&&"is-invalid")}))})));z.displayName="FormControl";var L=Object.assign(z,{Feedback:S}),Y=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.className,r=e.children,a=e.controlId,l=e.as,u=void 0===l?"div":l,d=h(e,["bsPrefix","className","children","controlId","as"]);n=m(n,"form-group");var f=Object(o.useMemo)((function(){return{controlId:a}}),[a]);return(s.a.createElement(O.Provider,{value:f},s.a.createElement(u,c({},d,{ref:t,className:p()(i,n)}),r)))}));Y.displayName="FormGroup";var B=Y,W=s.a.forwardRef((function(e,t){var n=e.as,i=void 0===n?"label":n,r=e.bsPrefix,a=e.column,l=e.srOnly,u=e.className,d=e.htmlFor,f=h(e,["as","bsPrefix","column","srOnly","className","htmlFor"]),v=Object(o.useContext)(O).controlId;r=m(r,"form-label");var y="col-form-label";"string"==typeof a&&(y=y+"-"+a);var g=p()(u,r,l&&"sr-only",a&&y);return d=d||v,a?s.a.createElement(b,c({as:"label",className:g,htmlFor:d},f)):s.a.createElement(i,c({ref:t,className:g,htmlFor:d},f))}));W.displayName="FormLabel",W.defaultProps={column:!1,srOnly:!1};var H=W,V=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.className,r=e.as,o=void 0===r?"small":r,a=e.muted,l=h(e,["bsPrefix","className","as","muted"]);return n=m(n,"form-text"),s.a.createElement(o,c({},l,{ref:t,className:p()(i,n,a&&"text-muted")}))}));V.displayName="FormText";var U=V,G=s.a.forwardRef((function(e,t){return s.a.createElement(P,c({},e,{ref:t,type:"switch"}))}));G.displayName="Switch",G.Input=P.Input,G.Label=P.Label;var q=G,$=/-(.)/g;var Z=function(e){return e[0].toUpperCase()+(t=e,t.replace($,(function(e,t){return t.toUpperCase()}))).slice(1);var t};function Q(e,t){var n=void 0===t?{}:t,i=n.displayName,r=void 0===i?Z(e):i,o=n.Component,a=n.defaultProps,l=s.a.forwardRef((function(t,n){var i=t.className,r=t.bsPrefix,a=t.as,l=void 0===a?o||"div":a,u=h(t,["className","bsPrefix","as"]),d=m(r,e);return s.a.createElement(l,c({ref:n,className:p()(i,d)},u))}));return l.defaultProps=a,l.displayName=r,l}var X=Q("form-row"),K=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.inline,r=e.className,o=e.validated,a=e.as,l=void 0===a?"form":a,u=h(e,["bsPrefix","inline","className","validated","as"]);return n=m(n,"form"),s.a.createElement(l,c({},u,{ref:t,className:p()(r,o&&"was-validated",i&&n+"-inline")}))}));K.displayName="Form",K.defaultProps={inline:!1},K.Row=X,K.Group=B,K.Control=L,K.Check=P,K.File=A,K.Switch=q,K.Label=H,K.Text=U;var J=K;var ee=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return null!=e})).reduce((function(e,t){if("function"!=typeof t)throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return null===e?t:function(){for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];e.apply(this,i),t.apply(this,i)}}),null)};function te(e){return!e||"#"===e.trim()}var ne=s.a.forwardRef((function(e,t){var n=e.as,i=void 0===n?"a":n,r=e.disabled,o=e.onKeyDown,a=h(e,["as","disabled","onKeyDown"]),l=function(e){var t=a.href,n=a.onClick;(r||te(t))&&e.preventDefault(),r?e.stopPropagation():n&&n(e)};return te(a.href)&&(a.role=a.role||"button",a.href=a.href||"#"),r&&(a.tabIndex=-1,a["aria-disabled"]=!0),s.a.createElement(i,c({ref:t},a,{onClick:l,onKeyDown:ee((function(e){" "===e.key&&(e.preventDefault(),l(e))}),o)}))}));ne.displayName="SafeAnchor";var ie=ne,re=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.variant,r=e.size,o=e.active,a=e.className,l=e.block,u=e.type,d=e.as,f=h(e,["bsPrefix","variant","size","active","className","block","type","as"]),v=m(n,"btn"),y=p()(a,v,o&&"active",v+"-"+i,l&&v+"-block",r&&v+"-"+r);if(f.href)return s.a.createElement(ie,c({},f,{as:d,ref:t,className:p()(y,f.disabled&&"disabled")}));t&&(f.ref=t),u?f.type=u:d||(f.type="button");var g=d||"button";return(s.a.createElement(g,c({},f,{className:y})))}));re.displayName="Button",re.defaultProps={variant:"primary",active:!1,disabled:!1};var oe=re,se=Q("input-group-append"),ae=Q("input-group-prepend"),le=Q("input-group-text",{Component:"span"}),ue=s.a.forwardRef((function(e,t){var n=e.bsPrefix,i=e.size,r=e.className,o=e.as,a=void 0===o?"div":o,l=h(e,["bsPrefix","size","className","as"]);return n=m(n,"input-group"),s.a.createElement(a,c({ref:t},l,{className:p()(r,n,i&&n+"-"+i)}))}));ue.displayName="InputGroup";var de=c({},ue,{Text:le,Radio:function(e){return s.a.createElement(le,null,s.a.createElement("input",c({type:"radio"},e)))},Checkbox:function(e){return s.a.createElement(le,null,s.a.createElement("input",c({type:"checkbox"},e)))},Append:se,Prepend:ae});function ce(e){return(ce="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var he=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();function fe(e){return function(){var t=e.apply(this,arguments);return new Promise((function(e,n){return function i(r,o){try{var s=t[r](o),a=s.value}catch(e){return void n(e)}if(!s.done)return Promise.resolve(a).then((function(e){i("next",e)}),(function(e){i("throw",e)}));e(a)}("next")}))}}var pe=["#0099cd","#ffca5d","#00cd99","#99cd00","#cd0099","#9900cd","#8dd3c7","#bebada","#fb8072","#80b1d3","#fdb462","#b3de69","#fccde5","#bc80bd","#ccebc5","#ffed6f","#ffffb3","#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#b15928","#64ffda","#00B8D4","#A1887F","#76FF03","#DCE775","#B388FF","#FF80AB","#D81B60","#26A69A","#FFEA00","#6200EA"],ve=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==ce(t)&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={n:10,p:.2,graph:{},viz:{nodes:[],edges:[]}},n.handleN=n.handleN.bind(n),n.handleP=n.handleP.bind(n),n.handleSubmit=n.handleSubmit.bind(n),n.run=n.run.bind(n),n.color=n.color.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+ce(t));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),he(t,[{key:"handleN",value:function(e){this.setState({n:e.target.value})}},{key:"handleP",value:function(e){this.setState({p:e.target.value})}},{key:"handleSubmit",value:function(e){e.preventDefault(),this.run()}},{key:"color",value:function(){for(var e=0,t=new Map,n=new Set,i=new Map,o=0;o<this.state.n;o++)n.add(o),i[o]=this.state.graph[o].length;for(var s=new Set(n);n.size>0;){var a=null,l=null;for(var u in i){var d=i[u];(null===a||l>d)&&s.has(parseInt(u))&&(a=u,l=d)}var c=parseInt(a),h=this.state.viz.nodes,f=this.state.viz.edges;for(var p in h[c].color=pe[e%pe.length],this.setState({viz:{nodes:h,edges:f}},fe(r.a.mark((function e(){return r.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("here"),e.next=3,new Promise((function(e){return setTimeout(e,1e3)}));case 3:case"end":return e.stop()}}),e,this)})))),n.delete(c),i.delete(c),s.delete(c),t[c]=e,this.state.graph[c])s.delete(p);console.log(s),0===s.size&&(e+=1,s=new Set(n))}}},{key:"run",value:function(){for(var e=[],t=[],n={},i=0;i<this.state.n;i++)e.push({id:i,label:i.toString(),title:i.toString()}),n[i]=[];for(var r=0;r<this.state.n;r++)for(var o=r+1;o<this.state.n;o++)Math.random()<this.state.p&&(t.push({from:r,to:o}),t.push({from:o,to:r}),n[r].push(o),n[o].push(r));this.setState({graph:n,viz:{nodes:e,edges:t}},this.color)}},{key:"render",value:function(){return s.a.createElement("div",null,s.a.createElement("h4",{style:{textAlign:"center",marginBottom:"1rem"}},"Coloring an Erdős–Rényi random graph"),s.a.createElement(J,{inline:!0,onSubmit:this.handleSubmit},s.a.createElement(b,{md:"2"}),s.a.createElement(b,{md:"4"},s.a.createElement(de,{className:"mb-2 mr-sm-2"},s.a.createElement(de.Prepend,null,s.a.createElement(de.Text,null,"Vertices")),s.a.createElement(L,{value:this.state.n,onChange:this.handleN}))),s.a.createElement(b,{md:"3"},s.a.createElement(de,{className:"mb-2 mr-sm-2"},s.a.createElement(de.Prepend,null,s.a.createElement(de.Text,null,s.a.createElement("em",null,"p"))),s.a.createElement(L,{value:this.state.p,onChange:this.handleP}))),s.a.createElement(b,{md:"1"},s.a.createElement(oe,{type:"submit",className:"mb-2"},"Run"))),s.a.createElement(d.a,{graph:this.state.viz,options:{layout:{hierarchical:!1},interaction:{zoomView:!1,dragView:!1,dragNodes:!1},edges:{color:"#000000"},height:"500px"},events:{select:function(e){e.nodes,e.edges}},getNetwork:function(e){}}))}}]),t}(s.a.Component),me=document.getElementById("iset");l.a.render(s.a.createElement(ve,null),me)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,